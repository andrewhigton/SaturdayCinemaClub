{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n//if you update profile, you overwrite the current film\n//if you update with fn removed, you create new version of same film\n// what's the answer.\n// separate the creation and update functions DONE\n//need to separete the films and users, akin to exp in devconnectors, and update separately \n//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n// morning\n// check video for ways out \n// try to get the _id working\n// at what point are you putting the films in to their own db? \n//ok, trying to get the id again, sure i can do it.\n//you know, just check back in to master.\n//can't load films now, something gone wrong with the db\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = film => {\n  // const [formData, setFormData] = useState({\n  // \t_id: film._id,\n  // \tuser: film.user,\n  // \ttitle: film.title,\n  // \tdate: film.date,\n  // \tcinema: film.cinema,\n  // \timage: film.image,\n  // \tticketPrice: film.ticketPrice,\n  // \tcrowdfundTarget: film.crowdfundTarget,\n  // \ttotalsoFar: film.totalsoFar\n  // });\n  console.log(film); // const [bookingTotal, setBookingTotal] = useState(0);\n  // you could fetch the film here, from the id, and narrow down\n  // then set the form data, with the current film\n  // ie getFilmById\n  //this fills the values with current values\n  // setFormData({\n  //      _id: !film._id ? '' : film._id,\n  //      user: !film.user ? '' : film.user,\n  //      title: !film.title ? '' : film.title,\n  //      cinema: !film.cinema ? '' : film.cinema,\n  //      date: !film.date ? '' : film.date,\n  //      image: !film.image ? '' : film.image,\n  //      ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n  //      crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n  //      totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n  //    });\n  // }\n  //console.log(film)\n  // console.log(formData)\n  // let {\n  // \t_id,\n  // \tuser,\n  // \ttitle,\n  // \tdate,\n  // \tcinema,\n  // \timage,\n  // \tticketPrice,\n  // \tcrowdfundTarget,\n  // \ttotalsoFar\n  // } = formData;\n  // let tickets = 0;\n  // const onChange = e => {\n  // \t// setFormData({ ...formData, [e.target.name]: e.target.value });\n  // \ttickets = film.totalsoFar + parseInt(e.target.value)\n  // \tsetBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n  // \tsetFormData({ ...formData, totalsoFar: tickets });\n  // \t// console.log(bookingTotal)\n  // }\t\n  // const onSubmit = (e, film_id) => {\n  // \te.preventDefault();\n  // \t// console.log(film_id)\n  // \t// updateFilm(formData, history);\n  // };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"fgfg\"));\n}; // const CheckoutPage = ({\n// \tupdateFilm,\n// \tfilm,\n// \t//what's the diff these two profiles? \n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t});\n// \tconsole.log(film);\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n// \t// you could fetch the film here, from the id, and narrow down\n// \t// then set the form data, with the current film\n// \t// ie getFilmById\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \t\t//this fills the values with current values\n// \tsetFormData({\n//       _id: !profile._id ? '' : profile._id,\n//       user: !profile.user ? '' : profile.user,\n//       title: !profile.title ? '' : profile.title,\n//       cinema: !profile.cinema ? '' : profile.cinema,\n//       date: !profile.date ? '' : profile.date,\n//       image: !profile.image ? '' : profile.image,\n//       ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n//       crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n//       totalsoFar: !profile.totalsoFar ? '' : profile.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n// \t//console.log(profile)\n// \t// console.log(formData)\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n// \tlet tickets = 0;\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\tconsole.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\n\nCheckoutPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getCurrentProfile\n})(withRouter(CheckoutPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","updateFilm","getCurrentProfile","StripeCheckoutButton","CheckoutPage","film","console","log","propTypes","func","isRequired","profile","object","mapStateToProps","state"],"mappings":";AAAA;AACA;AACA;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,kBAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,uBAA9C;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAZ8B,CAc9B;AAEA;AACA;AACA;AACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADA;AAMA,CArED,C,CAyb,GAAyB;AACxBP,EAAAA,UAAU,EAAEF,SAAS,CAACU,IAAV,CAAeC,UADH;AAExBR,EAAAA,iBAAiB,EAAEH,SAAS,CAACU,IAAV,CAAeC,UAFV;AAGxBC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,MAAV,CAAiBF;AAHF,CAAzB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AACjCH,EAAAA,OAAO,EAAEG,KAAK,CAACH;AADkB,CAAL,CAA7B;;AAIA,eAAeX,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CACdL,UAAU,CAACO,YAAD,CADI,CAAf","sourcesContent":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t//if you update profile, you overwrite the current film\n\t//if you update with fn removed, you create new version of same film\n\t// what's the answer.\n\t// separate the creation and update functions DONE\n\t//need to separete the films and users, akin to exp in devconnectors, and update separately \n\t//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n\n// morning\n// check video for ways out \n// try to get the _id working\n// at what point are you putting the films in to their own db? \n\n//ok, trying to get the id again, sure i can do it.\n//you know, just check back in to master.\n//can't load films now, something gone wrong with the db\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = (film) => {\n\t// const [formData, setFormData] = useState({\n\t// \t_id: film._id,\n\t// \tuser: film.user,\n\t// \ttitle: film.title,\n\t// \tdate: film.date,\n\t// \tcinema: film.cinema,\n\t// \timage: film.image,\n\t// \tticketPrice: film.ticketPrice,\n\t// \tcrowdfundTarget: film.crowdfundTarget,\n\t// \ttotalsoFar: film.totalsoFar\n\t// });\n\tconsole.log(film);\n\n\t// const [bookingTotal, setBookingTotal] = useState(0);\n\n\t// you could fetch the film here, from the id, and narrow down\n\t// then set the form data, with the current film\n\t// ie getFilmById\n\t\t//this fills the values with current values\n\t// setFormData({\n //      _id: !film._id ? '' : film._id,\n //      user: !film.user ? '' : film.user,\n //      title: !film.title ? '' : film.title,\n //      cinema: !film.cinema ? '' : film.cinema,\n //      date: !film.date ? '' : film.date,\n //      image: !film.image ? '' : film.image,\n //      ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n //      crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n //      totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n //    });\n\n  // }\n\t//console.log(film)\n\t// console.log(formData)\n\t// let {\n\t// \t_id,\n\t// \tuser,\n\t// \ttitle,\n\t// \tdate,\n\t// \tcinema,\n\t// \timage,\n\t// \tticketPrice,\n\t// \tcrowdfundTarget,\n\t// \ttotalsoFar\n\t// } = formData;\n\n\t// let tickets = 0;\n\t\t\t\n\t// const onChange = e => {\n\t// \t// setFormData({ ...formData, [e.target.name]: e.target.value });\n\t// \ttickets = film.totalsoFar + parseInt(e.target.value)\n\t// \tsetBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n\t// \tsetFormData({ ...formData, totalsoFar: tickets });\n\t// \t// console.log(bookingTotal)\n\t// }\t\n\t\t\n\t// const onSubmit = (e, film_id) => {\n\t// \te.preventDefault();\n\t// \t// console.log(film_id)\n\t// \t// updateFilm(formData, history);\n\t// };\n\n\treturn (\n\t<div>\n\t<p>fgfg</p>\n\t\t</div>\n\t);\n\n}\n\n\n\n// const CheckoutPage = ({\n// \tupdateFilm,\n// \tfilm,\n// \t//what's the diff these two profiles? \n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t});\n// \tconsole.log(film);\n\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n\n// \t// you could fetch the film here, from the id, and narrow down\n// \t// then set the form data, with the current film\n// \t// ie getFilmById\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n\t\t\n// \t\t//this fills the values with current values\n// \tsetFormData({\n//       _id: !profile._id ? '' : profile._id,\n//       user: !profile.user ? '' : profile.user,\n//       title: !profile.title ? '' : profile.title,\n//       cinema: !profile.cinema ? '' : profile.cinema,\n//       date: !profile.date ? '' : profile.date,\n//       image: !profile.image ? '' : profile.image,\n//       ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n//       crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n//       totalsoFar: !profile.totalsoFar ? '' : profile.totalsoFar\n//     });\n\n//   }, [loading, getCurrentProfile]);\n// \t//console.log(profile)\n// \t// console.log(formData)\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n\n// \tlet tickets = 0;\n\t\t\t\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n\t\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\tconsole.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n\t\t\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\nCheckoutPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile\n});\n\nexport default connect(mapStateToProps, { updateFilm, getCurrentProfile })(\n\twithRouter(CheckoutPage)\n);"]},"metadata":{},"sourceType":"module"}