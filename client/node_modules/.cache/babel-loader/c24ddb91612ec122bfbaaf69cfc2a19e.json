{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n// 1 enter number of tickets, calculate price,  go to booking payment\n// 2 send new object to createFilm\n// 3 create tickets, place on dashboard\n// 4 with two sections, one for films, one for tickets \nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = ({\n  createFilm,\n  // getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history\n}) => {\n  // const { title, date, cinema, ticketPrice, crowdfundTarget, totalsoFar } = profile;\n  const _useState = useState({\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; // useEffect(() => {\n  // \tgetCurrentProfile();\n  // \t// eslint-disable-next-line react-hooks/exhaustive-deps\n  // setFormData({\n  //      user: !profile.user ? '' : profile.user,\n  //      title: !profile.title ? '' : profile.title,\n  //      cinema: !profile.cinema ? '' : profile.cinema,\n  //      date: !profile.date ? '' : profile.date,\n  //      image: !profile.social ? '' : profile.social.image,\n  //      ticketPrice: !profile.social ? '' : profile.social.ticketPrice,\n  //      crowdfundTarget: !profile.social ? '' : profile.social.crowdfundTarget,\n  //      totalsoFar: !profile.social ? '' : profile.social.totalsoFar\n  //    });\n  //  }, [loading, getCurrentProfile]);\n\n\n  console.log(profile);\n  const title = formData.title,\n        date = formData.date,\n        cinema = formData.cinema,\n        image = formData.image,\n        ticketPrice = formData.ticketPrice,\n        crowdfundTarget = formData.crowdfundTarget,\n        totalsoFar = formData.totalsoFar;\n  let tickets;\n\n  const onTicketChange = e => {\n    tickets = e.target.value;\n  };\n\n  console.log(tickets);\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createFilm(formData, history, true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n};\n\nCheckoutPage.propTypes = {\n  createFilm: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createFilm,\n  getCurrentProfile\n})(withRouter(CheckoutPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","PropTypes","connect","createFilm","getCurrentProfile","StripeCheckoutButton","CheckoutPage","profile","loading","history","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","console","log","tickets","onTicketChange","e","target","value","onChange","name","onSubmit","preventDefault","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// todo \n// 1 enter number of tickets, calculate price,  go to booking payment\n// 2 send new object to createFilm\n// 3 create tickets, place on dashboard\n// 4 with two sections, one for films, one for tickets \n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = ({\n\tcreateFilm,\n\t// getCurrentProfile,\n\tprofile: { profile, loading },\n\thistory\n}) => {\n\n\t// const { title, date, cinema, ticketPrice, crowdfundTarget, totalsoFar } = profile;\n\n\tconst [formData, setFormData] = useState({\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: '',\n\t});\n\n\n\n\t// useEffect(() => {\n\t// \tgetCurrentProfile();\n\t// \t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t// setFormData({\n //      user: !profile.user ? '' : profile.user,\n //      title: !profile.title ? '' : profile.title,\n //      cinema: !profile.cinema ? '' : profile.cinema,\n //      date: !profile.date ? '' : profile.date,\n //      image: !profile.social ? '' : profile.social.image,\n //      ticketPrice: !profile.social ? '' : profile.social.ticketPrice,\n //      crowdfundTarget: !profile.social ? '' : profile.social.crowdfundTarget,\n //      totalsoFar: !profile.social ? '' : profile.social.totalsoFar\n //    });\n //  }, [loading, getCurrentProfile]);\n\tconsole.log(profile)\n\n\tconst {\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\tlet tickets;\n\n\tconst onTicketChange = e => {\n\t\ttickets = e.target.value\n\t}\n\n\tconsole.log(tickets)\n\t\n\tconst onChange = e =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\tcreateFilm(formData, history, true);\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t<StripeCheckoutButton />\n\t\t</div>\n\t);\n};\n\nCheckoutPage.propTypes = {\n\tcreateFilm: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile\n});\n\nexport default connect(mapStateToProps, { createFilm, getCurrentProfile })(\n\twithRouter(CheckoutPage)\n);"]},"metadata":{},"sourceType":"module"}