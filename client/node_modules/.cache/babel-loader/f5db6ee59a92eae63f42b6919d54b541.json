{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n//if you update profile, you overwrite the current film\n//if you update with fn removed, you create new version of same film\n// what's the answer.\n// separate the creation and update functions DONE\n//need to separete the films and users, akin to exp in devconnectors, and update separately \n//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n// morning\n// check video for ways out \n// try to get the _id working\n// at what point are you putting the films in to their own db? \n//ok, trying to get the id again, sure i can do it.\n//you know, just check back in to master.\n//can't load films now, something gone wrong with the db\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile, getFilmById } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport queryString from 'query-string';\n\nconst CheckoutPage = ({\n  updateFilm,\n  match,\n  //what's the diff these two profiles? \n  // getCurrentProfile,\n  getFilmById,\n  film,\n  // profile: { profile, loading },\n  history // id,\n\n}) => {\n  const _useState = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; //const [currentFilm, useParams] = useState(params);\n\n\n  let params = useParams();\n  const params1 = parseInt(params); //jesus christ, get this working next. eveything a fuckng battle\n\n  const currentFilm = film.film.filter(item => {\n    // console.log(item._id)\n    // console.log(params.id)\n    return item._id === params.id;\n  }); // console.log(currentFilm);\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookingTotal = _useState4[0],\n        setBookingTotal = _useState4[1]; //what next? create a function to get current film? then fill the values?\n  // fills the values with current values\n\n\n  useEffect(() => {\n    getFilmById(params); // getCurrentProfile();\n\n    setFormData({\n      _id: !currentFilm._id ? '' : currentFilm._id,\n      user: !currentFilm.user ? '' : currentFilm.user,\n      title: !currentFilm.title ? '' : currentFilm.title,\n      cinema: !currentFilm.cinema ? '' : currentFilm.cinema,\n      date: !currentFilm.date ? '' : currentFilm.date,\n      image: !currentFilm.image ? '' : currentFilm.image,\n      ticketPrice: !currentFilm.ticketPrice ? '' : currentFilm.ticketPrice,\n      crowdfundTarget: !currentFilm.crowdfundTarget ? '' : currentFilm.crowdfundTarget,\n      totalsoFar: !currentFilm.totalsoFar ? '' : currentFilm.totalsoFar\n    });\n  }, [getFilmById]); // console.log(film)\n  // console.log(formData)\n\n  let _id = formData._id,\n      user = formData.user,\n      title = formData.title,\n      date = formData.date,\n      cinema = formData.cinema,\n      image = formData.image,\n      ticketPrice = formData.ticketPrice,\n      crowdfundTarget = formData.crowdfundTarget,\n      totalsoFar = formData.totalsoFar;\n  let tickets = 0;\n\n  const onChange = e => {\n    // setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = currentFilm.totalsoFar + parseInt(e.target.value);\n    setBookingTotal(parseInt(currentFilm.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    })); // console.log(bookingTotal)\n  };\n\n  const onSubmit = (e, film_id) => {\n    e.preventDefault();\n    console.log(film_id);\n    updateFilm(formData, history);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Film: \", currentFilm.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Date: \", currentFilm.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Price: \\xA3\", currentFilm.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", currentFilm.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Tickets sold: \", currentFilm.totalsoFar)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, currentFilm._id))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    // movie_id={film}\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), \"}\")));\n};\n\nCheckoutPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  getCurrentProfrile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  film: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getFilmById\n})(withRouter(CheckoutPage)); // const CheckoutPage = ({\n// \tupdateFilm,\n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t}, [setFormData]);\n// \tlet params = useParams();\n// \tconst film = params;\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n// \t// fills the values with current values\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \tsetFormData({\n//       _id: !film._id ? '' : film._id,\n//       user: !film.user ? '' : film.user,\n//       title: !film.title ? '' : film.title,\n//       cinema: !film.cinema ? '' : film.cinema,\n//       date: !film.date ? '' : film.date,\n//       image: !film.image ? '' : film.image,\n//       ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n//       crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n//       totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n// \tlet tickets = 0;\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\t// console.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","useParams","Link","withRouter","Redirect","PropTypes","connect","updateFilm","getCurrentProfile","getFilmById","StripeCheckoutButton","queryString","CheckoutPage","match","film","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","params","params1","parseInt","currentFilm","filter","item","id","bookingTotal","setBookingTotal","tickets","onChange","e","target","value","onSubmit","film_id","preventDefault","console","log","propTypes","func","isRequired","getCurrentProfrile","object","profile","mapStateToProps","state"],"mappings":"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":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t//if you update profile, you overwrite the current film\n\t//if you update with fn removed, you create new version of same film\n\t// what's the answer.\n\t// separate the creation and update functions DONE\n\t//need to separete the films and users, akin to exp in devconnectors, and update separately \n\t//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n\n// morning\n// check video for ways out \n// try to get the _id working\n// at what point are you putting the films in to their own db? \n\n//ok, trying to get the id again, sure i can do it.\n//you know, just check back in to master.\n//can't load films now, something gone wrong with the db\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams} from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile, getFilmById } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport queryString from 'query-string';\n\n\nconst CheckoutPage = ({\n\tupdateFilm,\n\tmatch,\n\t\n\t//what's the diff these two profiles? \n\t// getCurrentProfile,\n\tgetFilmById,\n\tfilm,\n\t// profile: { profile, loading },\n\thistory, \n\t// id,\n}) => {\n\tconst [formData, setFormData] = useState({\n\t\t_id: '',\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\n\t//const [currentFilm, useParams] = useState(params);\n\n\tlet params = useParams();\n\tconst params1 = parseInt(params)\n\t//jesus christ, get this working next. eveything a fuckng battle\n\tconst currentFilm = film.film.filter(item => {\n\t\t// console.log(item._id)\n\t\t// console.log(params.id)\n\t\treturn item._id === params.id;\n\t});\n\n\t// console.log(currentFilm);\n\n\tconst [bookingTotal, setBookingTotal] = useState(0);\n\t\n\t//what next? create a function to get current film? then fill the values?\n\t// fills the values with current values\n\tuseEffect(() => {\n\t\tgetFilmById(params)\n\t\t// getCurrentProfile();\n\tsetFormData({\n      _id: !currentFilm._id ? '' : currentFilm._id,\n      user: !currentFilm.user ? '' : currentFilm.user,\n      title: !currentFilm.title ? '' : currentFilm.title,\n      cinema: !currentFilm.cinema ? '' : currentFilm.cinema,\n      date: !currentFilm.date ? '' : currentFilm.date,\n      image: !currentFilm.image ? '' : currentFilm.image,\n      ticketPrice: !currentFilm.ticketPrice ? '' : currentFilm.ticketPrice,\n      crowdfundTarget: !currentFilm.crowdfundTarget ? '' : currentFilm.crowdfundTarget,\n      totalsoFar: !currentFilm.totalsoFar ? '' : currentFilm.totalsoFar\n    });\n  }, [getFilmById]);\n\t// console.log(film)\n\t// console.log(formData)\n\tlet {\n\t\t_id,\n\t\tuser,\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\tlet tickets = 0;\n\t\t\t\n\tconst onChange = e => {\n\t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n\t\ttickets = currentFilm.totalsoFar + parseInt(e.target.value)\n\t\tsetBookingTotal(parseInt(currentFilm.ticketPrice) * parseInt(e.target.value));\n\t\tsetFormData({ ...formData, totalsoFar: tickets });\n\t\t// console.log(bookingTotal)\n\t}\t\n\t\t\n\tconst onSubmit = (e, film_id) => {\n\t\te.preventDefault();\n\t\tconsole.log(film_id)\n\t\tupdateFilm(formData, history);\n\t};\n\n\treturn (\n\t<div>\n\t<form>\n\t<div className='checkout-page how-it-works'>\n\t\t<div className='checkout-header'>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Film: {currentFilm.title}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Date: {currentFilm.date} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Price: £{currentFilm.ticketPrice} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Crowdfunding Target: {currentFilm.crowdfundTarget} </span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>Tickets sold: {currentFilm.totalsoFar}</span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>{currentFilm._id}</span>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</form>\n\t\t\t<div className='header-block'>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Enter number of tickets'\n\t\t\t\t\tname='tickets'\n\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Basket total: £{bookingTotal}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\n\t\t\t\t<span \n\t\t\t\t// movie_id={film}\n\t\t\t\tonClick={e => onSubmit(e)}>\n\t\t\t\t\t<StripeCheckoutButton />\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n\nCheckoutPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\tgetCurrentProfrile: PropTypes.func.isRequired,\n\tgetFilmById: PropTypes.func.isRequired,\n\tfilm: PropTypes.object.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile,\n\tfilm: state.film\n});\n\nexport default connect(mapStateToProps, { updateFilm, getFilmById })(\n\twithRouter(CheckoutPage)\n);\n\n// const CheckoutPage = ({\n// \tupdateFilm,\n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t}, [setFormData]);\n\n// \tlet params = useParams();\n// \tconst film = params;\n\t\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n\t\n// \t// fills the values with current values\n\t\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \tsetFormData({\n//       _id: !film._id ? '' : film._id,\n//       user: !film.user ? '' : film.user,\n//       title: !film.title ? '' : film.title,\n//       cinema: !film.cinema ? '' : film.cinema,\n//       date: !film.date ? '' : film.date,\n//       image: !film.image ? '' : film.image,\n//       ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n//       crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n//       totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n\n// \tlet tickets = 0;\n\t\t\t\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n\t\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\t// console.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n\t\t\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\n"]},"metadata":{},"sourceType":"module"}