{"ast":null,"code":"import _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/carousel/Carousel.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //import { loadFilms } from '../../actions/film';\n//import ImageSlide from '../carousel/ImageSlide';\n\nimport ImageSlide from './ImageSlide';\nimport Arrow from './Arrow';\nimport '../../App1.css'; // import Films from '../../films/Films';\n\nconst Carousel = ({\n  films: {\n    film\n  }\n}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentImageIndex = _useState2[0],\n        setImageIndex = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  console.log(currentImageIndex);\n  console.log(count);\n  useEffect(() => {\n    setImageIndex();\n  }, [setImageIndex]); // useEffect(() => {\n  // nextSlide ();\n  // }, [nextSlide]);\n  //if (film === null) return null;\t\n\n  function previousSlide() {\n    //if (film === null) return null;\t\n    //console.log('prev')\n    const lastIndex = film.length - 1;\n    console.log(lastIndex);\n    const shouldResetIndex = currentImageIndex === 0;\n    console.log(shouldResetIndex);\n    const index = shouldResetIndex ? lastIndex : currentImageIndex - 1;\n    console.log(index);\n    setImageIndex(index);\n  }\n\n  function nextSlide() {\n    //console.log('next')\n    // if (film === null) return null;\t\n    const lastIndex = film.length - 1;\n    const shouldResetIndex = currentImageIndex === lastIndex;\n    const index = shouldResetIndex ? 0 : currentImageIndex + 1;\n    console.log(index);\n    setImageIndex(index);\n  }\n\n  if (film === null) return null; // render () {\n\n  return React.createElement(\"div\", {\n    className: \"carousel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    direction: \"left\",\n    clickFunction: previousSlide,\n    glyph: \"\\u25C0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(ImageSlide, {\n    url: film.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Arrow, {\n    direction: \"right\",\n    clickFunction: nextSlide,\n    glyph: \"\\u25B6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}; // class Carousel extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       currentImageIndex: 0\n//     };\n//     this.nextSlide = this.nextSlide.bind(this);\n//     this.previousSlide = this.previousSlide.bind(this);\n// }\n//     previousSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === 0;\n//     const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n//   \tnextSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === lastIndex;\n//     const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n//   render () {\n//     return (\n//       <div className=\"carousel\">\n//       \t<Arrow\n//           direction=\"left\"\n//           clickFunction={ this.previousSlide }\n//           glyph=\"&#9664;\" />\n//         <ImageSlide url={ imgUrls[this.state.currentImageIndex] } />\n//         <Arrow\n//           direction=\"right\"\n//           clickFunction={ this.nextSlide }\n//           glyph=\"&#9654;\" />\n//       </div>\n//     );\n//   }\n// }\n// export default Carousel;\n\n\nCarousel.propTypes = {\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps)(Carousel);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/carousel/Carousel.js"],"names":["React","useState","useEffect","PropTypes","connect","ImageSlide","Arrow","Carousel","films","film","currentImageIndex","setImageIndex","count","setCount","console","log","previousSlide","lastIndex","length","shouldResetIndex","index","nextSlide","image","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//import { loadFilms } from '../../actions/film';\n//import ImageSlide from '../carousel/ImageSlide';\nimport ImageSlide from './ImageSlide';\nimport Arrow from './Arrow'; \nimport '../../App1.css';\n// import Films from '../../films/Films';\n\nconst Carousel = ({ films: \n\t{ film } \n\t}) => {\n\t\n\tconst [ currentImageIndex, setImageIndex ] = useState(1);\n\tconst [ count, setCount ] = useState(0);\n\n\tconsole.log(currentImageIndex)\n\tconsole.log(count)\n\n\tuseEffect(() => {\n\tsetImageIndex();\n\t}, [setImageIndex]);\n\n\t// useEffect(() => {\n\t// nextSlide ();\n\t// }, [nextSlide]);\n\n\t//if (film === null) return null;\t\n\tfunction previousSlide () {\n\t//if (film === null) return null;\t\n\t//console.log('prev')\n    const lastIndex = film.length - 1;\n    console.log(lastIndex)\n    const shouldResetIndex = currentImageIndex === 0;\n    console.log(shouldResetIndex)\n    const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n    console.log(index)\n    setImageIndex(index)\t\n\t\t}\n\t\n  \tfunction nextSlide () {\n  \t\t//console.log('next')\n\t// if (film === null) return null;\t\n    const lastIndex = film.length - 1;\n    const shouldResetIndex = currentImageIndex === lastIndex;\n    const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n    console.log(index)\n\tsetImageIndex(index)\n  \t\t}\n\n  \t\tif (film === null) return null;\n\t// render () {\n    return (\n\n      <div className=\"carousel\">\n      \t<Arrow\n          direction=\"left\"\n          clickFunction={ previousSlide } \n          glyph=\"&#9664;\" \n         />\n\t\t\t\n\t\t\t<ImageSlide url={ film.image } />     \n\t         \n        <Arrow\n          direction=\"right\"\n          clickFunction={ nextSlide }\n          glyph=\"&#9654;\" \n         />\n      </div>\n    );\n}\n\n// class Carousel extends React.Component {\n//   constructor (props) {\n//     super(props);\n\n//     this.state = {\n//       currentImageIndex: 0\n//     };\n\n//     this.nextSlide = this.nextSlide.bind(this);\n//     this.previousSlide = this.previousSlide.bind(this);\n// }\n\n//     previousSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === 0;\n//     const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n\n//   \tnextSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === lastIndex;\n//     const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n\n//   render () {\n//     return (\n//       <div className=\"carousel\">\n//       \t<Arrow\n//           direction=\"left\"\n//           clickFunction={ this.previousSlide }\n//           glyph=\"&#9664;\" />\n\n//         <ImageSlide url={ imgUrls[this.state.currentImageIndex] } />\n//         <Arrow\n//           direction=\"right\"\n//           clickFunction={ this.nextSlide }\n//           glyph=\"&#9654;\" />\n//       </div>\n\n//     );\n//   }\n// }\n// export default Carousel;\n\nCarousel.propTypes = {\n\tfilms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilms: state.film\n});\n\nexport default connect(mapStateToProps)(Carousel);"]},"metadata":{},"sourceType":"module"}