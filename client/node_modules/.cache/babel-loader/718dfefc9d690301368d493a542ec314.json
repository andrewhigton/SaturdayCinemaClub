{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { updateProfileTickets } from '../../actions/profile'; //import { UPDATE_FILM } from '../../actions/types';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({\n  film: {\n    film,\n    loading\n  },\n  match,\n  getFilmById,\n  updateFilm,\n  updateProfileTickets,\n  history\n}) => {\n  let tickets = 0;\n  let ticketsTotal = 0;\n  let bookingTotal = 0; //this isn't updating\n\n  const _useState = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        filmData = _useState2[0],\n        setFilmData = _useState2[1]; //let [bookingTotal, setBookingTotal] = useState(0);\n\n\n  const _useState3 = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: ticketsTotal,\n    cost: bookingTotal\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ticketData = _useState4[0],\n        setTicketData = _useState4[1]; // const ticketsChanges = (e) => {\n  //  setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value))\n  //  setTicketBookingCost(e);\n  // } \n\n\n  const changes = e => {\n    ticketsTotal += parseInt(e.target.value);\n    bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value); //neither of these work\n\n    setTotalSoFar(totalTicketsBooked); //setTicketTotalSoFar(totalTicketsBooked);\n    //this one works\n\n    setTicketNumber(ticketsTotal); //this no longer works \n\n    setTicketBookingCost(bookingTotal);\n  }; // const updateTickets = (ticketsTotal, bookingTotal) => {\n  //     setTicketNumber(ticketsTotal);\n  //     setTicketBookingCost(bookingTotal);\n  // }\n\n\n  const setTicketNumber = e => {\n    console.log(ticketsTotal);\n    setTicketData(_objectSpread({}, ticketData, {\n      numberOfTickets: ticketsTotal\n    }));\n  }; //works\n\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData(_objectSpread({}, filmData, {\n      totalsoFar: totalTicketsBooked\n    }));\n    setTicketData(_objectSpread({}, ticketData, {\n      totalsoFar: totalTicketsBooked\n    }));\n  };\n\n  const setTicketTotalSoFar = totalTicketsBooked => {\n    console.log(totalTicketsBooked);\n    setTicketData(_objectSpread({}, ticketData, {\n      totalsoFar: totalTicketsBooked\n    }));\n  }; //works\n\n\n  const setTicketBookingCost = e => {\n    //bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value); \n    console.log(bookingTotal); //setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n\n    setTicketData(_objectSpread({}, ticketData, {\n      cost: bookingTotal\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateFilm(filmData, history);\n    console.log(ticketData); //updateProfileTickets(ticketData, history);\n  };\n\n  if (film === null) return null;\n  return React.createElement(\"div\", {\n    className: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\" // onInput={e => setTicketBookingCost(e)}\n    ,\n    onChange: e => changes(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })))));\n};\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateProfileTickets: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  getFilmById,\n  updateFilm,\n  updateProfileTickets\n})(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js"],"names":["React","useEffect","useState","Fragment","connect","useParams","useSelector","useDispatch","Link","withRouter","Redirect","StripeCheckoutButton","PropTypes","getFilmById","updateFilm","updateProfileTickets","CheckoutFilm","film","loading","match","history","tickets","ticketsTotal","bookingTotal","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","filmData","setFilmData","numberOfTickets","cost","ticketData","setTicketData","changes","e","parseInt","target","value","totalTicketsBooked","setTotalSoFar","setTicketNumber","setTicketBookingCost","console","log","setTicketTotalSoFar","onSubmit","preventDefault","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { updateProfileTickets } from '../../actions/profile';\n//import { UPDATE_FILM } from '../../actions/types';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({ \n  film: {film, loading}, \n  match, \n  getFilmById, \n  updateFilm, \n  updateProfileTickets,\n  history }) => {\n\n  let tickets = 0;\n  let ticketsTotal = 0; \n  let bookingTotal = 0;\n  //this isn't updating\n\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  //let [bookingTotal, setBookingTotal] = useState(0);\n\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: ticketsTotal,\n    cost: bookingTotal\n  });\n    \n   // const ticketsChanges = (e) => {\n   //  setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value))\n   //  setTicketBookingCost(e);\n   // } \n\n  const changes = (e) => {   \n    ticketsTotal += parseInt(e.target.value);\n    bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    //neither of these work\n    setTotalSoFar(totalTicketsBooked);\n    //setTicketTotalSoFar(totalTicketsBooked);\n     //this one works\n    setTicketNumber(ticketsTotal);\n    //this no longer works \n    setTicketBookingCost(bookingTotal)\n  }\n\n  // const updateTickets = (ticketsTotal, bookingTotal) => {\n  //     setTicketNumber(ticketsTotal);\n  //     setTicketBookingCost(bookingTotal);\n  // }\n\n  const setTicketNumber = (e) => {\n    console.log(ticketsTotal)\n    setTicketData({...ticketData, numberOfTickets: ticketsTotal })\n  }\n  //works\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n    setTicketData({...ticketData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked) => {\n   console.log(totalTicketsBooked)\n    setTicketData({...ticketData, totalsoFar: totalTicketsBooked })\n  } \n\n  //works\n  const setTicketBookingCost = (e) => {\n   //bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value); \n   console.log(bookingTotal)\n    //setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setTicketData({ ...ticketData, cost: bookingTotal })\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateFilm(filmData, history);\n    console.log(ticketData);\n    //updateProfileTickets(ticketData, history);\n  };\n\n  if (film === null) return null;\n  return (\n    <div className=\"film\">\n    <div>\n      <form>\n      <div className='checkout-page how-it-works'>\n        <div className='checkout-header'>\n          <div className='header-block'>\n\n            <span>Film: {film.title}</span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Date: {film.date} </span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        </div>\n        </div>\n        </form>\n      \n\n          <div className='header-block'>\n            <input\n              type='number'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              // onInput={e => setTicketBookingCost(e)}\n              onChange={e => changes(e)}\n            />\n          </div>\n          <div className='header-block'>\n            <span>Basket total: £{bookingTotal}</span>\n          </div>\n          <div>\n          <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n          </Link>\n          </div>\n          <div>\n            \n            <span onClick={e => onSubmit(e)}> \n              <StripeCheckoutButton />\n            </span>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateProfileTickets: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, { \n  getFilmById, \n  updateFilm, \n  updateProfileTickets \n})(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}