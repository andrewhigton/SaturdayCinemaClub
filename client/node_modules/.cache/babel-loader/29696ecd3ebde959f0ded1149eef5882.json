{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { updateProfileTickets } from '../../actions/profile'; //import { UPDATE_FILM } from '../../actions/types';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({\n  film: {\n    film,\n    loading\n  },\n  match,\n  getFilmById,\n  updateFilm,\n  updateProfileTickets,\n  history\n}) => {\n  const _useState = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        filmData = _useState2[0],\n        setFilmData = _useState2[1]; //let [bookingTotal, setBookingTotal] = useState(0);\n\n\n  let tickets = 0;\n  let ticketsTotal = 0;\n  let bookingTotal = 0;\n\n  const _useState3 = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: ticketsTotal,\n    cost: bookingTotal\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ticketData = _useState4[0],\n        setTicketData = _useState4[1];\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateFilm(filmData, history);\n    console.log(ticketData); //updateProfileTickets(ticketData, history);\n  }; // const ticketsChanges = (e) => {\n  //  setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value))\n  //  setTicketBookingCost(e);\n  // } \n\n\n  const changes = e => {\n    ticketsTotal += parseInt(e.target.value);\n    bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value);\n    setFilmTotalSoFar(e);\n    setTicketTotalSoFar(e);\n    setTicketNumber(ticketsTotal);\n    setTicketBookingCost(bookingTotal);\n  };\n\n  const setTicketNumber = e => {\n    console.log(ticketsTotal);\n    setTicketData(_objectSpread({}, ticketData, {\n      numberOfTickets: ticketsTotal\n    }));\n  };\n\n  const setFilmTotalSoFar = e => {\n    setFilmData(_objectSpread({}, filmData, {\n      totalsoFar: ticketsTotal\n    }));\n  };\n\n  const setTicketTotalSoFar = e => {\n    setTicketData(_objectSpread({}, ticketData, {\n      totalsoFar: ticketsTotal\n    }));\n  }; //next is tickets totalsofar and numberofTickets \n\n\n  const setTicketBookingCost = e => {\n    //bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value); \n    console.log(bookingTotal); //setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n\n    setTicketData(_objectSpread({}, ticketData, {\n      cost: bookingTotal\n    }));\n  };\n\n  if (film === null) return null;\n  return React.createElement(\"div\", {\n    className: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\" // onInput={e => setTicketBookingCost(e)}\n    ,\n    onChange: e => changes(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))));\n};\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateProfileTickets: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  getFilmById,\n  updateFilm,\n  updateProfileTickets\n})(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js"],"names":["React","useEffect","useState","Fragment","connect","useParams","useSelector","useDispatch","Link","withRouter","Redirect","StripeCheckoutButton","PropTypes","getFilmById","updateFilm","updateProfileTickets","CheckoutFilm","film","loading","match","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","filmData","setFilmData","tickets","ticketsTotal","bookingTotal","numberOfTickets","cost","ticketData","setTicketData","onSubmit","e","preventDefault","console","log","changes","parseInt","target","value","setFilmTotalSoFar","setTicketTotalSoFar","setTicketNumber","setTicketBookingCost","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { updateProfileTickets } from '../../actions/profile';\n//import { UPDATE_FILM } from '../../actions/types';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({ \n  film: {film, loading}, \n  match, \n  getFilmById, \n  updateFilm, \n  updateProfileTickets,\n  history }) => {\n\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  //let [bookingTotal, setBookingTotal] = useState(0);\n\n  let tickets = 0;\n  let ticketsTotal = 0; \n  let bookingTotal = 0;\n\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: ticketsTotal,\n    cost: bookingTotal\n  });\n    \n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateFilm(filmData, history);\n    console.log(ticketData);\n    //updateProfileTickets(ticketData, history);\n  };\n\n   // const ticketsChanges = (e) => {\n   //  setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value))\n   //  setTicketBookingCost(e);\n   // } \n\n  const changes = (e) => {   \n    ticketsTotal += parseInt(e.target.value);\n    bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value); \n    setFilmTotalSoFar(e);\n    setTicketTotalSoFar(e);\n    \n    setTicketNumber(ticketsTotal);\n    setTicketBookingCost(bookingTotal);\n  }\n\n  const setTicketNumber = (e) => {\n    console.log(ticketsTotal)\n    setTicketData({...ticketData, numberOfTickets: ticketsTotal })\n  }\n\n  const setFilmTotalSoFar = (e) => {\n    setFilmData({ ...filmData, totalsoFar: ticketsTotal });\n  }\n\n  const setTicketTotalSoFar = (e) => {\n    setTicketData({...ticketData, totalsoFar: ticketsTotal })\n  } \n\n  //next is tickets totalsofar and numberofTickets \n  const setTicketBookingCost = (e) => {\n   //bookingTotal += parseInt(film.ticketPrice) * parseInt(e.target.value); \n   console.log(bookingTotal)\n    //setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setTicketData({ ...ticketData, cost: bookingTotal })\n  }\n  \n  if (film === null) return null;\n  return (\n    <div className=\"film\">\n    <div>\n      <form>\n      <div className='checkout-page how-it-works'>\n        <div className='checkout-header'>\n          <div className='header-block'>\n\n            <span>Film: {film.title}</span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Date: {film.date} </span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        </div>\n        </div>\n        </form>\n      \n\n          <div className='header-block'>\n            <input\n              type='number'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              // onInput={e => setTicketBookingCost(e)}\n              onChange={e => changes(e)}\n            />\n          </div>\n          <div className='header-block'>\n            <span>Basket total: £{bookingTotal}</span>\n          </div>\n          <div>\n          <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n          </Link>\n          </div>\n          <div>\n            \n            <span onClick={e => onSubmit(e)}> \n              <StripeCheckoutButton />\n            </span>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateProfileTickets: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, { \n  getFilmById, \n  updateFilm, \n  updateProfileTickets \n})(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}