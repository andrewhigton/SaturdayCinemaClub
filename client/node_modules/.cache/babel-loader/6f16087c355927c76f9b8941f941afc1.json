{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { updateProfileTickets } from '../../actions/profile'; //import { UPDATE_FILM } from '../../actions/types';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({\n  film: {\n    film,\n    loading\n  },\n  match,\n  getFilmById,\n  updateFilm,\n  updateProfileTickets,\n  history\n}) => {\n  const _useState = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  let _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookingTotal = _useState4[0],\n      setBookingTotal = _useState4[1];\n\n  let tickets = 0;\n  let ticketsTotal = film.totalsoFar;\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: ticketsTotal\n    })); // setTicketData({...ticketData, totalsoFar: ticketsTotal })\n    // // setTicketData({...ticketData, cost: bookingTotal })\n    // // setTicketData({...ticketData, numberOfTickets: tickets })\n  }; //how to sort this mess out? \n  //what do you need to set?\n  //when?\n  //   numberOfTickets first \n  // totalsoFar: film.totalsoFar,\n  //   cost: bookingTotal,\n\n\n  const onTicketChange = e => {\n    setTicketData(_objectSpread({}, ticketData, {\n      numberOfTickets: parseInt(e.target.value)\n    }));\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    ticketsTotal += parseInt(e.target.value);\n    setTicketData(_objectSpread({}, ticketData, {\n      totalsoFar: ticketsTotal\n    }));\n    setTicketData(_objectSpread({}, ticketData, {\n      cost: bookingTotal\n    })); //tickets = e.target.value;\n\n    console.log(ticketData);\n  }; //   setTicketData({...ticketData, totalsoFar: ticketsTotal }),\n  //   setTicketData({...ticketData, numberOfTickets: tickets }),\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateFilm(formData, history);\n    updateProfileTickets(ticketData, history);\n    console.log(ticketData); //updateProfile(ticketData, history);\n  };\n\n  const _useState5 = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: tickets,\n    cost: bookingTotal\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        ticketData = _useState6[0],\n        setTicketData = _useState6[1];\n\n  if (film === null) return null;\n  return React.createElement(\"div\", {\n    className: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onTicketChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })))));\n};\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateProfileTickets: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  getFilmById,\n  updateFilm,\n  updateProfileTickets\n})(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js"],"names":["React","useEffect","useState","Fragment","connect","useParams","useSelector","useDispatch","Link","withRouter","Redirect","StripeCheckoutButton","PropTypes","getFilmById","updateFilm","updateProfileTickets","CheckoutFilm","film","loading","match","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","bookingTotal","setBookingTotal","tickets","ticketsTotal","onChange","e","onTicketChange","setTicketData","ticketData","numberOfTickets","parseInt","target","value","cost","console","log","onSubmit","preventDefault","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { updateProfileTickets } from '../../actions/profile';\n//import { UPDATE_FILM } from '../../actions/types';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({ \n  film: {film, loading}, \n  match, \n  getFilmById, \n  updateFilm, \n  updateProfileTickets,\n  history }) => {\n\n  const [formData, setFormData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingTotal, setBookingTotal] = useState(0);\n\n  let tickets = 0;\n  let ticketsTotal = film.totalsoFar; \n  \n  const onChange = e => {\n    setFormData({ ...formData, totalsoFar: ticketsTotal });\n    // setTicketData({...ticketData, totalsoFar: ticketsTotal })\n    // // setTicketData({...ticketData, cost: bookingTotal })\n    // // setTicketData({...ticketData, numberOfTickets: tickets })\n  } \n\n  //how to sort this mess out? \n  //what do you need to set?\n  //when?\n//   numberOfTickets first \n  // totalsoFar: film.totalsoFar,\n  //   cost: bookingTotal,\n  const onTicketChange = e => {\n        setTicketData({...ticketData, numberOfTickets: parseInt(e.target.value) })\n        setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n        ticketsTotal += parseInt(e.target.value)\n        setTicketData({...ticketData, totalsoFar: ticketsTotal })\n        setTicketData({...ticketData, cost: bookingTotal })\n        //tickets = e.target.value;\n        \n        console.log(ticketData)\n  }    \n  //   setTicketData({...ticketData, totalsoFar: ticketsTotal }),\n  //   setTicketData({...ticketData, numberOfTickets: tickets }),\n\n    \n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateFilm(formData, history);\n    updateProfileTickets(ticketData, history);\n    console.log(ticketData);\n    //updateProfile(ticketData, history);\n  };\n\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: tickets,\n    cost: bookingTotal,\n  });\n\n  \n  if (film === null) return null;\n  return (\n    <div className=\"film\">\n              <div>\n                <form>\n                <div className='checkout-page how-it-works'>\n                  <div className='checkout-header'>\n                    <div className='header-block'>\n\n                      <span>Film: {film.title}</span>\n                    </div>\n                    \n                    <div className='header-block'>\n                      <span>Date: {film.date} </span>\n                    </div>\n                    \n                    <div className='header-block'>\n                      <span>Price: £{film.ticketPrice} </span>\n                    </div>\n                    \n                    <div className='header-block'>\n                      <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n                    </div>\n                    <div \n                    className='header-block'>\n                      <span>Tickets sold: {film.totalsoFar}</span>\n                    </div>\n                  </div>\n                  </div>\n                  </form>\n                \n\n                    <div className='header-block'>\n                      <input\n                        type='number'\n                        placeholder='Enter number of tickets'\n                        name='tickets'\n                        onChange={e => onTicketChange(e)}\n                      />\n                    </div>\n                    <div className='header-block'>\n                      <span>Basket total: £{bookingTotal}</span>\n                    </div>\n                    <div>\n                    <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n                    </Link>\n                    </div>\n                    <div>\n                      <span onClick={e => onSubmit(e)}> \n                        <StripeCheckoutButton />\n                      </span>\n                    </div>\n                  </div>\n            </div>\n  )\n}\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateProfileTickets: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, { \n  getFilmById, \n  updateFilm, \n  updateProfileTickets \n})(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}