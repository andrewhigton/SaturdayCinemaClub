{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n//if you update profile, you overwrite the current film\n//if you update with fn removed, you create new version of same film\n// what's the answer.\n// separate the creation and update functions \n//need to check if the _id prop exists,\n//just separate them out. you have to, because if you update a ticket prop\n// two entirely separate fns\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = ({\n  updateFilm,\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history\n}) => {\n  const _useState = useState({\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookingTotal = _useState4[0],\n        setBookingTotal = _useState4[1];\n\n  useEffect(() => {\n    getCurrentProfile(); //this fills the values with current values\n\n    setFormData({\n      _id: !profile._id ? '' : profile._id,\n      user: !profile.user ? '' : profile.user,\n      title: !profile.title ? '' : profile.title,\n      cinema: !profile.cinema ? '' : profile.cinema,\n      date: !profile.date ? '' : profile.date,\n      image: !profile.image ? '' : profile.image,\n      ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n      crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n      totalsoFar: !profile.totalsoFar ? '' : profile.totalsoFar\n    });\n  }, [loading, getCurrentProfile]); //console.log(profile)\n  // console.log(formData)\n\n  let _id = formData._id,\n      user = formData.user,\n      title = formData.title,\n      date = formData.date,\n      cinema = formData.cinema,\n      image = formData.image,\n      ticketPrice = formData.ticketPrice,\n      crowdfundTarget = formData.crowdfundTarget,\n      totalsoFar = formData.totalsoFar;\n  let tickets = 0;\n\n  const onChange = e => {\n    // setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = profile.totalsoFar + parseInt(e.target.value);\n    setBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    })); // console.log(bookingTotal)\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // console.log(formData)\n\n    updateFilm(formData, history, true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Film: \", profile.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Date: \", profile.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Price: \\xA3\", profile.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", profile.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Tickets sold: \", profile.totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))));\n};\n\nCheckoutPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getCurrentProfile\n})(withRouter(CheckoutPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","updateFilm","getCurrentProfile","StripeCheckoutButton","CheckoutPage","profile","loading","history","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","bookingTotal","setBookingTotal","_id","tickets","onChange","e","parseInt","target","value","onSubmit","preventDefault","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t//if you update profile, you overwrite the current film\n\t//if you update with fn removed, you create new version of same film\n\t// what's the answer.\n\t// separate the creation and update functions \n\t//need to check if the _id prop exists,\n\t//just separate them out. you have to, because if you update a ticket prop\n\t// two entirely separate fns\n\t\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = ({\n\tupdateFilm,\n\tgetCurrentProfile,\n\tprofile: { profile, loading },\n\thistory\n}) => {\n\tconst [formData, setFormData] = useState({\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\n\tconst [bookingTotal, setBookingTotal] = useState(0);\n\n\tuseEffect(() => {\n\t\tgetCurrentProfile();\n\t\t//this fills the values with current values\n\tsetFormData({\n      _id: !profile._id ? '' : profile._id,\n      user: !profile.user ? '' : profile.user,\n      title: !profile.title ? '' : profile.title,\n      cinema: !profile.cinema ? '' : profile.cinema,\n      date: !profile.date ? '' : profile.date,\n      image: !profile.image ? '' : profile.image,\n      ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n      crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n      totalsoFar: !profile.totalsoFar ? '' : profile.totalsoFar\n    });\n\n  }, [loading, getCurrentProfile]);\n\t//console.log(profile)\n\t// console.log(formData)\n\tlet {\n\t\t_id,\n\t\tuser,\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\tlet tickets = 0;\n\t\t\t\n\tconst onChange = e => {\n\t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n\t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n\t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n\t\tsetFormData({ ...formData, totalsoFar: tickets });\n\t\t// console.log(bookingTotal)\n\t}\t\n\t\t\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(formData)\n\t\tupdateFilm(formData, history, true);\n\t};\n\n\treturn (\n\t<div>\n\t<form>\n\t<div className='checkout-page how-it-works'>\n\t\t<div className='checkout-header'>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Film: {profile.title}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Date: {profile.date} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</form>\n\t\t\t<div className='header-block'>\n\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tplaceholder='Enter number of tickets'\n\t\t\t\t\t\tname='tickets'\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Basket total: £{bookingTotal}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\n\t\t\t\t\t\tGo Back\n\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<span onClick={e => onSubmit(e)}>\n\t\t\t\t\t<StripeCheckoutButton />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nCheckoutPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile\n});\n\nexport default connect(mapStateToProps, { updateFilm, getCurrentProfile })(\n\twithRouter(CheckoutPage)\n);"]},"metadata":{},"sourceType":"module"}