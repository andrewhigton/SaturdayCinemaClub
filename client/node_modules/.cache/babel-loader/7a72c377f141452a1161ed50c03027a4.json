{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_FILM, UPDATE_FILM, GET_FILMS, FILM_ERROR, CLEAR_FILM, DELETE_FILM } from '../actions/types';\nconst initialState = {\n  film: null,\n  films: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case GET_FILM:\n      // case UPDATE_FILM:\n      return _objectSpread({}, state, {\n        film: payload,\n        loading: false\n      });\n\n    case GET_FILMS:\n      return _objectSpread({}, state, {\n        films: payload,\n        loading: false\n      });\n\n    case UPDATE_FILM:\n      return _objectSpread({}, state, {\n        film: payload,\n        loading: false\n      });\n\n    case FILM_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n    //this needed?\n\n    case CLEAR_FILM:\n      return _objectSpread({}, state, {\n        film: null,\n        films: [],\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/reducers/film.js"],"names":["GET_FILM","UPDATE_FILM","GET_FILMS","FILM_ERROR","CLEAR_FILM","DELETE_FILM","initialState","film","films","loading","error","state","action","type","payload"],"mappings":";AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,WANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAAA,QACrCC,IADqC,GACnBD,MADmB,CACrCC,IADqC;AAAA,QAC/BC,OAD+B,GACnBF,MADmB,CAC/BE,OAD+B;;AAE9C,UAAQD,IAAR;AACE,SAAKb,QAAL;AACA;AACA,+BACKW,KADL;AAEEJ,QAAAA,IAAI,EAAEO,OAFR;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKA,SAAKP,SAAL;AACA,+BACKS,KADL;AAEEH,QAAAA,KAAK,EAAEM,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKA,SAAKR,WAAL;AACA,+BACKU,KADL;AAEEJ,QAAAA,IAAI,EAAEO,OAFR;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKA,SAAKN,UAAL;AACA,+BACKQ,KADL;AAEED,QAAAA,KAAK,EAAEI,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;AAKA;;AACA,SAAKL,UAAL;AACA,+BACKO,KADL;AAEEJ,QAAAA,IAAI,EAAE,IAFR;AAGEC,QAAAA,KAAK,EAAE,EAHT;AAIEC,QAAAA,OAAO,EAAE;AAJX;;AAMA;AACE,aAAOE,KAAP;AAnCJ;AAqCH","sourcesContent":["import {\n  GET_FILM,\n  UPDATE_FILM,\n  GET_FILMS,\n  FILM_ERROR,\n  CLEAR_FILM,\n  DELETE_FILM\n} from '../actions/types';\n\nconst initialState = {\n  film: null,\n  films: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n         const { type, payload } = action \n        switch (type) {\n          case GET_FILM:\n          // case UPDATE_FILM:\n          return {\n            ...state,\n            film: payload,\n            loading: false \n          };\n          case GET_FILMS:\n          return {\n            ...state,\n            films: payload,\n            loading: false \n          };\n          case UPDATE_FILM:\n          return {\n            ...state,\n            film: payload,\n            loading: false \n          }; \n          case FILM_ERROR:\n          return {\n            ...state,\n            error: payload,\n            loading: false\n          }; \n          //this needed?\n          case CLEAR_FILM:\n          return {\n            ...state,\n            film: null,\n            films: [],\n            loading: false\n          };\n          default:\n            return state\n        }\n    }"]},"metadata":{},"sourceType":"module"}