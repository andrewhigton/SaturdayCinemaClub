{"ast":null,"code":"import _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/carousel/Carousel.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImageSlide from './ImageSlide';\nimport Arrow from './Arrow';\nimport '../../App1.css';\n\nconst Carousel = ({\n  film: {\n    films\n  }\n}) => {\n  //console.log(films)\n  //why don't new films appear in mongo?\n  //why is this only receiving one film?\n  //and where is the image?  \n  const _useState = useState([0]),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentImageIndex = _useState2[0],\n        setImageIndex = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        active = _useState4[0],\n        setActive = _useState4[1];\n\n  useEffect(() => {\n    const timer = setTimeout(nextSlide, 3000);\n    return () => clearTimeout(timer);\n  }, [nextSlide]);\n  useEffect(() => {\n    setImageIndex(0);\n  }, [setImageIndex]);\n\n  function previousSlide() {\n    const lastIndex = films.length - 1;\n    const shouldResetIndex = currentImageIndex === 0;\n    const index = shouldResetIndex ? lastIndex : currentImageIndex - 1;\n    setImageIndex(index);\n  }\n\n  function nextSlide() {\n    const lastIndex = films.length - 1;\n    const shouldResetIndex = currentImageIndex === lastIndex;\n    const index = shouldResetIndex ? 0 : currentImageIndex + 1;\n    setImageIndex(index);\n  }\n\n  if (films === null) return null;\n  return React.createElement(React.Fragment, null, React.createElement(ImageSlide, {\n    className: 'image-slide' // className={active ? 'fade image-slide' : 'image-slide'} \n    ,\n    url: films[currentImageIndex].image,\n    title: films[currentImageIndex].title,\n    cinema: films[currentImageIndex].cinema,\n    date: films[currentImageIndex].date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"arrows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    direction: \"prev\",\n    clickFunction: previousSlide,\n    glyph: \"\\u25C0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Arrow, {\n    direction: \"next\",\n    clickFunction: nextSlide,\n    glyph: \"\\u25B6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nCarousel.propTypes = {\n  film: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default connect(mapStateToProps)(Carousel); // <ImageSlide \n// className={'image-slide'} \n// // className={active ? 'fade image-slide' : 'image-slide'} \n// url={ film[currentImageIndex].image } \n// title={ film[currentImageIndex].title }\n// cinema={ film[currentImageIndex].cinema }\n// date={ film[currentImageIndex].date }\n// />     \n// <div className=\"arrows\">\n// <Arrow\n//   direction=\"left\"\n//   // clickFunction={ previousSlide } \n//   glyph=\"&#9664;\" \n//  />\n// <Arrow\n//   direction=\"right\"\n//   // clickFunction={ nextSlide }\n//   glyph=\"&#9654;\" \n//  />\n//</div>","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/carousel/Carousel.js"],"names":["React","useState","useEffect","useRef","PropTypes","connect","ImageSlide","Arrow","Carousel","film","films","currentImageIndex","setImageIndex","active","setActive","timer","setTimeout","nextSlide","clearTimeout","previousSlide","lastIndex","length","shouldResetIndex","index","image","title","cinema","date","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImageSlide from './ImageSlide';\nimport Arrow from './Arrow'; \nimport '../../App1.css';\n\nconst Carousel = ({ \n  film: { films } \n  }) => {\n  //console.log(films)\n  //why don't new films appear in mongo?\n  //why is this only receiving one film?\n  //and where is the image?  \n  const [ currentImageIndex, setImageIndex ] = useState([0]);\n  \n  const [active, setActive] = useState();\n\n  useEffect(() => {\n    const timer = setTimeout(nextSlide, 3000);\n    return () => clearTimeout(timer);\n  }, [nextSlide])\n\n  useEffect(() => {\n  setImageIndex(0);\n  }, [setImageIndex]);\n\n  function previousSlide () {\n    const lastIndex = films.length - 1;\n    const shouldResetIndex = currentImageIndex === 0;\n    const index = shouldResetIndex ? lastIndex : currentImageIndex - 1;\n    setImageIndex(index)  \n  }\n  \n  function nextSlide () {\n    const lastIndex = films.length - 1;\n    const shouldResetIndex = currentImageIndex === lastIndex;\n    const index = shouldResetIndex ? 0 : currentImageIndex + 1;\n  setImageIndex(index)\n    }\n\n  if (films === null) return null;\n    return (\n      \n      <>\n        <ImageSlide \n        className={'image-slide'} \n        // className={active ? 'fade image-slide' : 'image-slide'} \n        url={ films[currentImageIndex].image } \n        title={ films[currentImageIndex].title }\n        cinema={ films[currentImageIndex].cinema }\n        date={ films[currentImageIndex].date }\n        />     \n        <div className=\"arrows\">\n        <Arrow\n          direction=\"prev\"\n          clickFunction={ previousSlide } \n          glyph=\"&#9664;\" \n         />\n        <Arrow\n          direction=\"next\"\n          clickFunction={ nextSlide }\n          glyph=\"&#9654;\" \n         />\n        </div>  \n      </> \n    );\n}\n\nCarousel.propTypes = {\n  film: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default connect(mapStateToProps)(Carousel);\n\n// <ImageSlide \n        // className={'image-slide'} \n        // // className={active ? 'fade image-slide' : 'image-slide'} \n        // url={ film[currentImageIndex].image } \n        // title={ film[currentImageIndex].title }\n        // cinema={ film[currentImageIndex].cinema }\n        // date={ film[currentImageIndex].date }\n        // />     \n        // <div className=\"arrows\">\n        // <Arrow\n        //   direction=\"left\"\n        //   // clickFunction={ previousSlide } \n        //   glyph=\"&#9664;\" \n        //  />\n        // <Arrow\n        //   direction=\"right\"\n        //   // clickFunction={ nextSlide }\n        //   glyph=\"&#9654;\" \n        //  />\n        //</div>   \n\n  "]},"metadata":{},"sourceType":"module"}