{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment\n// 2 send new object to createFilm\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = ({\n  createFilm,\n  // getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history\n}) => {\n  const _useState = useState({\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    setFormData({\n      user: !profile.user ? '' : profile.user,\n      title: !profile.title ? '' : profile.title,\n      cinema: !profile.cinema ? '' : profile.cinema,\n      date: !profile.date ? '' : profile.date,\n      image: !profile.image ? '' : profile.image,\n      ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n      crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n      totalsoFar: !newTicketsTotal ? '' : newTicketsTotal\n    });\n  }, [loading, getCurrentProfile]); //console.log(profile)\n\n  const title = formData.title,\n        date = formData.date,\n        cinema = formData.cinema,\n        image = formData.image,\n        ticketPrice = formData.ticketPrice,\n        crowdfundTarget = formData.crowdfundTarget,\n        totalsoFar = formData.totalsoFar;\n  let tickets = 0;\n  let bookingTotal = 0; //let bookingTotal = 0;\n\n  const newTicketsTotal = tickets => {\n    let newTotal = parseInt(profile.totalsoFar) + parseInt(tickets);\n    bookingTotal = parseInt(profile.ticketPrice) * parseInt(tickets); // console.log(bookingTotal)\t\n\n    return newTotal;\n  }; // const onTicketChange = e => {\n  // \ttickets = e.target.value\n  // \t// console.log(tickets)\n  // \t// newTicketsTotal += tickets;\n  // \t// bookingTotal = profile.ticketPrice * tickets;\n  // \tlet totalsoFar = newTicketsTotal(tickets)\n  // \t// console.log(tickets)\n  // \tconsole.log(totalsoFar)\n  // \t// console.log(bookingTotal)\n  // }\n\n\n  const onChange = e => {\n    setFormData(_objectSpread({}, formData, {\n      [e.target.name]: e.target.value\n    }));\n    tickets = e.target.value; // console.log(tickets)\n    // newTicketsTotal += tickets;\n    // bookingTotal = profile.ticketPrice * tickets;\n\n    profile.totalsoFar = newTicketsTotal(tickets); // let bookedTickets = newTicketsTotal(tickets)\n    // console.log(tickets)\n    // console.log(bookedTickets)\t\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    createFilm(formData, history, true); // console.log(newTicketsTotal);\n    // console.log(bookingTotal);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Film: \", profile.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Date: \", profile.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Price: \", profile.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", profile.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    value: totalsoFar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Tickets sold: \", totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal.toFixed(2))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })));\n};\n\nCheckoutPage.propTypes = {\n  createFilm: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createFilm,\n  getCurrentProfile\n})(withRouter(CheckoutPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","PropTypes","connect","createFilm","getCurrentProfile","StripeCheckoutButton","CheckoutPage","profile","loading","history","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","newTicketsTotal","tickets","bookingTotal","newTotal","parseInt","onChange","e","target","name","value","onSubmit","preventDefault","console","log","toFixed","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment\n// 2 send new object to createFilm\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = ({\n\tcreateFilm,\n\t// getCurrentProfile,\n\tprofile: { profile, loading },\n\thistory\n}) => {\n\n\tconst [formData, setFormData] = useState({\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\n\tuseEffect(() => {\n\t\tgetCurrentProfile();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tsetFormData({\n      user: !profile.user ? '' : profile.user,\n      title: !profile.title ? '' : profile.title,\n      cinema: !profile.cinema ? '' : profile.cinema,\n      date: !profile.date ? '' : profile.date,\n      image: !profile.image ? '' : profile.image,\n      ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n      crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n      totalsoFar: !newTicketsTotal ? '' : newTicketsTotal\n    });\n  }, [loading, getCurrentProfile]);\n\t//console.log(profile)\n\tconst {\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\n\tlet tickets = 0;\n\tlet bookingTotal = 0\n\t//let bookingTotal = 0;\n\n\tconst newTicketsTotal = (tickets) => {\n\t\t\tlet newTotal = parseInt(profile.totalsoFar) + parseInt(tickets);\n\t\t\tbookingTotal = parseInt(profile.ticketPrice) * parseInt(tickets);\n\t\t\t// console.log(bookingTotal)\t\n\t\t\treturn newTotal; \n\t}\n\n\t// const onTicketChange = e => {\n\t// \ttickets = e.target.value\n\t// \t// console.log(tickets)\n\t// \t// newTicketsTotal += tickets;\n\t// \t// bookingTotal = profile.ticketPrice * tickets;\n\t\t\n\t// \tlet totalsoFar = newTicketsTotal(tickets)\n\t// \t// console.log(tickets)\n\t// \tconsole.log(totalsoFar)\n\t// \t// console.log(bookingTotal)\n\t// }\n\t\n\tconst onChange = e => {\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t\ttickets = e.target.value\n\t\t// console.log(tickets)\n\t\t// newTicketsTotal += tickets;\n\t\t// bookingTotal = profile.ticketPrice * tickets;\n\t\tprofile.totalsoFar = newTicketsTotal(tickets) \n\t\t// let bookedTickets = newTicketsTotal(tickets)\n\t\t// console.log(tickets)\n\t\t// console.log(bookedTickets)\t\n\t}\n\t\n\t\t\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\tconsole.log(formData)\n\t\tcreateFilm(formData, history, true);\n\t\t// console.log(newTicketsTotal);\n\t\t// console.log(bookingTotal);\n\t};\n\n\treturn (\n\t<div>\n\t<form>\n\t<div className='checkout-page how-it-works'>\n\t\t<div className='checkout-header'>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Film: {profile.title}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Date: {profile.date} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Price: {profile.ticketPrice} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div \n\t\t\tclassName='header-block'\n\t\t\tvalue={totalsoFar}>\n\t\t\t\t<span>Tickets sold: {totalsoFar}</span>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</form>\n\t\t\t<div className='header-block'>\n\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tplaceholder='Enter number of tickets'\n\t\t\t\t\t\tname='tickets'\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Basket total: £{bookingTotal.toFixed(2)}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\n\t\t\t\t\t\tGo Back\n\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t<StripeCheckoutButton onSubmit={e => onSubmit(e)}/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nCheckoutPage.propTypes = {\n\tcreateFilm: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile\n});\n\nexport default connect(mapStateToProps, { createFilm, getCurrentProfile })(\n\twithRouter(CheckoutPage)\n);"]},"metadata":{},"sourceType":"module"}