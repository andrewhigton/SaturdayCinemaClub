{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/profile-forms/CreateFilm.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFilm } from '../../actions/film';\nimport { loadFilms } from '../../actions/film'; //right, how to get app to redeict and reload as soon as created \n\nconst CreateFilm = ({\n  createFilm,\n  history\n}) => {\n  useEffect(() => {\n    loadFilms();\n  }, [loadFilms]); // useEffect(() => {\n  // \tgetCurrentProfile();\n  // \t// eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [getCurrentProfile]);\n  // create a useEffect here that updates when it changes. \n  // then with an onsubmit??\n  // then how to reload page when submitted?\n  // reload dashboard?\n\n  const _useState = useState({\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: 8,\n    crowdfundTarget: 90,\n    totalsoFar: 56\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        displaySocialInputs = _useState4[0],\n        toggleSocialInputs = _useState4[1];\n\n  const user = formData.user,\n        title = formData.title,\n        cinema = formData.cinema,\n        date = formData.date,\n        image = formData.image;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createFilm(formData, history);\n  }; // useEffect(() => {\n  // \tgetCurrentProfile();\n  // \t// eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [getCurrentProfile]);\n  // return loading && profile === null ? (\n  // \t<Redirect to='/dashboard' />\n  // ) : \n\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"dashboard large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Create a film request\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"pageMargins\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Film\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter film title\",\n    name: \"title\",\n    value: title,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Cinema\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter location, or cinema\",\n    name: \"cinema\",\n    value: cinema,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"input\", {\n    // type='date'\n    name: \"date\",\n    placeholder: \"Enter a date\",\n    value: date,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Image\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter a url for your movie image\",\n    name: \"image\",\n    value: image,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nCreateFilm.propTypes = {\n  createFilm: PropTypes.func.isRequired //getCurrentProfile: PropTypes.func.isRequired,\n  //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({//profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createFilm\n})(withRouter(CreateFilm)); // {displaySocialInputs && (\n// \t<Fragment>\n// \t\t<div className='form-group social-input'>\n// \t\t\t<i className='fab fa-twitter fa-2x' />\n// \t\t\t<input\n// \t\t\t\ttype='text'\n// \t\t\t\tplaceholder='Twitter URL'\n// \t\t\t\tname='twitter'\n// \t\t\t\tvalue={twitter}\n// \t\t\t\tonChange={e => onChange(e)}\n// \t\t\t/>\n// \t\t</div>\n// \t\t<div className='form-group social-input'>\n// \t\t\t<i className='fab fa-facebook fa-2x' />\n// \t\t\t<input\n// \t\t\t\ttype='text'\n// \t\t\t\tplaceholder='Facebook URL'\n// \t\t\t\tname='facebook'\n// \t\t\t\tvalue={facebook}\n// \t\t\t\tonChange={e => onChange(e)}\n// \t\t\t/>\n// \t\t</div>\n// \t\t<div className='form-group social-input'>\n// \t\t\t<i className='fab fa-youtube fa-2x' />\n// \t\t\t<input\n// \t\t\t\ttype='text'\n// \t\t\t\tplaceholder='YouTube URL'\n// \t\t\t\tname='youtube'\n// \t\t\t\tvalue={youtube}\n// \t\t\t\tonChange={e => onChange(e)}\n// \t\t\t/>\n// \t\t</div>\n// \t\t<div className='form-group social-input'>\n// \t\t\t<i className='fab fa-linkedin fa-2x' />\n// \t\t\t<input\n// \t\t\t\ttype='text'\n// \t\t\t\tplaceholder='Linkedin URL'\n// \t\t\t\tname='linkedin'\n// \t\t\t\tvalue={linkedin}\n// \t\t\t\tonChange={e => onChange(e)}\n// \t\t\t/>\n// \t\t</div>\n// \t\t<div className='form-group social-input'>\n// \t\t\t<i className='fab fa-instagram fa-2x' />\n// \t\t\t<input\n// \t\t\t\ttype='text'\n// \t\t\t\tplaceholder='Instagram URL'\n// \t\t\t\tname='instagram'\n// \t\t\t\tvalue={instagram}\n// \t\t\t\tonChange={e => onChange(e)}\n// \t\t\t/>\n// \t\t</div>\n// \t</Fragment>\n// <div className='my-2'>\n// \t\t\t\t\t<button\n// \t\t\t\t\t\tonClick={() => toggleSocialInputs(!displaySocialInputs)}\n// \t\t\t\t\t\ttype='button'\n// \t\t\t\t\t\tclassName='btn btn-light'\n// \t\t\t\t\t>\n// \t\t\t\t\t\tAdd Social Network Links\n// \t\t\t\t\t</button>\n// \t\t\t\t\t<span>Optional</span>\n// \t\t\t\t</div>\n// \t\t\t\t)}","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/profile-forms/CreateFilm.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","createFilm","loadFilms","CreateFilm","history","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","displaySocialInputs","toggleSocialInputs","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFilm } from '../../actions/film';\nimport { loadFilms } from '../../actions/film';\n//right, how to get app to redeict and reload as soon as created \nconst CreateFilm = ({\n\tcreateFilm,\n\thistory\n}) => {\n\n\tuseEffect(() =>  {\n    \tloadFilms();\t\n\t}, [loadFilms]);\n\t// useEffect(() => {\n\t// \tgetCurrentProfile();\n\t// \t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t// }, [getCurrentProfile]);\n\n\t// create a useEffect here that updates when it changes. \n\t// then with an onsubmit??\n\t// then how to reload page when submitted?\n\t// reload dashboard?\n\n\tconst [formData, setFormData] = useState({\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: 8,\n\t\tcrowdfundTarget: 90,\n\t\ttotalsoFar: 56,\n\t});\n\n\n\tconst [displaySocialInputs, toggleSocialInputs] = useState(false);\n\tconst {\n\t\tuser,\n\t\ttitle,\n\t\tcinema,\n\t\tdate,\n\t\timage,\n\t} = formData;\n\t\n\tconst onChange = e =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\t\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\tcreateFilm(formData, history);\n\t};\n\t\n\t// useEffect(() => {\n\t// \tgetCurrentProfile();\n\t// \t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t// }, [getCurrentProfile]);\n\t// return loading && profile === null ? (\n\t// \t<Redirect to='/dashboard' />\n\t// ) : \nreturn (\n\t\t<Fragment>\n\t\t\t<h1 className='dashboard large text-primary'>Create a film request</h1>\n\t\t\t\n\t\t\t<small>* = required field</small>\n\t\t\t\t\n\t\t\t<form className='pageMargins' onSubmit={e => onSubmit(e)}>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<p>Film</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter film title'\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<p>Cinema</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter location, or cinema'\n\t\t\t\t\t\tname='cinema'\n\t\t\t\t\t\tvalue={cinema}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t          <p>Date</p>\n\t\t          <input\n\t\t            // type='date'\n\t\t            name='date'\n\t\t            placeholder='Enter a date'\n\t\t            value={date}\n\t\t            onChange={e => onChange(e)}\n\t\t          />\n\t\t        </div>\n \t\t\t\t<div className='form-group'>\n\t\t\t\t\t<p>Image</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter a url for your movie image'\n\t\t\t\t\t\tname='image'\n\t\t\t\t\t\tvalue={image}\n\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t<input type='submit' className='btn btn-primary my-1' />\n\t\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>\n\t\t\t\t\tGo Back\n\t\t\t\t</Link>\n\t\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nCreateFilm.propTypes = {\n\tcreateFilm: PropTypes.func.isRequired,\n\t//getCurrentProfile: PropTypes.func.isRequired,\n\t//profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n\t//profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createFilm })(\n\twithRouter(CreateFilm)\n\t);\n\t\t\t\t// {displaySocialInputs && (\n\t\t\t\t// \t<Fragment>\n\t\t\t\t// \t\t<div className='form-group social-input'>\n\t\t\t\t// \t\t\t<i className='fab fa-twitter fa-2x' />\n\t\t\t\t// \t\t\t<input\n\t\t\t\t// \t\t\t\ttype='text'\n\t\t\t\t// \t\t\t\tplaceholder='Twitter URL'\n\t\t\t\t// \t\t\t\tname='twitter'\n\t\t\t\t// \t\t\t\tvalue={twitter}\n\t\t\t\t// \t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t// \t\t\t/>\n\t\t\t\t// \t\t</div>\n\n\t\t\t\t// \t\t<div className='form-group social-input'>\n\t\t\t\t// \t\t\t<i className='fab fa-facebook fa-2x' />\n\t\t\t\t// \t\t\t<input\n\t\t\t\t// \t\t\t\ttype='text'\n\t\t\t\t// \t\t\t\tplaceholder='Facebook URL'\n\t\t\t\t// \t\t\t\tname='facebook'\n\t\t\t\t// \t\t\t\tvalue={facebook}\n\t\t\t\t// \t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t// \t\t\t/>\n\t\t\t\t// \t\t</div>\n\n\t\t\t\t// \t\t<div className='form-group social-input'>\n\t\t\t\t// \t\t\t<i className='fab fa-youtube fa-2x' />\n\t\t\t\t// \t\t\t<input\n\t\t\t\t// \t\t\t\ttype='text'\n\t\t\t\t// \t\t\t\tplaceholder='YouTube URL'\n\t\t\t\t// \t\t\t\tname='youtube'\n\t\t\t\t// \t\t\t\tvalue={youtube}\n\t\t\t\t// \t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t// \t\t\t/>\n\t\t\t\t// \t\t</div>\n\n\t\t\t\t// \t\t<div className='form-group social-input'>\n\t\t\t\t// \t\t\t<i className='fab fa-linkedin fa-2x' />\n\t\t\t\t// \t\t\t<input\n\t\t\t\t// \t\t\t\ttype='text'\n\t\t\t\t// \t\t\t\tplaceholder='Linkedin URL'\n\t\t\t\t// \t\t\t\tname='linkedin'\n\t\t\t\t// \t\t\t\tvalue={linkedin}\n\t\t\t\t// \t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t// \t\t\t/>\n\t\t\t\t// \t\t</div>\n\n\t\t\t\t// \t\t<div className='form-group social-input'>\n\t\t\t\t// \t\t\t<i className='fab fa-instagram fa-2x' />\n\t\t\t\t// \t\t\t<input\n\t\t\t\t// \t\t\t\ttype='text'\n\t\t\t\t// \t\t\t\tplaceholder='Instagram URL'\n\t\t\t\t// \t\t\t\tname='instagram'\n\t\t\t\t// \t\t\t\tvalue={instagram}\n\t\t\t\t// \t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t// \t\t\t/>\n\t\t\t\t// \t\t</div>\n\t\t\t\n\t\t\t\t// \t</Fragment>\n// <div className='my-2'>\n\t\t\t\t\t\n// \t\t\t\t\t<button\n// \t\t\t\t\t\tonClick={() => toggleSocialInputs(!displaySocialInputs)}\n// \t\t\t\t\t\ttype='button'\n// \t\t\t\t\t\tclassName='btn btn-light'\n// \t\t\t\t\t>\n// \t\t\t\t\t\tAdd Social Network Links\n// \t\t\t\t\t</button>\n// \t\t\t\t\t<span>Optional</span>\n// \t\t\t\t</div>\n// \t\t\t\t)}"]},"metadata":{},"sourceType":"module"}