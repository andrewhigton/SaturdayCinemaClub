{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\nfunction showSlides() {\n  var slideIndex = 1;\n  var i;\n  var slides = document.getElementsByClassName(\"homepage-img\"); //console.log(slides)\n\n  for (i = 0; i < slides.length; i++) {\n    slides[i].style.display = \"none\";\n  }\n\n  slideIndex++;\n\n  if (slideIndex > slides.length) {\n    slideIndex = 1;\n  } //console.log(slides)\n  //why is it calling six times? \n  //console.log(slideIndex)\n  //slides[slideIndex-1].style.display = \"none\";\n  //slides.style.display = \"block\";\n\n\n  setTimeout(showSlides, 2000); // Change image every 2 seconds\n}\n\nconst Films = ({\n  loadFilms,\n  showSlides,\n  films: {\n    film,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    loadFilms();\n    showSlides();\n  }, [loadFilms, showSlides]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, film === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slideshow-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, film.map(item => React.createElement(Film, {\n    key: item._id,\n    film: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))));\n};\n\nFilms.propTypes = {\n  loadFilms: PropTypes.func.isRequired,\n  showSlides: PropType.func.isRequired,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {\n  loadFilms\n}, {\n  showSlides\n})(Films); // <span className=\"dot\"></span>\n// <span className=\"dot\"></span>\n// <span className=\"dot\"></span>\n// <Fragment>\n//      {film === null || loading ? (\n//        <Spinner /> \n//        ) : (\n//        <section className=\"slideshow\">\n//         <div className=\"container\">\n// \t           {film.map(item => (\n//     \t\t\t\t<Film key={item._id} film={item} />\n//               \t))\n// \t           }\n//         </div>\n//        </section>    \t\n// \t     )\n//       }\n//      </Fragment>","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js"],"names":["React","Fragment","useState","useEffect","axios","Link","PropTypes","Spinner","connect","loadFilms","Film","showSlides","slideIndex","i","slides","document","getElementsByClassName","length","style","display","setTimeout","Films","films","film","loading","map","item","_id","propTypes","func","isRequired","PropType","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,SAASC,UAAT,GAAsB;AACpB,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,CAAJ;AACA,MAAIC,MAAM,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAAb,CAHoB,CAIpB;;AACA,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAM,CAACG,MAAvB,EAA+BJ,CAAC,EAAhC,EAAoC;AAClCC,IAAAA,MAAM,CAACD,CAAD,CAAN,CAAUK,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACD;;AACDP,EAAAA,UAAU;;AACV,MAAIA,UAAU,GAAGE,MAAM,CAACG,MAAxB,EAAgC;AAACL,IAAAA,UAAU,GAAG,CAAb;AAAe,GAT5B,CAUpB;AACF;AACA;AACE;AACA;;;AACAQ,EAAAA,UAAU,CAACT,UAAD,EAAa,IAAb,CAAV,CAfoB,CAeU;AAC/B;;AAGD,MAAMU,KAAK,GAAG,CAAC;AAEdZ,EAAAA,SAFc;AAGdE,EAAAA,UAHc;AAIdW,EAAAA,KAAK,EAAE;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP;AAJO,CAAD,KAKP;AAENrB,EAAAA,SAAS,CAAC,MAAO;AACbM,IAAAA,SAAS;AACTE,IAAAA,UAAU;AACV,GAHK,EAGH,CAACF,SAAD,EAAYE,UAAZ,CAHG,CAAT;AAKA,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMY,IAAI,KAAK,IAAT,IAAiBC,OAAjB,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,GAAL,CAASC,IAAI,IAClB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAqB,IAAA,IAAI,EAAED,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CADL,CADD,CAJP,CADA;AAiBE,CA7BH;;AA+BAL,KAAK,CAACO,SAAN,GAAkB;AACjBnB,EAAAA,SAAS,EAAEH,SAAS,CAACuB,IAAV,CAAeC,UADT;AAEjBnB,EAAAA,UAAU,EAAEoB,QAAQ,CAACF,IAAT,CAAcC,UAFT;AAGjBR,EAAAA,KAAK,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBF;AAHP,CAAlB;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AACjCZ,EAAAA,KAAK,EAAEY,KAAK,CAACX;AADoB,CAAL,CAA7B;;AAIA,eAAef,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,EAAiC;AAAEE,EAAAA;AAAF,CAAjC,CAAP,CAAwDU,KAAxD,CAAf,C,CAGA;AACK;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\n\nfunction showSlides() {\n  var slideIndex = 1;  \n  var i;\n  var slides = document.getElementsByClassName(\"homepage-img\");\n  //console.log(slides)\n  for (i = 0; i < slides.length; i++) {\n    slides[i].style.display = \"none\";\n  }\n  slideIndex++;\n  if (slideIndex > slides.length) {slideIndex = 1}\n  //console.log(slides)\n//why is it calling six times? \n//console.log(slideIndex)\n  //slides[slideIndex-1].style.display = \"none\";\n  //slides.style.display = \"block\";\n  setTimeout(showSlides, 2000); // Change image every 2 seconds\n}\n\n\nconst Films = ({ \n\n\tloadFilms,\n\tshowSlides,\n\tfilms: {film, loading} \n\t}) => {\n\n\tuseEffect(() =>  {\n    \tloadFilms();\n    \tshowSlides();\t\n\t  \t}, [loadFilms, showSlides]);\n\t\n\treturn (\n\t<Fragment>\n      {film === null || loading ? (\n        <Spinner /> \n        ) : (\n        <section>\n\t        <div className=\"slideshow-container\">\n\t\t           {film.map(item => (\n\t    \t\t\t\t<Film key={item._id} film={item} />\n\t              \t))\n\t\t           }\n\t        </div>\n        </section>    \t\n\t\t     )\n\t      }\n      </Fragment>\n \t)\n \t}\n\nFilms.propTypes = {\n\tloadFilms: PropTypes.func.isRequired,\n\tshowSlides: PropType.func.isRequired,\n\tfilms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilms: state.film\n});\n\nexport default connect(mapStateToProps, { loadFilms }, { showSlides })(Films);\n\t\t\t\n\n// <span className=\"dot\"></span>\n\t\t\t  // <span className=\"dot\"></span>\n\t\t\t  // <span className=\"dot\"></span>\n\n\n\n\t// <Fragment>\n //      {film === null || loading ? (\n //        <Spinner /> \n //        ) : (\n //        <section className=\"slideshow\">\n\t//         <div className=\"container\">\n\t// \t           {film.map(item => (\n\t//     \t\t\t\t<Film key={item._id} film={item} />\n\t//               \t))\n\t// \t           }\n\t//         </div>\n //        </section>    \t\n\t// \t     )\n\t//       }\n //      </Fragment>\n"]},"metadata":{},"sourceType":"module"}