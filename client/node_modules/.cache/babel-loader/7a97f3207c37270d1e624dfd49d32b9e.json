{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n//if you update profile, you overwrite the current film\n//if you update with fn removed, you create new version of same film\n// what's the answer.\n// separate the creation and update functions DONE\n//need to separete the films and users, akin to exp in devconnectors, and update separately \n//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n// morning\n// check video for ways out \n// try to get the _id working\n// at what point are you putting the films in to their own db? \n//ok, trying to get the id again, sure i can do it.\n//you know, just check back in to master.\n//can't load films now, something gone wrong with the db\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = film => {\n  const _useState = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  console.log(film);\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookingTotal = _useState4[0],\n        setBookingTotal = _useState4[1]; // you could fetch the film here, from the id, and narrow down\n  // then set the form data, with the current film\n  // ie getFilmById\n  //this fills the values with current values\n  // setFormData({\n  //      _id: !film._id ? '' : film._id,\n  //      user: !film.user ? '' : film.user,\n  //      title: !film.title ? '' : film.title,\n  //      cinema: !film.cinema ? '' : film.cinema,\n  //      date: !film.date ? '' : film.date,\n  //      image: !film.image ? '' : film.image,\n  //      ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n  //      crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n  //      totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n  //    });\n  // }\n  //console.log(film)\n  // console.log(formData)\n\n\n  let _id = formData._id,\n      user = formData.user,\n      title = formData.title,\n      date = formData.date,\n      cinema = formData.cinema,\n      image = formData.image,\n      ticketPrice = formData.ticketPrice,\n      crowdfundTarget = formData.crowdfundTarget,\n      totalsoFar = formData.totalsoFar;\n  let tickets = 0;\n\n  const onChange = e => {\n    // setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = film.totalsoFar + parseInt(e.target.value);\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    })); // console.log(bookingTotal)\n  };\n\n  const onSubmit = (e, film_id) => {\n    e.preventDefault(); // console.log(film_id)\n    // updateFilm(formData, history);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, film._id))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    // movie_id={film}\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), \"}\")));\n}; // const CheckoutPage = ({\n// \tupdateFilm,\n// \tfilm,\n// \t//what's the diff these two profiles? \n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t});\n// \tconsole.log(film);\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n// \t// you could fetch the film here, from the id, and narrow down\n// \t// then set the form data, with the current film\n// \t// ie getFilmById\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \t\t//this fills the values with current values\n// \tsetFormData({\n//       _id: !profile._id ? '' : profile._id,\n//       user: !profile.user ? '' : profile.user,\n//       title: !profile.title ? '' : profile.title,\n//       cinema: !profile.cinema ? '' : profile.cinema,\n//       date: !profile.date ? '' : profile.date,\n//       image: !profile.image ? '' : profile.image,\n//       ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n//       crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n//       totalsoFar: !profile.totalsoFar ? '' : profile.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n// \t//console.log(profile)\n// \t// console.log(formData)\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n// \tlet tickets = 0;\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\tconsole.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\n\nCheckoutPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getCurrentProfile\n})(withRouter(CheckoutPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","updateFilm","getCurrentProfile","StripeCheckoutButton","CheckoutPage","film","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","console","log","bookingTotal","setBookingTotal","tickets","onChange","e","parseInt","target","value","onSubmit","film_id","preventDefault","propTypes","func","isRequired","profile","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t//if you update profile, you overwrite the current film\n\t//if you update with fn removed, you create new version of same film\n\t// what's the answer.\n\t// separate the creation and update functions DONE\n\t//need to separete the films and users, akin to exp in devconnectors, and update separately \n\t//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n\n// morning\n// check video for ways out \n// try to get the _id working\n// at what point are you putting the films in to their own db? \n\n//ok, trying to get the id again, sure i can do it.\n//you know, just check back in to master.\n//can't load films now, something gone wrong with the db\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilm, getCurrentProfile } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n\nconst CheckoutPage = (film) => {\n\tconst [formData, setFormData] = useState({\n\t\t_id: '',\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\tconsole.log(film);\n\n\tconst [bookingTotal, setBookingTotal] = useState(0);\n\n\t// you could fetch the film here, from the id, and narrow down\n\t// then set the form data, with the current film\n\t// ie getFilmById\n\t\t//this fills the values with current values\n\t// setFormData({\n //      _id: !film._id ? '' : film._id,\n //      user: !film.user ? '' : film.user,\n //      title: !film.title ? '' : film.title,\n //      cinema: !film.cinema ? '' : film.cinema,\n //      date: !film.date ? '' : film.date,\n //      image: !film.image ? '' : film.image,\n //      ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n //      crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n //      totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n //    });\n\n  // }\n\t//console.log(film)\n\t// console.log(formData)\n\tlet {\n\t\t_id,\n\t\tuser,\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\tlet tickets = 0;\n\t\t\t\n\tconst onChange = e => {\n\t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n\t\ttickets = film.totalsoFar + parseInt(e.target.value)\n\t\tsetBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n\t\tsetFormData({ ...formData, totalsoFar: tickets });\n\t\t// console.log(bookingTotal)\n\t}\t\n\t\t\n\tconst onSubmit = (e, film_id) => {\n\t\te.preventDefault();\n\t\t// console.log(film_id)\n\t\t// updateFilm(formData, history);\n\t};\n\n\treturn (\n\t<div>\n\t<form>\n\t<div className='checkout-page how-it-works'>\n\t\t<div className='checkout-header'>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Film: {film.title}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Date: {film.date} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Price: £{film.ticketPrice} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Crowdfunding Target: {film.crowdfundTarget} </span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>Tickets sold: {film.totalsoFar}</span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>{film._id}</span>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</form>\n\t\t\t<div className='header-block'>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Enter number of tickets'\n\t\t\t\t\tname='tickets'\n\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Basket total: £{bookingTotal}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\n\t\t\t\t<span \n\t\t\t\t// movie_id={film}\n\t\t\t\tonClick={e => onSubmit(e)}>\n\t\t\t\t\t<StripeCheckoutButton />\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}\n\n\n\n// const CheckoutPage = ({\n// \tupdateFilm,\n// \tfilm,\n// \t//what's the diff these two profiles? \n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t});\n// \tconsole.log(film);\n\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n\n// \t// you could fetch the film here, from the id, and narrow down\n// \t// then set the form data, with the current film\n// \t// ie getFilmById\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n\t\t\n// \t\t//this fills the values with current values\n// \tsetFormData({\n//       _id: !profile._id ? '' : profile._id,\n//       user: !profile.user ? '' : profile.user,\n//       title: !profile.title ? '' : profile.title,\n//       cinema: !profile.cinema ? '' : profile.cinema,\n//       date: !profile.date ? '' : profile.date,\n//       image: !profile.image ? '' : profile.image,\n//       ticketPrice: !profile.ticketPrice ? '' : profile.ticketPrice,\n//       crowdfundTarget: !profile.crowdfundTarget ? '' : profile.crowdfundTarget,\n//       totalsoFar: !profile.totalsoFar ? '' : profile.totalsoFar\n//     });\n\n//   }, [loading, getCurrentProfile]);\n// \t//console.log(profile)\n// \t// console.log(formData)\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n\n// \tlet tickets = 0;\n\t\t\t\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n\t\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\tconsole.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n\t\t\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\nCheckoutPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile\n});\n\nexport default connect(mapStateToProps, { updateFilm, getCurrentProfile })(\n\twithRouter(CheckoutPage)\n);"]},"metadata":{},"sourceType":"module"}