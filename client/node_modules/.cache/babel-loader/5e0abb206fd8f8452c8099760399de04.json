{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux'; // import { loadFilms } from '../../actions/film';\n//import { loadFilms } from '../../actions/film';\n\nimport Film from './Film';\n\nconst Films = ({\n  // loadFilms,\n  film: {\n    films,\n    loading\n  }\n}) => {\n  if (films === null) return null; //console.log(films)\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"all-screenings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"all-screenings-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"All our screenings\"), React.createElement(\"div\", {\n    className: \"films-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, films.map(item => React.createElement(Film, {\n    film: item,\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })))));\n};\n\nFilms.propTypes = {\n  film: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default connect(mapStateToProps)(Films);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js"],"names":["React","Fragment","useState","useEffect","axios","Link","PropTypes","Spinner","connect","Film","Films","film","films","loading","map","item","_id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACd;AACAC,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAFQ,CAAD,KAGP;AAEN,MAAID,KAAK,KAAK,IAAd,EAAoB,OAAO,IAAP,CAFd,CAGN;;AACA,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEO;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAEC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFA,KAAK,CAACE,GAAN,CAAUC,IAAI,IACjB,oBAAC,IAAD;AACA,IAAA,IAAI,EAAEA,IADN;AAEA,IAAA,GAAG,EAAEA,IAAI,CAACC,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CADE,CAFD,CAFP,CADA;AAkBA,CAzBD;;AA2BAN,KAAK,CAACO,SAAN,GAAkB;AACjBN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBC;AADN,CAAlB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADqB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CAACY,eAAD,CAAP,CAAyBV,KAAzB,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\n// import { loadFilms } from '../../actions/film';\n//import { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\nconst Films = ({ \n\t// loadFilms,\n\tfilm: {films, loading} \n\t}) => {\n\n\tif (films === null) return null;\n\t//console.log(films)\n\treturn (\n\t<Fragment>\n    \t\n        <section className=\"all-screenings\">\n        \t<h2 className=\"all-screenings-title\">All our screenings</h2>\n        \t<div className=\"films-list\"> \n\t    \t{films.map(item => (\n\t\t\t\t<Film\n\t\t\t\tfilm={item}\n\t\t\t\tkey={item._id}\n\t    \t\t/>\n          \t))\n           }\n           </div>\n        </section>    \t\n\t\n      </Fragment>\n\t)\n}\n\nFilms.propTypes = {\n\tfilm: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilm: state.film\n});\n\nexport default connect(mapStateToProps)(Films);"]},"metadata":{},"sourceType":"module"}