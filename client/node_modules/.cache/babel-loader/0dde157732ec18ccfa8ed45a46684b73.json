{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/layout/Landing.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner'; //import Films from '../films/Films';\n\nimport Film from '../films/Films';\nimport { loadFilms } from '../../actions/film'; //get current profile works because it is already loaded.\n//next - trace getCurrentProfile, see how it does it onload\n\nconst Landing = ({\n  isAuthenticated,\n  loadFilms,\n  films: {\n    film,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    loadFilms();\n  }, []); //console.log(film);\n  //fetch call here than set it with useState?\n\n  if (isAuthenticated) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  } //next - create a component and import it into landing\n\n\n  return React.createElement(\"section\", {\n    className: \"landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"landing-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, film === null || loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, film.map(item => React.createElement(Film, {\n    key: item._id,\n    film: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))))), React.createElement(\"h1\", {\n    className: \"x-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Saturday Cinema Club\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Crowdfunding to watch your favourite movies at the cinema\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/register\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Link, {\n    to: \"/login\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Login\")))));\n};\n\nLanding.propTypes = {\n  loadFilms: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {\n  loadFilms\n})(Landing); //export default Landing;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/layout/Landing.js"],"names":["React","Fragment","useEffect","Link","Redirect","connect","PropTypes","Spinner","Film","loadFilms","Landing","isAuthenticated","films","film","loading","map","item","_id","propTypes","func","isRequired","bool","object","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\n//import Films from '../films/Films';\nimport Film from '../films/Films';\nimport { loadFilms } from '../../actions/film';\n\n//get current profile works because it is already loaded.\n//next - trace getCurrentProfile, see how it does it onload\n\nconst Landing = ({ \n\tisAuthenticated, \n\tloadFilms, \n\tfilms: {film, loading} \n\t\t}) => {\n\t\tuseEffect(() =>  {\n    \tloadFilms();\t\n\t  \t}, []);\n\t\t//console.log(film);\n\n\t//fetch call here than set it with useState?\n\n\tif (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  \t}\n //next - create a component and import it into landing\n\treturn (\n\t\t<section className=\"landing\">\n\t      <div className=\"dark-overlay\">\n\t        <div className=\"landing-inner\">\n\t\t        <div>\n\t\t\t\t<Fragment>\n\t\t\t      {film === null || loading ? (\n\t\t\t        <Spinner /> \n\t\t\t        ) : (\n\t\t\t        <Fragment>\n\t\t           {film.map(item => (\n\t    \t\t\t\t<Film key={item._id} film={item} />\n\t              \t))\n\t\t           }\n\t\t\t\t</Fragment>    \t\n\t\t     )\n\t      }\n      </Fragment>\n\t\t\t\t</div>\t\t\n\t          <h1 className=\"x-large\">Saturday Cinema Club</h1>\n\t          <p className=\"lead\">\n\t            Crowdfunding to watch your favourite movies at the cinema  \n\t          </p>\n\t          <div>\n\t          </div>\n\t          <div className=\"buttons\">\n\t            <Link to=\"/register\" className=\"btn btn-primary\">Sign Up\n\t            </Link>\n\t            <Link to=\"/login\" className=\"btn btn-light\">Login\n\t            </Link>\n\t          </div>\n\t        </div>\n\t      </div>\n\t    </section>\n\t\t)\n\t}\n\nLanding.propTypes = {\n  loadFilms: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  films: state.film\n});\n\nexport default connect(mapStateToProps, { loadFilms })(Landing);\n//export default Landing;"]},"metadata":{},"sourceType":"module"}