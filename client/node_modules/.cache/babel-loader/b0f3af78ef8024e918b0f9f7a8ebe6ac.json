{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_FILM // GET_FILMS,\n, FILM_ERROR } from './types'; //import setAuthToken from '../utils/setAuthToken';\n// Get all Films\n\nexport const loadFilms = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/film'); //console.log(res.data);\n\n    dispatch({\n      type: GET_FILM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FILM_ERROR //payload: { msg: err.response.statusText, status: err.response.status }\n\n    });\n  }\n}; // Create or update film\n\nexport const createFilm = (filmData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    console.log(res);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // // Register User\n// export const register = ({ name, email, password }) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n//   const body = JSON.stringify({ name, email, password });\n//   try {\n//     const res = await axios.post('/api/users', body, config);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: REGISTER_FAIL\n//     });\n//   }\n// };\n// //Login User\n// export const login = (email, password) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n//   const body = JSON.stringify({ email, password });\n//   try {\n//     const res = await axios.post('/api/auth', body, config);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: LOGIN_FAIL\n//     });\n//   }\n// };\n// //Logout / Clear Profile\n// export const logout = () => dispatch => {\n//   // dispatch({ type: CLEAR_PROFILE });\n//   dispatch({ type: LOGOUT });\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/actions/film.js"],"names":["axios","setAlert","GET_FILM","FILM_ERROR","loadFilms","dispatch","res","get","type","payload","data","err","createFilm","filmData","history","edit","config","headers","post","formData","console","log","GET_PROFILE","push","errors","response","forEach","error","msg","PROFILE_ERROR","statusText","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,QADF,CAEE;AAFF,EAGEC,UAHF,QAIO,SAJP,C,CAKA;AAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAE/C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,WAAV,CAAlB,CADE,CAEF;;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,QADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,UADC,CAEP;;AAFO,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMS,UAAU,GAAG,CACxBC,QADwB,EAExBC,OAFwB,EAGxBC,IAAI,GAAG,KAHiB,KAIrB,MAAMV,QAAN,IAAkB;AACrB,MAAI;AACF,UAAMW,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKJ,UAAMX,GAAG,GAAG,MAAMN,KAAK,CAACkB,IAAN,CAAW,cAAX,EAA2BC,QAA3B,EAAqCH,MAArC,CAAlB;AACII,IAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEc,WADC;AAEPb,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACJ,QAAQ,CAACc,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,EAA+C,SAA/C,CAAT,CAAR;;AAEA,QAAI,CAACA,IAAL,EAAW;AACTD,MAAAA,OAAO,CAACS,IAAR,CAAa,YAAb;AACD;AACF,GAlBD,CAkBE,OAAOZ,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAItB,QAAQ,CAACJ,QAAQ,CAAC0B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDvB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEqB,aADC;AAEPpB,MAAAA,OAAO,EAAE;AAAEmB,QAAAA,GAAG,EAAEjB,GAAG,CAACc,QAAJ,CAAaK,UAApB;AAAgCC,QAAAA,MAAM,EAAEpB,GAAG,CAACc,QAAJ,CAAaM;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAnCM,C,CAsCP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_FILM,\n  // GET_FILMS,\n  FILM_ERROR\n} from './types';\n//import setAuthToken from '../utils/setAuthToken';\n\n// Get all Films\nexport const loadFilms = () => async dispatch => {\n  \n  try {\n    const res = await axios.get('/api/film');\n    //console.log(res.data);\n    dispatch({\n      type: GET_FILM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FILM_ERROR,\n      //payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create or update film\nexport const createFilm = (\n  filmData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\nconst res = await axios.post('/api/profile', formData, config);\n    console.log(res)\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n// // Register User\n// export const register = ({ name, email, password }) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   const body = JSON.stringify({ name, email, password });\n\n//   try {\n//     const res = await axios.post('/api/users', body, config);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n  \n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: REGISTER_FAIL\n//     });\n//   }\n// };\n\n// //Login User\n// export const login = (email, password) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   const body = JSON.stringify({ email, password });\n\n//   try {\n//     const res = await axios.post('/api/auth', body, config);\n\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data\n//     });\n  \n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: LOGIN_FAIL\n//     });\n//   }\n// };\n\n// //Logout / Clear Profile\n// export const logout = () => dispatch => {\n//   // dispatch({ type: CLEAR_PROFILE });\n//   dispatch({ type: LOGOUT });\n// };"]},"metadata":{},"sourceType":"module"}