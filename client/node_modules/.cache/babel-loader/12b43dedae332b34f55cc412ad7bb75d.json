{"ast":null,"code":"import _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/carousel/Carousel.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //import { loadFilms } from '../../actions/film';\n//import ImageSlide from '../carousel/ImageSlide';\n\nimport ImageSlide from './ImageSlide';\nimport Arrow from './Arrow'; // import Films from '../../films/Films';\n// const imgUrls = [\n//     \"https://cmeimg-a.akamaihd.net/640/clsd/getty/c64f76dc20c246ca88ee180fe4b4b781\", \n//     \"https://lh3.googleusercontent.com/oxPeODS2m6rYIVbhcQChRtOWEYeGDwbeeeB1cDU2o_WYAVPU61VIgx-_6BAh5gSL8Sw=h900\",\n//     \"https://i0.wp.com/www.universodegatos.com/wp-content/uploads/2017/04/fivfelv7.jpg?resize=582%2C328\",\n//     \"https://i.pinimg.com/736x/07/c3/45/07c345d0eca11d0bc97c894751ba1b46.jpg\",\n//     \"https://ehealthforum.com/health/images/avatars/11699147425707699031013.jpeg\"\n// ];\n\nconst Carousel = ({\n  films: {\n    film\n  }\n}) => {\n  // useEffect(() =>  {\n  //    \tloadFilms();\t\n  //   \t}, [loadFilms]);\n  useEffect(() => {\n    previousSlide();\n  }, [previousSlide]);\n  useEffect(() => {\n    nextSlide();\n  }, [nextSlide]); //const { image } = film;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentImageIndex = _useState2[0],\n        setImageIndex = _useState2[1]; //const imgUrls = [];\n  // film.map(item => (\n  //    imgUrls.push(item.image);\t\t\t\n  //     \t))\n  //      }\n  //ok, think forEach is running first, hoisting the fn, work out how to get \n  //urls into the arr next. should work then! \n  //create an array in state, feed it in as props?? \n  //  film.forEach(function (item) {\n  //    console.log(item.image)\n  //    // imgUrls.push(item) \n  // });\n  // console.log(imgUrls)\n\n\n  function previousSlide() {// const lastIndex = film.length - 1;\n    // const shouldResetIndex = currentImageIndex === 0;\n    // const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n    // setImageIndex(index)\t\n  }\n\n  function nextSlide() {} //    const lastIndex = film.length - 1;\n  //    const shouldResetIndex = currentImageIndex === lastIndex;\n  //    const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n  // setImageIndex(index)\n  // render () {\n\n\n  return React.createElement(\"div\", {\n    className: \"carousel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    direction: \"left\" // onClick={ previousSlide }\n    ,\n    glyph: \"\\u25C0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), film[0] !== undefined ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, console.log(film)) : null, React.createElement(Arrow, {\n    direction: \"right\" // onClick={ nextSlide }\n    ,\n    glyph: \"\\u25B6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })); // }\n}; //turn this into a fn, pass state in, from films\n// class Carousel extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       currentImageIndex: 0\n//     };\n//     this.nextSlide = this.nextSlide.bind(this);\n//     this.previousSlide = this.previousSlide.bind(this);\n// }\n//     previousSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === 0;\n//     const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n//   \tnextSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === lastIndex;\n//     const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n//   render () {\n//     return (\n//       <div className=\"carousel\">\n//       \t<Arrow\n//           direction=\"left\"\n//           clickFunction={ this.previousSlide }\n//           glyph=\"&#9664;\" />\n//         <ImageSlide url={ imgUrls[this.state.currentImageIndex] } />\n//         <Arrow\n//           direction=\"right\"\n//           clickFunction={ this.nextSlide }\n//           glyph=\"&#9654;\" />\n//       </div>\n//     );\n//   }\n// }\n// export default Carousel;\n\n\nCarousel.propTypes = {\n  //loadFilms: PropTypes.func.isRequired,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps)(Carousel); // <ImageSlide url={ `film[0].image` } />","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/carousel/Carousel.js"],"names":["React","useState","useEffect","PropTypes","connect","ImageSlide","Arrow","Carousel","films","film","previousSlide","nextSlide","currentImageIndex","setImageIndex","undefined","console","log","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAD,KAAyB;AAEzC;AACA;AACA;AAGAP,EAAAA,SAAS,CAAC,MAAM;AAChBQ,IAAAA,aAAa;AACZ,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AAChBS,IAAAA,SAAS;AACR,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT,CAXyC,CAezC;;AAfyC,oBAgBIV,QAAQ,CAAC,CAAD,CAhBZ;AAAA;AAAA,QAgBjCW,iBAhBiC;AAAA,QAgBdC,aAhBc,kBAkBzC;AAEC;AACA;AACA;AACA;AAEC;AACA;AACA;AACF;AACA;AACA;AACA;AAEA;;;AAIA,WAASH,aAAT,GAA0B,CAEvB;AACA;AACA;AACA;AACD;;AAEA,WAASC,SAAT,GAAsB,CAKpB,CALF,CACF;AACA;AACA;AACA;AAIA;;;AACG,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACG,IAAA,SAAS,EAAC,MADb,CAEG;AAFH;AAGG,IAAA,KAAK,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKKF,IAAI,CAAC,CAAD,CAAJ,KAAYK,SAAZ,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,OAAO,CAACC,GAAR,CAAYP,IAAZ,CAAN,CADM,GAGC,IARN,EAUE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,OADZ,CAEE;AAFF;AAGE,IAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CAtDsC,CAuExC;AAED,CAzED,C,CA6EA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAF,QAAQ,CAACU,SAAT,GAAqB;AACpB;AACAT,EAAAA,KAAK,EAAEL,SAAS,CAACe,MAAV,CAAiBC;AAFJ,CAArB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCb,EAAAA,KAAK,EAAEa,KAAK,CAACZ;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBb,QAAzB,CAAf,C,CAEK","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//import { loadFilms } from '../../actions/film';\n//import ImageSlide from '../carousel/ImageSlide';\nimport ImageSlide from './ImageSlide';\nimport Arrow from './Arrow'; \n// import Films from '../../films/Films';\n\n// const imgUrls = [\n//     \"https://cmeimg-a.akamaihd.net/640/clsd/getty/c64f76dc20c246ca88ee180fe4b4b781\", \n//     \"https://lh3.googleusercontent.com/oxPeODS2m6rYIVbhcQChRtOWEYeGDwbeeeB1cDU2o_WYAVPU61VIgx-_6BAh5gSL8Sw=h900\",\n//     \"https://i0.wp.com/www.universodegatos.com/wp-content/uploads/2017/04/fivfelv7.jpg?resize=582%2C328\",\n//     \"https://i.pinimg.com/736x/07/c3/45/07c345d0eca11d0bc97c894751ba1b46.jpg\",\n//     \"https://ehealthforum.com/health/images/avatars/11699147425707699031013.jpeg\"\n// ];\n\nconst Carousel = ({ films: { film } }) => {\n\n\t// useEffect(() =>  {\n //    \tloadFilms();\t\n\t//   \t}, [loadFilms]);\n\t\n\t\n\tuseEffect(() => {\n\tpreviousSlide ();\n\t}, [previousSlide]);\n\n\tuseEffect(() => {\n\tnextSlide ();\n\t}, [nextSlide]);\n\n\t//const { image } = film;\n\tconst [ currentImageIndex, setImageIndex ] = useState(0);\n\n\t//const imgUrls = [];\n\t\n \t// film.map(item => (\n\t //    imgUrls.push(item.image);\t\t\t\n  //     \t))\n  //      }\n  \t\n  \t//ok, think forEach is running first, hoisting the fn, work out how to get \n  \t//urls into the arr next. should work then! \n  \t//create an array in state, feed it in as props?? \n //  film.forEach(function (item) {\n //    console.log(item.image)\n //    // imgUrls.push(item) \n\t// });\n\n\t// console.log(imgUrls)\n\t\n\t\n\t\n\tfunction previousSlide () {\n\t\t\n    // const lastIndex = film.length - 1;\n    // const shouldResetIndex = currentImageIndex === 0;\n    // const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n    // setImageIndex(index)\t\n\t\t}\n\t\n  \tfunction nextSlide () {\n //    const lastIndex = film.length - 1;\n //    const shouldResetIndex = currentImageIndex === lastIndex;\n //    const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n\t// setImageIndex(index)\n  \t\t}\n  \t\n  \n\t// render () {\n    return (\n      <div className=\"carousel\">\n      \t<Arrow\n          direction=\"left\"\n          // onClick={ previousSlide }\n          glyph=\"&#9664;\" />\n          {film[0] !== undefined ?\n  \t\t\t<div>{console.log(film)}</div>\n  \t\t\t\n          : null\n\t\t}        \n        <Arrow\n          direction=\"right\"\n          // onClick={ nextSlide }\n          glyph=\"&#9654;\" />\n      </div>\n    );\n  // }\n\n}\n\n\n\n//turn this into a fn, pass state in, from films\n\n// class Carousel extends React.Component {\n//   constructor (props) {\n//     super(props);\n\n//     this.state = {\n//       currentImageIndex: 0\n//     };\n\n//     this.nextSlide = this.nextSlide.bind(this);\n//     this.previousSlide = this.previousSlide.bind(this);\n// }\n\n//     previousSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === 0;\n//     const index =  shouldResetIndex ? lastIndex : currentImageIndex - 1;\n\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n\n//   \tnextSlide () {\n//     const lastIndex = imgUrls.length - 1;\n//     const { currentImageIndex } = this.state;\n//     const shouldResetIndex = currentImageIndex === lastIndex;\n//     const index =  shouldResetIndex ? 0 : currentImageIndex + 1;\n\n//     this.setState({\n//       currentImageIndex: index\n//     });\n//   }\n\n//   render () {\n//     return (\n//       <div className=\"carousel\">\n//       \t<Arrow\n//           direction=\"left\"\n//           clickFunction={ this.previousSlide }\n//           glyph=\"&#9664;\" />\n\n//         <ImageSlide url={ imgUrls[this.state.currentImageIndex] } />\n//         <Arrow\n//           direction=\"right\"\n//           clickFunction={ this.nextSlide }\n//           glyph=\"&#9654;\" />\n//       </div>\n\n//     );\n//   }\n// }\n// export default Carousel;\n\nCarousel.propTypes = {\n\t//loadFilms: PropTypes.func.isRequired,\n\tfilms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilms: state.film\n});\n\nexport default connect(mapStateToProps)(Carousel);\n\t\t\t\n     // <ImageSlide url={ `film[0].image` } />     "]},"metadata":{},"sourceType":"module"}