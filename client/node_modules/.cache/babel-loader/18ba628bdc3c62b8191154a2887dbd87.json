{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n// separate the creation and update functions DONE\n//need to separete the films and users, akin to exp in devconnectors, and update separately \n//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n// morning\n// check video for ways out \n// at what point are you putting the films in to their own db? \n// in api/film \n// questions\n// how does profile create film in a different channel? GOES THROUGH MODEL PROFILE\n// what is the process via which this happens in films reducer?\n// how does the server file link up to this? \nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getFilmById } from '../../actions/film'; // import { getCurrentProfile, getFilmById } from '../../actions/profile';\n\nimport { updateFilm } from '../../actions/film'; // import { updateFilm } from '../../actions/profile';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport queryString from 'query-string';\n\nconst CheckoutPage = ({\n  updateFilm,\n  match,\n  // getCurrentProfile,\n  getFilmById,\n  film,\n  // profile: { profile, loading },\n  history\n}) => {\n  const _useState = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; //const [currentFilm, useParams] = useState(params);\n\n\n  let params = useParams(); // console.log(params.id)\n  //shouldnt you do this on the server so we're not fetching all? \n\n  const getFilm = film.film.filter(item => {\n    return item._id === params.id;\n  }); // remove array brackets\n\n  const currentFilm = getFilm[0]; //console.log(currentFilm)\n  //set booking total cost for live update on screen\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookingTotal = _useState4[0],\n        setBookingTotal = _useState4[1]; // fills the values with current values\n  //what does this do, apart from stop setFormData calling infinitely?\n  //this fills initial values, and stops repeated calls to setFormData in useState\n  //what are you passing in here? with params id? \n\n\n  useEffect(() => {\n    // console.log(params.id)\n    getFilmById(params); // getCurrentProfile();\n\n    setFormData({\n      _id: !currentFilm._id ? '' : currentFilm._id,\n      user: !currentFilm.user ? '' : currentFilm.user,\n      title: !currentFilm.title ? '' : currentFilm.title,\n      cinema: !currentFilm.cinema ? '' : currentFilm.cinema,\n      date: !currentFilm.date ? '' : currentFilm.date,\n      image: !currentFilm.image ? '' : currentFilm.image,\n      ticketPrice: !currentFilm.ticketPrice ? '' : currentFilm.ticketPrice,\n      crowdfundTarget: !currentFilm.crowdfundTarget ? '' : currentFilm.crowdfundTarget,\n      totalsoFar: !currentFilm.totalsoFar ? '' : currentFilm.totalsoFar\n    });\n  }, [getFilmById]); // console.log(film)\n  // console.log(formData)\n\n  let _id = formData._id,\n      user = formData.user,\n      title = formData.title,\n      date = formData.date,\n      cinema = formData.cinema,\n      image = formData.image,\n      ticketPrice = formData.ticketPrice,\n      crowdfundTarget = formData.crowdfundTarget,\n      totalsoFar = formData.totalsoFar;\n  let tickets = 0;\n\n  const onChange = e => {\n    // setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = currentFilm.totalsoFar + parseInt(e.target.value);\n    setBookingTotal(parseInt(currentFilm.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //this is fine, it's being submitted here\n\n    console.log(formData);\n    updateFilm(formData, history);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Film: \", currentFilm.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Date: \", currentFilm.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Price: \\xA3\", currentFilm.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", currentFilm.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Tickets sold: \", currentFilm.totalsoFar)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, currentFilm._id))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    // movie_id={film}\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), \"}\")));\n};\n\nCheckoutPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  film: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getFilmById\n})(withRouter(CheckoutPage)); // const CheckoutPage = ({\n// \tupdateFilm,\n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t}, [setFormData]);\n// \tlet params = useParams();\n// \tconst film = params;\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n// \t// fills the values with current values\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \tsetFormData({\n//       _id: !film._id ? '' : film._id,\n//       user: !film.user ? '' : film.user,\n//       title: !film.title ? '' : film.title,\n//       cinema: !film.cinema ? '' : film.cinema,\n//       date: !film.date ? '' : film.date,\n//       image: !film.image ? '' : film.image,\n//       ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n//       crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n//       totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n// \tlet tickets = 0;\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\t// console.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","useParams","Link","withRouter","Redirect","PropTypes","connect","getFilmById","updateFilm","StripeCheckoutButton","queryString","CheckoutPage","match","film","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","params","getFilm","filter","item","id","currentFilm","bookingTotal","setBookingTotal","tickets","onChange","e","parseInt","target","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired","object","profile","mapStateToProps","state"],"mappings":"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":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t// separate the creation and update functions DONE\n\t//need to separete the films and users, akin to exp in devconnectors, and update separately \n\t//but first, can you update via overwriting the _id first before major reconconstruction?\n// 3 create tickets, return to dashboard with tickets on dashboard\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n\n// morning\n// check video for ways out \n// at what point are you putting the films in to their own db? \n// in api/film \n\n// questions\n// how does profile create film in a different channel? GOES THROUGH MODEL PROFILE\n// what is the process via which this happens in films reducer?\n// how does the server file link up to this? \n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams} from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getFilmById } from '../../actions/film';\n// import { getCurrentProfile, getFilmById } from '../../actions/profile';\nimport { updateFilm } from '../../actions/film';\n// import { updateFilm } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport queryString from 'query-string';\n\nconst CheckoutPage = ({\n\tupdateFilm,\n\tmatch,\n\t// getCurrentProfile,\n\tgetFilmById,\n\tfilm,\n\t// profile: { profile, loading },\n\thistory\n}) => {\n\tconst [formData, setFormData] = useState({\n\t\t_id: '',\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\n\t//const [currentFilm, useParams] = useState(params);\n\n\tlet params = useParams();\n\t// console.log(params.id)\n\t//shouldnt you do this on the server so we're not fetching all? \n\tconst getFilm = film.film.filter(item => {\n\t\treturn item._id === params.id;\n\t});\n\t\n\t// remove array brackets\n\tconst currentFilm = getFilm[0]; \n\t//console.log(currentFilm)\n\t//set booking total cost for live update on screen\n\tconst [bookingTotal, setBookingTotal] = useState(0);\n\t\n\t// fills the values with current values\n\t//what does this do, apart from stop setFormData calling infinitely?\n\t//this fills initial values, and stops repeated calls to setFormData in useState\n\t//what are you passing in here? with params id? \n\tuseEffect(() => {\n\t\t// console.log(params.id)\n\t\tgetFilmById(params)\n\t\t\n\t\t// getCurrentProfile();\n\tsetFormData({\n      _id: !currentFilm._id ? '' : currentFilm._id,\n      user: !currentFilm.user ? '' : currentFilm.user,\n      title: !currentFilm.title ? '' : currentFilm.title,\n      cinema: !currentFilm.cinema ? '' : currentFilm.cinema,\n      date: !currentFilm.date ? '' : currentFilm.date,\n      image: !currentFilm.image ? '' : currentFilm.image,\n      ticketPrice: !currentFilm.ticketPrice ? '' : currentFilm.ticketPrice,\n      crowdfundTarget: !currentFilm.crowdfundTarget ? '' : currentFilm.crowdfundTarget,\n      totalsoFar: !currentFilm.totalsoFar ? '' : currentFilm.totalsoFar\n    });\n  }, [getFilmById]);\n\t// console.log(film)\n\t// console.log(formData)\n\tlet {\n\t\t_id,\n\t\tuser,\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\tlet tickets = 0;\n\t\t\t\n\tconst onChange = e => {\n\t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n\t\ttickets = currentFilm.totalsoFar + parseInt(e.target.value)\n\t\tsetBookingTotal(parseInt(currentFilm.ticketPrice) * parseInt(e.target.value));\n\t\tsetFormData({ ...formData, totalsoFar: tickets });\n\t}\t\n\t\t\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\t//this is fine, it's being submitted here\n\t\tconsole.log(formData)\t\t\n\t\tupdateFilm(formData, history);\n\t};\n\n\treturn (\n\t<div>\n\t<form>\n\t<div className='checkout-page how-it-works'>\n\t\t<div className='checkout-header'>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Film: {currentFilm.title}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Date: {currentFilm.date} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Price: £{currentFilm.ticketPrice} </span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Crowdfunding Target: {currentFilm.crowdfundTarget} </span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>Tickets sold: {currentFilm.totalsoFar}</span>\n\t\t\t</div>\n\t\t\t<div \n\t\t\tclassName='header-block'>\n\t\t\t\t<span>{currentFilm._id}</span>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</form>\n\t\t\t<div className='header-block'>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Enter number of tickets'\n\t\t\t\t\tname='tickets'\n\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='header-block'>\n\t\t\t\t<span>Basket total: £{bookingTotal}</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\n\t\t\t\t<span \n\t\t\t\t// movie_id={film}\n\t\t\t\tonClick={e => onSubmit(e)}>\n\t\t\t\t\t<StripeCheckoutButton />\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n\nCheckoutPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\t// getCurrentProfile: PropTypes.func.isRequired,\n\tgetFilmById: PropTypes.func.isRequired,\n\tfilm: PropTypes.object.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile,\n\tfilm: state.film\n});\n\nexport default connect(mapStateToProps, { updateFilm, getFilmById })(\n\twithRouter(CheckoutPage)\n);\n\n// const CheckoutPage = ({\n// \tupdateFilm,\n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t}, [setFormData]);\n\n// \tlet params = useParams();\n// \tconst film = params;\n\t\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n\t\n// \t// fills the values with current values\n\t\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \tsetFormData({\n//       _id: !film._id ? '' : film._id,\n//       user: !film.user ? '' : film.user,\n//       title: !film.title ? '' : film.title,\n//       cinema: !film.cinema ? '' : film.cinema,\n//       date: !film.date ? '' : film.date,\n//       image: !film.image ? '' : film.image,\n//       ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n//       crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n//       totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n\n// \tlet tickets = 0;\n\t\t\t\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n\t\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\t// console.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n\t\t\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\n"]},"metadata":{},"sourceType":"module"}