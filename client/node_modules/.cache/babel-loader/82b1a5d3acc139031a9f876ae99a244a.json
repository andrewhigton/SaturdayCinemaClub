{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n// separate the creation and update functions DONE\n//need to separete the films and users, and update separately DONE  \n// create tickets, return to dashboard with tickets on dashboard\n// book through landing page, go to a page that tells user your ticket will be sent when film confirmed\n//how to trigger rerender after booking?\n//how to push through payment without auth? trace where this is happening\n// only after loggin in and out are you permitted to buy a ticket??\n// getfilm and getfilms have same outcome, all films.\n// once they book, take user to their dashboard, with tickets and any films created  \n// can only do this with stripe payouts on server \n// 3 update film immediately with new ticket number\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n// questions\n// how does profile create film in a different channel? GOES THROUGH MODEL PROFILE\n// what is the process via which this happens in films reducer?\n// how does the server file link up to this? \nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { getFilmById, updateFilm } from '../../actions/film'; // import { getCurrentProfile, getFilmById } from '../../actions/profile';\n// import { updateFilm } from '../../actions/profile';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button'; //import queryString from 'query-string';\n\nconst CheckoutPage = ({\n  film: {\n    film,\n    loading\n  },\n  updateFilm,\n  getFilmById,\n  match,\n  // profile: { profile, loading },\n  history\n}) => {\n  // useEffect(() => {\n  //    getFilmById(match.params.id);\n  //  }, [getFilmById, match.params.id]);\n  // console.log(film)\n  //console.log(match.params.id);\n  //why does this log 4 times? \n  //and why doesn update not work at route?\n  //go back to the video to work this out. what is req.user.i\n  // console.log(film);\n  const _useState = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  let _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookingTotal = _useState4[0],\n      setBookingTotal = _useState4[1]; // remove array brackets\n  // const film = []\n  // getFilm[0]; \n  //console.log(currentFilm)\n  //set booking total cost for live update on screen\n  // this is the problem \n  //this fills initial values, and stops repeated calls to setFormData in useState\n\n\n  useEffect(() => {\n    //console.log(film)\n    getFilmById(match.params.id); // this is the problem, but why? \n\n    if (film !== null) {\n      setFormData({\n        // ...state,\n        //   totalsoFar: ''\n        // _id: film._id,\n        // user: film.user,\n        // title: film.title,\n        // cinema: film.cinema,\n        // date: film.date,\n        // image: film.image,\n        // ticketPrice: film.ticketPrice,\n        // crowdfundTarget: film.crowdfundTarget,\n        // totalsoFar: film.totalsoFar\n        _id: loading || !film._id ? _id : film._id,\n        user: loading || !film.user ? user : film.user,\n        title: loading || !film.title ? title : film.title,\n        cinema: loading || !film.cinema ? cinema : film.cinema,\n        date: loading || !film.date ? date : film.date,\n        image: loading || !film.image ? image : film.image,\n        ticketPrice: loading || !film.ticketPrice ? ticketPrice : film.ticketPrice,\n        crowdfundTarget: loading || !film.crowdfundTarget ? crowdfundTarget : film.crowdfundTarget,\n        totalsoFar: loading || !film.totalsoFar ? totalsoFar : film.totalsoFar\n      });\n    }\n  }, [loading, getFilmById]); // console.log(film)\n  //so it's there, it's loaded, so why not showing?\n\n  const _id = formData._id,\n        user = formData.user,\n        title = formData.title,\n        date = formData.date,\n        cinema = formData.cinema,\n        image = formData.image,\n        ticketPrice = formData.ticketPrice,\n        crowdfundTarget = formData.crowdfundTarget,\n        totalsoFar = formData.totalsoFar;\n  let tickets = 0;\n\n  const onChange = e => {\n    // setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = film.totalsoFar + parseInt(e.target.value);\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateFilm(formData, history);\n  }; //if (film === null) return null;\n\n\n  useEffect(() => {\n    getFilmById(match.params.id); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getFilmById]);\n  return film === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, film._id))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), \"}\")))) // )}\n  // </Fragment>\t\n  ;\n};\n\nCheckoutPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  film: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getFilmById\n})(withRouter(CheckoutPage)); // <p>Tickets sold: {Object.values(formData)}</p>\n// const CheckoutPage = ({\n// \tupdateFilm,\n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t}, [setFormData]);\n// \tlet params = useParams();\n// \tconst film = params;\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n// \t// fills the values with current values\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \tsetFormData({\n//       _id: !film._id ? '' : film._id,\n//       user: !film.user ? '' : film.user,\n//       title: !film.title ? '' : film.title,\n//       cinema: !film.cinema ? '' : film.cinema,\n//       date: !film.date ? '' : film.date,\n//       image: !film.image ? '' : film.image,\n//       ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n//       crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n//       totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n// \tlet tickets = 0;\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\t// console.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","useParams","Link","withRouter","Redirect","PropTypes","Spinner","connect","getFilmById","updateFilm","StripeCheckoutButton","CheckoutPage","film","loading","match","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","bookingTotal","setBookingTotal","params","id","tickets","onChange","e","parseInt","target","value","onSubmit","preventDefault","propTypes","func","isRequired","object","profile","mapStateToProps","state"],"mappings":"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":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t// separate the creation and update functions DONE\n\t//need to separete the films and users, and update separately DONE  \n\t// create tickets, return to dashboard with tickets on dashboard\n\n// book through landing page, go to a page that tells user your ticket will be sent when film confirmed\n//how to trigger rerender after booking?\n//how to push through payment without auth? trace where this is happening\n// only after loggin in and out are you permitted to buy a ticket??\n// getfilm and getfilms have same outcome, all films.\n\n// once they book, take user to their dashboard, with tickets and any films created  \n// can only do this with stripe payouts on server \n// 3 update film immediately with new ticket number\n// 4 with two sections, one for films, one for tickets \n// 5 why is bookpage called twice?\n// 6 why can i not navigate between the pages without losing the data?\n\n\n// questions\n// how does profile create film in a different channel? GOES THROUGH MODEL PROFILE\n// what is the process via which this happens in films reducer?\n// how does the server file link up to this? \n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams} from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { getFilmById, updateFilm } from '../../actions/film';\n// import { getCurrentProfile, getFilmById } from '../../actions/profile';\n\n// import { updateFilm } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n//import queryString from 'query-string';\n\nconst CheckoutPage = ({\n\tfilm: {film, loading},\n\tupdateFilm,\n\tgetFilmById,\n\tmatch,\n\t// profile: { profile, loading },\n\thistory\n}) => {\n\t// useEffect(() => {\n //    getFilmById(match.params.id);\n //  }, [getFilmById, match.params.id]);\n\t// console.log(film)\n\t//console.log(match.params.id);\n\t//why does this log 4 times? \n\t//and why doesn update not work at route?\n\t//go back to the video to work this out. what is req.user.i\n\t// console.log(film);\n\tconst [formData, setFormData] = useState({\n\t\t_id: '',\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\n\tlet [bookingTotal, setBookingTotal] = useState(0);\n\t// remove array brackets\n\t// const film = []\n\t// getFilm[0]; \n\t//console.log(currentFilm)\n\t//set booking total cost for live update on screen\n\t\n\t// this is the problem \n\t//this fills initial values, and stops repeated calls to setFormData in useState\n\tuseEffect(() => {\n\t\t//console.log(film)\n\t\tgetFilmById(match.params.id)\n\t\n\t// this is the problem, but why? \n\tif(film !== null) {   \n\tsetFormData({\n      // ...state,\n      //   totalsoFar: ''\n      // _id: film._id,\n      // user: film.user,\n      // title: film.title,\n      // cinema: film.cinema,\n      // date: film.date,\n      // image: film.image,\n      // ticketPrice: film.ticketPrice,\n      // crowdfundTarget: film.crowdfundTarget,\n      // totalsoFar: film.totalsoFar\n      _id: loading || !film._id ? _id : film._id,\n      user: loading || !film.user ? user : film.user,\n      title: loading || !film.title ? title : film.title,\n      cinema: loading || !film.cinema ? cinema : film.cinema,\n      date: loading || !film.date ? date : film.date,\n      image: loading || !film.image ? image : film.image,\n      ticketPrice: loading || !film.ticketPrice ? ticketPrice : film.ticketPrice,\n      crowdfundTarget: loading || !film.crowdfundTarget ? crowdfundTarget : film.crowdfundTarget,\n      totalsoFar: loading || !film.totalsoFar ? totalsoFar : film.totalsoFar\n    \t\t});\n\t\t\t\t}\n   }, [loading, getFilmById]);\n\t// console.log(film)\n\t\n\t\n\t//so it's there, it's loaded, so why not showing?\n\tconst {\n\t\t_id,\n\t\tuser,\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\tlet tickets = 0;\n\t\t\t\n\tconst onChange = e => {\n\t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n\t\ttickets = film.totalsoFar + parseInt(e.target.value)\n\t\tsetBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n\t\tsetFormData({ ...formData, totalsoFar: tickets });\n\t}\t\n\t\t\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tupdateFilm(formData, history);\n\t};\n\t\n\t//if (film === null) return null;\n\tuseEffect(() => {\n\t\tgetFilmById(match.params.id)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [getFilmById]);\n\treturn film === null ? (\n\t\t\t\t\t<Spinner />\t\n\t\t\t   ) : (\n\t\t\t    \t<Fragment>  \n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<div className='checkout-page how-it-works'>\n\t\t\t\t\t\t\t\t\t<div className='checkout-header'>\n\t\t\t\t\t\t\t\t\t\t<div className='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Film: {film.title}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div className='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Date: {film.date} </span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div className='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Price: £{film.ticketPrice} </span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div className='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Crowdfunding Target: {film.crowdfundTarget} </span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\tclassName='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Tickets sold: {film.totalsoFar}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\tclassName='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>{film._id}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t<div className='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter number of tickets'\n\t\t\t\t\t\t\t\t\t\t\t\tname='tickets'\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='header-block'>\n\t\t\t\t\t\t\t\t\t\t\t<span>Basket total: £{bookingTotal}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<span onClick={e => onSubmit(e)}> \n\t\t\t\t\t\t\t\t\t\t\t\t<StripeCheckoutButton />\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t\t// )}\n\t    // </Fragment>\t\n\t\t);\n\t};\n\n\nCheckoutPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\t// getCurrentProfile: PropTypes.func.isRequired,\n\tgetFilmById: PropTypes.func.isRequired,\n\tfilm: PropTypes.object.isRequired,\n\tprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tprofile: state.profile,\n\tfilm: state.film\n});\n\nexport default connect(mapStateToProps, { updateFilm, getFilmById })(\n\twithRouter(CheckoutPage)\n);\n\n// <p>Tickets sold: {Object.values(formData)}</p>\n\t\n\n// const CheckoutPage = ({\n// \tupdateFilm,\n// \tgetCurrentProfile,\n// \tprofile: { profile, loading },\n// \thistory, \n// \t// id,\n// }) => {\n// \tconst [formData, setFormData] = useState({\n// \t\t_id: '',\n// \t\tuser: '',\n// \t\ttitle: '',\n// \t\tdate: '',\n// \t\tcinema: '',\n// \t\timage: '',\n// \t\tticketPrice: '',\n// \t\tcrowdfundTarget: '',\n// \t\ttotalsoFar: ''\n// \t}, [setFormData]);\n\n// \tlet params = useParams();\n// \tconst film = params;\n\t\n// \tconst [bookingTotal, setBookingTotal] = useState(0);\n\t\n// \t// fills the values with current values\n\t\n// \tuseEffect(() => {\n// \t\tgetCurrentProfile();\n// \tsetFormData({\n//       _id: !film._id ? '' : film._id,\n//       user: !film.user ? '' : film.user,\n//       title: !film.title ? '' : film.title,\n//       cinema: !film.cinema ? '' : film.cinema,\n//       date: !film.date ? '' : film.date,\n//       image: !film.image ? '' : film.image,\n//       ticketPrice: !film.ticketPrice ? '' : film.ticketPrice,\n//       crowdfundTarget: !film.crowdfundTarget ? '' : film.crowdfundTarget,\n//       totalsoFar: !film.totalsoFar ? '' : film.totalsoFar\n//     });\n//   }, [loading, getCurrentProfile]);\n\n// \tlet {\n// \t\t_id,\n// \t\tuser,\n// \t\ttitle,\n// \t\tdate,\n// \t\tcinema,\n// \t\timage,\n// \t\tticketPrice,\n// \t\tcrowdfundTarget,\n// \t\ttotalsoFar\n// \t} = formData;\n\n// \tlet tickets = 0;\n\t\t\t\n// \tconst onChange = e => {\n// \t\t// setFormData({ ...formData, [e.target.name]: e.target.value });\n// \t\ttickets = profile.totalsoFar + parseInt(e.target.value)\n// \t\tsetBookingTotal(parseInt(profile.ticketPrice) * parseInt(e.target.value));\n// \t\tsetFormData({ ...formData, totalsoFar: tickets });\n// \t\t// console.log(bookingTotal)\n// \t}\t\n\t\t\n// \tconst onSubmit = (e, film_id) => {\n// \t\te.preventDefault();\n// \t\t// console.log(film_id)\n// \t\tupdateFilm(formData, history);\n// \t};\n\n// \treturn (\n// \t<div>\n// \t<form>\n// \t<div className='checkout-page how-it-works'>\n// \t\t<div className='checkout-header'>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Film: {profile.title}</span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Date: {profile.date} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Price: £{profile.ticketPrice} </span>\n// \t\t\t</div>\n\t\t\t\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Crowdfunding Target: {profile.crowdfundTarget} </span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>Tickets sold: {profile.totalsoFar}</span>\n// \t\t\t</div>\n// \t\t\t<div \n// \t\t\tclassName='header-block'>\n// \t\t\t\t<span>{profile._id}</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t</div>\n// \t\t</form>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<input\n// \t\t\t\t\ttype='number'\n// \t\t\t\t\tplaceholder='Enter number of tickets'\n// \t\t\t\t\tname='tickets'\n// \t\t\t\t\tonChange={e => onChange(e)}\n// \t\t\t\t/>\n// \t\t\t</div>\n// \t\t\t<div className='header-block'>\n// \t\t\t\t<span>Basket total: £{bookingTotal}</span>\n// \t\t\t</div>\n// \t\t\t<div>\n// \t\t\t<Link className='btn btn-light my-1' to='/dashboard'>Go Back\n// \t\t\t</Link>\n// \t\t\t</div>\n// \t\t\t<div>\n\t\t\n// \t\t\t\t<span \n// \t\t\t\t// movie_id={film}\n// \t\t\t\tonClick={e => onSubmit(e)}>\n// \t\t\t\t\t<StripeCheckoutButton />\n// \t\t\t\t\t}\n// \t\t\t\t</span>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\n"]},"metadata":{},"sourceType":"module"}