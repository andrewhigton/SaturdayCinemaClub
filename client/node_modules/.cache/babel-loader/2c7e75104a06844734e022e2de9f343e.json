{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Films from '../films/Films';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  films: {\n    film,\n    loading\n  },\n  profile: {\n    profile\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]); // so get film to work here\n\n  console.log(films); // if (film === null) return null;\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" Welcome \", user && user.name), film !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, console.log(film))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"no-profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"You have not yet setup a profile, please add some info\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, console.log('not working')), React.createElement(Link, {\n    to: \"/create-film\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Create Film\"))));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  //deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard); // <p>{console.log(profile.title)}</p>\n// <p>{console.log(profile.date)}</p>\n// loading && film === null ? <Spinner /> : \n//next - emulate profile in devconnect\n//you have to build in the films component here\n//then you have to map through the films to check if linked to user\n//note - the other way of doing this is to embed films in users, \n//then loop through the users and collect all the films","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","Films","PropTypes","Spinner","connect","DashboardActions","getCurrentProfile","Dashboard","auth","user","films","film","loading","profile","console","log","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBD,EAAAA,iBADiB;AAEjBE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFW;AAGjBC,EAAAA,KAAK,EAAE;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAHU;AAIjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA;AAAF;AAJQ,CAAD,KAKV;AACPd,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT,CADO,CAKN;;AACFQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EANQ,CAON;;AACD,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADE,EAEF;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eACyCD,IAAI,IAAIA,IAAI,CAACO,IADtD,CAFE,EAKDL,IAAI,KAAK,IAAT,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CAAJ,CADF,CADD,GAKC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAJ,CAFA,EAGA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAwB,IAAA,SAAS,EAAC,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,CADF,CAVA,CAAP;AAsBA,CAnCD;;AAqCCR,SAAS,CAACU,SAAV,GAAsB;AACtBX,EAAAA,iBAAiB,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UADZ;AAEtB;AACAX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,MAAV,CAAiBD,UAHD;AAItBN,EAAAA,OAAO,EAAEX,SAAS,CAACkB,MAAV,CAAiBD,UAJJ;AAKrBT,EAAAA,KAAK,EAAER,SAAS,CAACkB,MAAV,CAAiBD;AALH,CAAtB;;AAQD,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCd,EAAAA,IAAI,EAAEc,KAAK,CAACd,IADqB;AAEjCK,EAAAA,OAAO,EAAES,KAAK,CAACT,OAFkB;AAGhCH,EAAAA,KAAK,EAAEY,KAAK,CAACX;AAHmB,CAAL,CAA7B;;AAMA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf,C,CAEU;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Films from '../films/Films';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({ \n  getCurrentProfile, \n  auth: { user }, \n  films: {film, loading}, \n  profile: { profile } \n  }) => {\n\tuseEffect(() => {\n\t\tgetCurrentProfile();\n\t}, [getCurrentProfile]);\n\n  // so get film to work here\nconsole.log(films)\n  // if (film === null) return null;\n\treturn <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome {user && user.name}\n      </p>\n      {film !== null ? (\n        <Fragment>\n          <p>{console.log(film)}</p>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <div className=\"no-profile\">\n          <p>You have not yet setup a profile, please add some info</p>\n          <p>{console.log('not working')}</p>\n          <Link to='/create-film' className='btn btn-primary my-1'>\n            Create Film\n          </Link>\n          </div>\n        </Fragment>\n      )}\n   \n    </Fragment>\n};\n\n Dashboard.propTypes = {\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\t//deleteAccount: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\tprofile: PropTypes.object.isRequired,\n  films: PropTypes.object.isRequired\n};  \n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tprofile: state.profile,\n  films: state.film\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n                    \n          // <p>{console.log(profile.title)}</p>\n          // <p>{console.log(profile.date)}</p>\n          \n\n          // loading && film === null ? <Spinner /> : \n          //next - emulate profile in devconnect\n          //you have to build in the films component here\n          //then you have to map through the films to check if linked to user\n          //note - the other way of doing this is to embed films in users, \n          //then loop through the users and collect all the films "]},"metadata":{},"sourceType":"module"}