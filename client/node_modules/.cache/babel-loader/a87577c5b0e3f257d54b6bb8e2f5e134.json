{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, UPDATE_PROFILE, GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, FILM_ERROR, GET_FILM // ACCOUNT_DELETED,\n} from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    //in dev, this is profile/me\n    const res = await axios.get('/api/profile/me'); // console.log(res.data)\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const loadProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR //payload: { msg: err.response.statusText, status: err.response.status }\n\n    });\n  }\n}; // create film\n\nexport const createFilm = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; //note - when it comes to finalisng this, get ride of profile, put it in film path\n\n    const res = await axios.post('/api/profile/create-film', formData, config);\n    dispatch({\n      type: GET_FILM,\n      payload: res.data\n    }); // dispatch(setAlert(edit ? 'Film updated' : 'Film created', 'success'));\n    // if(!edit) {\n    //   history.push('/dashboard');\n    // }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // // Delete account & profile\n// export const deleteAccount = () => async dispatch => {\n//   if (window.confirm('Are you sure? This can NOT be undone!')) {\n//     try {\n//       await axios.delete('/api/profile');\n//       dispatch({ type: CLEAR_PROFILE });\n//       dispatch({ type: ACCOUNT_DELETED });\n//       dispatch(setAlert('Your account has been permanantly deleted'));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText, status: err.response.status }\n//       });\n//     }\n//   }\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","UPDATE_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","FILM_ERROR","GET_FILM","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","loadProfiles","createFilm","formData","history","config","headers","post","errors","forEach","error","addExperience","put","push"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  FILM_ERROR,\n  GET_FILM,\n  // ACCOUNT_DELETED,\n} from './types';\n\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    //in dev, this is profile/me\n    const res = await axios.get('/api/profile/me');\n    // console.log(res.data)\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n\n\nexport const loadProfiles = () => async dispatch => {\n  \n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      //payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n  };\n\n// create film\nexport const createFilm = ( formData, history ) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    //note - when it comes to finalisng this, get ride of profile, put it in film path\n    const res = await axios.post('/api/profile/create-film', formData, config);    \n    dispatch({\n      type: GET_FILM,\n      payload: res.data\n    });\n\n    // dispatch(setAlert(edit ? 'Film updated' : 'Film created', 'success'));\n\n    // if(!edit) {\n    //   history.push('/dashboard');\n    // }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n\n// Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.put('/api/profile/experience', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// // Delete account & profile\n// export const deleteAccount = () => async dispatch => {\n//   if (window.confirm('Are you sure? This can NOT be undone!')) {\n//     try {\n//       await axios.delete('/api/profile');\n\n//       dispatch({ type: CLEAR_PROFILE });\n//       dispatch({ type: ACCOUNT_DELETED });\n\n//       dispatch(setAlert('Your account has been permanantly deleted'));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText, status: err.response.status }\n//       });\n//     }\n//   }\n// };"]},"metadata":{},"sourceType":"module"}