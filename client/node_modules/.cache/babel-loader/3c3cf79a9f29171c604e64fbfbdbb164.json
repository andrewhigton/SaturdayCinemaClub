{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE // GET_PROFILES,\n, PROFILE_ERROR // UPDATE_PROFILE,\n// CLEAR_PROFILE,\n// ACCOUNT_DELETED,\n// GET_REPOS\n} from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n// export const createProfile = (\n//   formData,\n//   history,\n//   edit = false\n// ) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n//     const res = await axios.post('/api/profile', formData, config);\n//     console.log(res)\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n//     dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n//     if (!edit) {\n//       history.push('/dashboard');\n//     }\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Get all profiles\n// export const getProfiles = () => async dispatch => {\n//   dispatch({ type: CLEAR_PROFILE });\n//   try {\n//     const res = await axios.get('/api/profile');\n//     dispatch({\n//       type: GET_PROFILES,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// //Get profile by ID\n// export const getProfileById = userId => async dispatch => {\n//   try {\n//     const res = await axios.get(`/api/profile/user/${userId}`);\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Get Github repos\n// export const getGithubRepos = username => async dispatch => {\n//   try {\n//     const res = await axios.get(`/api/profile/github/${username}`);\n//     dispatch({\n//       type: GET_REPOS,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Add Experience\n// export const addExperience = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n//     const res = await axios.put('/api/profile/experience', formData, config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n//     dispatch(setAlert('Experience Added', 'success'));\n//     history.push('/dashboard');\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Add Education\n// export const addEducation = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n//     const res = await axios.put('/api/profile/education', formData, config);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n//     dispatch(setAlert('Education Added', 'success'));\n//     history.push('/dashboard');\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Delete experience\n// export const deleteExperience = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`/api/profile/experience/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n//     dispatch(setAlert('Experience Removed', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Delete education\n// export const deleteEducation = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`/api/profile/education/${id}`);\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n//     dispatch(setAlert('Education Removed', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n// // Delete account & profile\n// export const deleteAccount = () => async dispatch => {\n//   if (window.confirm('Are you sure? This can NOT be undone!')) {\n//     try {\n//       await axios.delete('/api/profile');\n//       dispatch({ type: CLEAR_PROFILE });\n//       dispatch({ type: ACCOUNT_DELETED });\n//       dispatch(setAlert('Your account has been permanantly deleted'));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText, status: err.response.status }\n//       });\n//     }\n//   }\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,SACEC,WADF,CAEE;AAFF,EAGEC,aAHF,CAIE;AACA;AACA;AACA;AAPF,OAQO,SARP,C,CAUA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACvD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,aADC;AAEPM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM,C,CAgsourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  // GET_PROFILES,\n  PROFILE_ERROR,\n  // UPDATE_PROFILE,\n  // CLEAR_PROFILE,\n  // ACCOUNT_DELETED,\n  // GET_REPOS\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Create or update profile\n// export const createProfile = (\n//   formData,\n//   history,\n//   edit = false\n// ) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n\n//     const res = await axios.post('/api/profile', formData, config);\n//     console.log(res)\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n//     if (!edit) {\n//       history.push('/dashboard');\n//     }\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Get all profiles\n// export const getProfiles = () => async dispatch => {\n//   dispatch({ type: CLEAR_PROFILE });\n\n//   try {\n//     const res = await axios.get('/api/profile');\n\n//     dispatch({\n//       type: GET_PROFILES,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// //Get profile by ID\n// export const getProfileById = userId => async dispatch => {\n//   try {\n//     const res = await axios.get(`/api/profile/user/${userId}`);\n\n//     dispatch({\n//       type: GET_PROFILE,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Get Github repos\n// export const getGithubRepos = username => async dispatch => {\n//   try {\n//     const res = await axios.get(`/api/profile/github/${username}`);\n\n//     dispatch({\n//       type: GET_REPOS,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Add Experience\n// export const addExperience = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n\n//     const res = await axios.put('/api/profile/experience', formData, config);\n\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Experience Added', 'success'));\n\n//     history.push('/dashboard');\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Add Education\n// export const addEducation = (formData, history) => async dispatch => {\n//   try {\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     };\n\n//     const res = await axios.put('/api/profile/education', formData, config);\n\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Education Added', 'success'));\n\n//     history.push('/dashboard');\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Delete experience\n// export const deleteExperience = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`/api/profile/experience/${id}`);\n\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Experience Removed', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Delete education\n// export const deleteEducation = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`/api/profile/education/${id}`);\n\n//     dispatch({\n//       type: UPDATE_PROFILE,\n//       payload: res.data\n//     });\n\n//     dispatch(setAlert('Education Removed', 'success'));\n//   } catch (err) {\n//     dispatch({\n//       type: PROFILE_ERROR,\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };\n\n// // Delete account & profile\n// export const deleteAccount = () => async dispatch => {\n//   if (window.confirm('Are you sure? This can NOT be undone!')) {\n//     try {\n//       await axios.delete('/api/profile');\n\n//       dispatch({ type: CLEAR_PROFILE });\n//       dispatch({ type: ACCOUNT_DELETED });\n\n//       dispatch(setAlert('Your account has been permanantly deleted'));\n//     } catch (err) {\n//       dispatch({\n//         type: PROFILE_ERROR,\n//         payload: { msg: err.response.statusText, status: err.response.status }\n//       });\n//     }\n//   }\n// };"]},"metadata":{},"sourceType":"module"}