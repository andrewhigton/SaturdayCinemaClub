{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\nconst Films = ({\n  loadFilms,\n  films: {\n    film,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    loadFilms();\n  }, [loadFilms]);\n  console.log(film);\n  if (film === null) return null;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"all-screenings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"all-screenings-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"All our screenings\"), React.createElement(\"div\", {\n    className: \"films-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, film.map(item => React.createElement(Film, {\n    film: item,\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })))));\n};\n\nFilms.propTypes = {\n  loadFilms: PropTypes.func.isRequired,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {\n  loadFilms\n})(Films);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js"],"names":["React","Fragment","useState","useEffect","axios","Link","PropTypes","Spinner","connect","loadFilms","Film","Films","films","film","loading","console","log","map","item","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACdF,EAAAA,SADc;AAEdG,EAAAA,KAAK,EAAE;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP;AAFO,CAAD,KAGP;AAENX,EAAAA,SAAS,CAAC,MAAO;AACbM,IAAAA,SAAS;AACT,GAFK,EAEH,CAACA,SAAD,CAFG,CAAT;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,IAAP;AACnB,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEO;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAEC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFA,IAAI,CAACI,GAAL,CAASC,IAAI,IAChB,oBAAC,IAAD;AACA,IAAA,IAAI,EAAEA,IADN;AAEA,IAAA,GAAG,EAAEA,IAAI,CAACC,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CADE,CAFD,CAFP,CADA;AAkBA,CA7BD;;AA+BAR,KAAK,CAACS,SAAN,GAAkB;AACjBX,EAAAA,SAAS,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADT;AAEjBV,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCb,EAAAA,KAAK,EAAEa,KAAK,CAACZ;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAwCE,KAAxC,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\nconst Films = ({ \n\tloadFilms,\n\tfilms: {film, loading} \n\t}) => {\n\n\tuseEffect(() =>  {\n    \tloadFilms();\t\n\t  \t}, [loadFilms]);\n\n\tconsole.log(film)\t\n\tif (film === null) return null;\n\treturn (\n\t<Fragment>\n    \t\n        <section className=\"all-screenings\">\n        \t<h2 className=\"all-screenings-title\">All our screenings</h2>\n        \t<div className=\"films-list\"> \n\t    \t{film.map(item => (\n\t\t\t\t<Film\n\t\t\t\tfilm={item}\n\t\t\t\tkey={item._id}\n\t    \t\t/>\n          \t))\n           }\n           </div>\n        </section>    \t\n\t\n      </Fragment>\n\t)\n}\n\nFilms.propTypes = {\n\tloadFilms: PropTypes.func.isRequired,\n\tfilms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilms: state.film\n});\n\nexport default connect(mapStateToProps, { loadFilms })(Films);"]},"metadata":{},"sourceType":"module"}