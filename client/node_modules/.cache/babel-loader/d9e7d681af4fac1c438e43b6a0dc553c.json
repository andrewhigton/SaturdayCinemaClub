{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film'; // import { clearItemFromCart, addItem, removeItem } from '../../reducers/cart/cart.actions';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({\n  film: {\n    film,\n    loading\n  },\n  match,\n  getFilmById,\n  updateFilm,\n  history\n}) => {\n  const _useState = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  console.log(film);\n  useEffect(() => {\n    getFilmById(match.params.id); // if(film !== null) {   \n\n    if (!loading && film) {\n      // if(!loading) {\n      //console.log('film')\n      setFormData({\n        // ...state,\n        //   totalsoFar: ''\n        _id: film._id,\n        user: film.user,\n        title: film.title,\n        cinema: film.cinema,\n        date: film.date,\n        image: film.image,\n        ticketPrice: film.ticketPrice,\n        crowdfundTarget: film.crowdfundTarget,\n        totalsoFar: film.totalsoFar // //you don't actually need this form for the most part. \n        //if(film._id !== '') {_id: film._id }\n        // _id: loading || !film._id ? '' : film._id,\n        // user: loading || !film.user ? '' : film.user,\n        // title: loading || !film.title ? '' : film.title,\n        // cinema: loading || !film.cinema ? '' : film.cinema,\n        // date: loading || !film.date ? '' : film.date,\n        // image: loading || !film.image ? '' : film.image,\n        // ticketPrice: loading || !film.ticketPrice ? '' : film.ticketPrice,\n        // crowdfundTarget: loading || !film.crowdfundTarget ? '' : film.crowdfundTarget,\n        // totalsoFar: loading || !film.totalsoFar ? '' : film.totalsoFar\n\n      });\n    }\n  }, [loading, getFilmById]);\n  const _id = formData._id,\n        title = formData.title,\n        date = formData.date,\n        cinema = formData.cinema,\n        image = formData.image,\n        ticketPrice = formData.ticketPrice,\n        crowdfundTarget = formData.crowdfundTarget,\n        totalsoFar = formData.totalsoFar; //console.log(film)\n  // const [formData, setFormData] = useState({\n  //   totalsoFar: ''\n  // });\n\n  let _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookingTotal = _useState4[0],\n      setBookingTotal = _useState4[1];\n\n  let tickets = 0;\n\n  const onChange = e => {\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = film.totalsoFar + parseInt(e.target.value);\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // console.log(formData)\n\n    updateFilm(formData, history);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"tyttyt\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"tyttyt\"));\n};\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({//profile: state.profile,\n  //film: state.film\n}); // const mapDispatchToProps = dispatch => ({\n//   })\n\n\nexport default connect(mapStateToProps, {\n  getFilmById,\n  updateFilm\n})(withRouter(CheckoutFilm)); //export default connect(null, mapDispatchToProps)(CheckoutFilm);\n//     <div>\n// <form>\n// <div className='checkout-page how-it-works'>\n//   <div className='checkout-header'>\n//     <div className='header-block'>\n//       <span>Film: {film.title}</span>\n//     </div>\n//     <div className='header-block'>\n//       <span>Date: {film.date} </span>\n//     </div>\n//     <div className='header-block'>\n//       <span>Price: £{film.ticketPrice} </span>\n//     </div>\n//     <div className='header-block'>\n//       <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n//     </div>\n//     <div \n//     className='header-block'>\n//       <span>Tickets sold: {film.totalsoFar}</span>\n//     </div>\n//   </div>\n//   </div>\n//   </form>\n//     <div className='header-block'>\n//       <input\n//         type='number'\n//         placeholder='Enter number of tickets'\n//         name='tickets'\n//         onChange={e => onChange(e)}\n//       />\n//     </div>\n//     <div className='header-block'>\n//       <span>Basket total: £{bookingTotal}</span>\n//     </div>\n//     <div>\n//     <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n//     </Link>\n//     </div>\n//     <div>\n//       <span onClick={e => onSubmit(e)}> \n//         <StripeCheckoutButton />\n//       </span>\n//     </div>\n//   </div>\n// the clearItem pattern:\n// onclick triggers clearItem\n// clearItem is dispatched to Props through clearItemFromCart with the item\n// sent to actions, actions finds it in types\n// the reducer filters out the item \n// goes through to root reducer, with new cart object \n// <Fragment>  \n//               <div>\n//                 <form>\n//                 <div className='checkout-page how-it-works'>\n//                   <div className='checkout-header'>\n//                     <div className='header-block'>\n//                       <span>Film: {film.title}</span>\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Date: {film.date} </span>\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Price: £{film.ticketPrice} </span>\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n//                     </div>\n//                     <div \n//                     className='header-block'>\n//                       <span>Tickets sold: {film.totalsoFar}</span>\n//                     </div>\n//                   </div>\n//                   </div>\n//                   </form>\n//                     <div className='header-block'>\n//                       <input\n//                         type='number'\n//                         placeholder='Enter number of tickets'\n//                         name='tickets'\n//                         onChange={e => onChange(e)}\n//                       />\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Basket total: £{bookingTotal}</span>\n//                     </div>\n//                     <div>\n//                     <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n//                     </Link>\n//                     </div>\n//                     <div>\n//                       <span onClick={e => onSubmit(e)}> \n//                         <StripeCheckoutButton />\n//                       </span>\n//                     </div>\n//                   </div>\n//           </Fragment>","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js"],"names":["React","useEffect","useState","Fragment","connect","useParams","Link","withRouter","Redirect","StripeCheckoutButton","PropTypes","getFilmById","updateFilm","CheckoutFilm","film","loading","match","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","console","log","params","id","bookingTotal","setBookingTotal","tickets","onChange","e","parseInt","target","value","onSubmit","preventDefault","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\n// import { clearItemFromCart, addItem, removeItem } from '../../reducers/cart/cart.actions';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({ film: {film, loading}, match, getFilmById, updateFilm, history }) => {\n\n  const [formData, setFormData] = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  });\n\n  console.log(film)\n\n  useEffect(() => { \n        getFilmById(match.params.id); \n\n  // if(film !== null) {   \n  if(!loading && film) {   \n  // if(!loading) {\n    //console.log('film')\n    setFormData({\n        // ...state,\n        //   totalsoFar: ''\n        _id: film._id,\n        user: film.user,\n        title: film.title,\n        cinema: film.cinema,\n        date: film.date,\n        image: film.image,\n        ticketPrice: film.ticketPrice,\n        crowdfundTarget: film.crowdfundTarget,\n        totalsoFar: film.totalsoFar\n        // //you don't actually need this form for the most part. \n        //if(film._id !== '') {_id: film._id }\n        // _id: loading || !film._id ? '' : film._id,\n        // user: loading || !film.user ? '' : film.user,\n        // title: loading || !film.title ? '' : film.title,\n        // cinema: loading || !film.cinema ? '' : film.cinema,\n        // date: loading || !film.date ? '' : film.date,\n        // image: loading || !film.image ? '' : film.image,\n        // ticketPrice: loading || !film.ticketPrice ? '' : film.ticketPrice,\n        // crowdfundTarget: loading || !film.crowdfundTarget ? '' : film.crowdfundTarget,\n        // totalsoFar: loading || !film.totalsoFar ? '' : film.totalsoFar\n          });\n       }\n     }, [loading, getFilmById]);\n\n\n  const { _id, title,date,cinema,image,ticketPrice,crowdfundTarget,totalsoFar } = formData;\n  //console.log(film)\n  \n  // const [formData, setFormData] = useState({\n  //   totalsoFar: ''\n  // });\n\n  let [bookingTotal, setBookingTotal] = useState(0);\n  let tickets = 0;\n  \n\n  const onChange = e => {\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = film.totalsoFar + parseInt(e.target.value)\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setFormData({ ...formData, totalsoFar: tickets });\n  } \n    \n  const onSubmit = (e) => {\n    e.preventDefault();\n    // console.log(formData)\n    updateFilm(formData, history);\n  };\n  \n\n\n  return (\n    <div className=\"film\">\n        \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n      <p>tyttyt</p>     \n\n    </div>\n  )\n}\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  //film: state.film\n});\n\n\n// const mapDispatchToProps = dispatch => ({\n\n//   })\n\nexport default connect(mapStateToProps, { getFilmById, updateFilm })(\n  withRouter(CheckoutFilm)\n);\n//export default connect(null, mapDispatchToProps)(CheckoutFilm);\n\n\n\n                //     <div>\n                // <form>\n                // <div className='checkout-page how-it-works'>\n                //   <div className='checkout-header'>\n                //     <div className='header-block'>\n                //       <span>Film: {film.title}</span>\n                //     </div>\n                    \n                //     <div className='header-block'>\n                //       <span>Date: {film.date} </span>\n                //     </div>\n                    \n                //     <div className='header-block'>\n                //       <span>Price: £{film.ticketPrice} </span>\n                //     </div>\n                    \n                //     <div className='header-block'>\n                //       <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n                //     </div>\n                //     <div \n                //     className='header-block'>\n                //       <span>Tickets sold: {film.totalsoFar}</span>\n                //     </div>\n                //   </div>\n                //   </div>\n                //   </form>\n                \n\n                //     <div className='header-block'>\n                //       <input\n                //         type='number'\n                //         placeholder='Enter number of tickets'\n                //         name='tickets'\n                //         onChange={e => onChange(e)}\n                //       />\n                //     </div>\n                //     <div className='header-block'>\n                //       <span>Basket total: £{bookingTotal}</span>\n                //     </div>\n                //     <div>\n                //     <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n                //     </Link>\n                //     </div>\n                //     <div>\n                //       <span onClick={e => onSubmit(e)}> \n                //         <StripeCheckoutButton />\n                //       </span>\n                //     </div>\n                //   </div>\n\n\n\n\n\n// the clearItem pattern:\n// onclick triggers clearItem\n// clearItem is dispatched to Props through clearItemFromCart with the item\n// sent to actions, actions finds it in types\n// the reducer filters out the item \n// goes through to root reducer, with new cart object \n\n\n\n\n// <Fragment>  \n//               <div>\n//                 <form>\n//                 <div className='checkout-page how-it-works'>\n//                   <div className='checkout-header'>\n//                     <div className='header-block'>\n//                       <span>Film: {film.title}</span>\n//                     </div>\n                    \n//                     <div className='header-block'>\n//                       <span>Date: {film.date} </span>\n//                     </div>\n                    \n//                     <div className='header-block'>\n//                       <span>Price: £{film.ticketPrice} </span>\n//                     </div>\n                    \n//                     <div className='header-block'>\n//                       <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n//                     </div>\n//                     <div \n//                     className='header-block'>\n//                       <span>Tickets sold: {film.totalsoFar}</span>\n//                     </div>\n//                   </div>\n//                   </div>\n//                   </form>\n                \n\n//                     <div className='header-block'>\n//                       <input\n//                         type='number'\n//                         placeholder='Enter number of tickets'\n//                         name='tickets'\n//                         onChange={e => onChange(e)}\n//                       />\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Basket total: £{bookingTotal}</span>\n//                     </div>\n//                     <div>\n//                     <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n//                     </Link>\n//                     </div>\n//                     <div>\n//                       <span onClick={e => onSubmit(e)}> \n//                         <StripeCheckoutButton />\n//                       </span>\n//                     </div>\n//                   </div>\n//           </Fragment>\n    \n"]},"metadata":{},"sourceType":"module"}