{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/App.js\";\n//so to return js, use curlys, push the () down, prefaced by return \n//loadfilms to fire on first load home screen DONE (I THINK, WATCH FOR IT)\n//when login, the page is broken, before refreshing to work. why? DONE \n//why is dashboard being called twice? see console logs \n//when logout, return to homepage DONE\n//when click on sat cin logo, return to homepage DONE\n//when a user adds a film, reload the page so that it appears immediatley.\n//add a buy tickets button with a cart, and a checkout page\n//add click throughs from film titles to an api from imdb.    \nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport HowItWorks from './components/howitworks/HowItWorks';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateFilm from './components/profile-forms/CreateFilm';\nimport Alert from './components/layout/Alert';\nimport Profile from './components/profile/Profile'; //import CheckoutPage from './components/booking-page/BookingPage';\n\nimport FilmPage from './components/booking-page/BookingPage'; //import CheckoutFilm from './components/checkout-film/Checkout-Film';\n//Redux\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport { loadFilms } from './actions/film';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport './App.scss';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  // useEffect(() => {\n  //   store.dispatch(loadUser())\n  // }, []);\n  // useEffect(() => {\n  //   store.dispatch(loadFilms())\n  // }, []);\n  return (// <Provider store={store}>\n    React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"dark-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile/:id\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/howitworks\",\n      component: HowItWorks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/api/film/:id\",\n      component: FilmPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/film/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/create-film\",\n      component: CreateFilm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"/>\")))) // </Provider>\n\n  );\n};\n\nexport default App; // <PrivateRoute exact path='/booking/:id' component={CheckoutPage} /> \n// <Route exact path='/dashboard' component={Dashboard} />\n// render={(props) => <CheckoutPage {...props}","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Register","Login","Navbar","Landing","HowItWorks","Dashboard","CreateFilm","Alert","Profile","FilmPage","Provider","store","loadUser","loadFilms","setAuthToken","PrivateRoute","localStorage","token","App"],"mappings":"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","sourcesContent":["//so to return js, use curlys, push the () down, prefaced by return \n\n//loadfilms to fire on first load home screen DONE (I THINK, WATCH FOR IT)\n//when login, the page is broken, before refreshing to work. why? DONE \n//why is dashboard being called twice? see console logs \n//when logout, return to homepage DONE\n//when click on sat cin logo, return to homepage DONE\n//when a user adds a film, reload the page so that it appears immediatley.\n//add a buy tickets button with a cart, and a checkout page\n//add click throughs from film titles to an api from imdb.    \nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login'; \nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport HowItWorks from './components/howitworks/HowItWorks';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateFilm from './components/profile-forms/CreateFilm';\nimport Alert from './components/layout/Alert';\nimport Profile from './components/profile/Profile';\n//import CheckoutPage from './components/booking-page/BookingPage';\nimport FilmPage from './components/booking-page/BookingPage';\n//import CheckoutFilm from './components/checkout-film/Checkout-Film';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport { loadFilms } from './actions/film'\t;\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport './App.scss';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\nconst App = () => { \n  // useEffect(() => {\n  //   store.dispatch(loadUser())\n  // }, []);\n\n  // useEffect(() => {\n  //   store.dispatch(loadFilms())\n  // }, []);\n\n\treturn (\n\t// <Provider store={store}>\n\t   <Router> \n\t    <Fragment >\n\t      \t\n\t      \t<Navbar />\n\t      \t<Route exact path='/' component={Landing} />\n\t      \t<section className=\"dark-overlay\">\n\t      \t\t<Alert />\n\t      \t\t<Switch>\n\t      \t\t\n\t      \t\t  <Route exact path='/register' component={Register} />\n\t      \t\t  <Route exact path='/login' component={Login} />\n\t      \t\t  <Route exact path='/profile/:id' component={Profile} />          \n\t      \t\t  <Route exact path='/howitworks' component={HowItWorks} />          \n\t      \t\t  <PrivateRoute exact path='/api/film/:id' component={FilmPage} /> \n\t      \t\t  <PrivateRoute exact path='/film/dashboard' component={Dashboard} />\n\t      \t\t  <PrivateRoute exact path='/create-film' component={CreateFilm} />\n\n\t      \t\t  />\n\t      \t\t</Switch>\n\t      \t</section>\n\t    </Fragment>\n\t  </Router> \n  \t// </Provider>\n );\n}\n\nexport default App;\n// <PrivateRoute exact path='/booking/:id' component={CheckoutPage} /> \n\t      \t\t  \t\n// <Route exact path='/dashboard' component={Dashboard} />\n// render={(props) => <CheckoutPage {...props} "]},"metadata":{},"sourceType":"module"}