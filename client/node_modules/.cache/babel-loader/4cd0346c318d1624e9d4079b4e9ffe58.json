{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js\";\nimport React, { useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { updateUserTickets } from '../../actions/auth';\nimport { getFilmById, updateFilm } from '../../actions/film';\n; //import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({\n  film: {\n    film,\n    loading\n  },\n  match,\n  getFilmById,\n  updateFilm,\n  updateUserTickets,\n  history\n}) => {\n  // let bookingTotal = 0;\n  //console.log(match)\n  console.log(film);\n\n  const _useState = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        filmData = _useState2[0],\n        setFilmData = _useState2[1];\n\n  let _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookingCost = _useState4[0],\n      setBookingCost = _useState4[1];\n\n  const _useState5 = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        ticketData = _useState6[0],\n        setTicketData = _useState6[1];\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData(_objectSpread({}, filmData, {\n      totalsoFar: totalTicketsBooked\n    }));\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData(_objectSpread({}, ticketData, {\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    }));\n  }; // const onSubmit = (e) => {\n  //   e.preventDefault();\n  //   updateFilm(filmData, history);\n  //   updateUserTickets(ticketData, history);\n  // };\n\n\n  if (film === null) return null;\n  return React.createElement(\"div\", {\n    className: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\" //onInput={e => setBookingCost({ parseInt({film.ticketPrice}) * parseInt(e.target.value)}) }\n    ,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingCost)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"test-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"* Please use the following test credit card for payments\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), \"4242 4242 4242 4242 - Exp 01/21 - CVV: 123\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    filmData: filmData,\n    ticketData: ticketData,\n    price: bookingCost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))));\n};\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateUserTickets: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  film: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  getFilmById,\n  updateFilm,\n  updateUserTickets\n})(withRouter(CheckoutFilm)); //<button>Press</button>","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js"],"names":["React","useState","Fragment","connect","useParams","useSelector","useDispatch","Link","withRouter","Redirect","StripeCheckoutButton","PropTypes","updateUserTickets","getFilmById","updateFilm","CheckoutFilm","film","loading","match","history","console","log","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","filmData","setFilmData","bookingCost","setBookingCost","numberOfTickets","cost","ticketData","setTicketData","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,kBAA3C;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,oBAAxC;AAA6D,C,CAE7D;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GADc;AAEpBC,EAAAA,KAFoB;AAGpBL,EAAAA,WAHoB;AAIpBC,EAAAA,UAJoB;AAKpBF,EAAAA,iBALoB;AAMpBO,EAAAA;AANoB,CAAD,KAML;AACd;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAHc,oBAIkBf,QAAQ,CAAC;AACvCqB,IAAAA,GAAG,EAAEN,IAAI,CAACM,GAD6B;AAEvCC,IAAAA,IAAI,EAAEP,IAAI,CAACO,IAF4B;AAGvCC,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAH2B;AAIvCC,IAAAA,IAAI,EAAET,IAAI,CAACS,IAJ4B;AAKvCC,IAAAA,MAAM,EAAEV,IAAI,CAACU,MAL0B;AAMvCC,IAAAA,KAAK,EAAEX,IAAI,CAACW,KAN2B;AAOvCC,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WAPqB;AAQvCC,IAAAA,eAAe,EAAEb,IAAI,CAACa,eARiB;AASvCC,IAAAA,UAAU,EAAEd,IAAI,CAACc;AATsB,GAAD,CAJ1B;AAAA;AAAA,QAIPC,QAJO;AAAA,QAIGC,WAJH;;AAAA,mBAgBsB/B,QAAQ,CAAC,CAAD,CAhB9B;AAAA;AAAA,MAgBTgC,WAhBS;AAAA,MAgBIC,cAhBJ;;AAAA,qBAkBsBjC,QAAQ,CAAC;AAC3CuB,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAD+B;AAE3CI,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WAFyB;AAG3CH,IAAAA,IAAI,EAAET,IAAI,CAACS,IAHgC;AAI3CC,IAAAA,MAAM,EAAEV,IAAI,CAACU,MAJ8B;AAK3CG,IAAAA,eAAe,EAAEb,IAAI,CAACa,eALqB;AAM3CC,IAAAA,UAAU,EAAEd,IAAI,CAACc,UAN0B;AAO3CK,IAAAA,eAAe,EAAE,CAP0B;AAQ3CC,IAAAA,IAAI,EAAE;AARqC,GAAD,CAlB9B;AAAA;AAAA,QAkBPC,UAlBO;AAAA,QAkBKC,aAlBL;;AA6Bd,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIC,YAAY,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAA3B;AACA,QAAIC,YAAY,GAAGH,QAAQ,CAAC1B,IAAI,CAACY,WAAN,CAAR,GAA6Bc,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAxD;AACA,QAAIE,kBAAkB,GAAG9B,IAAI,CAACc,UAAL,GAAkBY,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAnD;AACAV,IAAAA,cAAc,CAACW,YAAD,CAAd;AACAE,IAAAA,aAAa,CAACD,kBAAD,CAAb;AACAE,IAAAA,mBAAmB,CAACF,kBAAD,EAAqBD,YAArB,EAAmCJ,YAAnC,CAAnB;AACD,GAPD;;AASA,QAAMM,aAAa,GAAID,kBAAD,IAAwB;AAC5Cd,IAAAA,WAAW,mBAAKD,QAAL;AAAeD,MAAAA,UAAU,EAAEgB;AAA3B,OAAX;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAG,CAACF,kBAAD,EAAqBD,YAArB,EAAmCJ,YAAnC,KAAoD;AAC9EH,IAAAA,aAAa,mBAAKD,UAAL;AACZP,MAAAA,UAAU,EAAEgB,kBADA;AAEZV,MAAAA,IAAI,EAAES,YAFM;AAGZV,MAAAA,eAAe,EAAEM;AAHL,OAAb;AAID,GALD,CA1Cc,CAiDd;AACA;AACA;AACA;AACA;;;AAEA,MAAIzB,IAAI,KAAK,IAAb,EAAmB,OAAO,IAAP;AACnB,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaA,IAAI,CAACQ,KAAlB,CAFF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaR,IAAI,CAACS,IAAlB,MADF,CANF,EAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeT,IAAI,CAACY,WAApB,MADF,CAVF,EAcE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4BZ,IAAI,CAACa,eAAjC,MADF,CAdF,EAiBE;AACA,IAAA,SAAS,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBb,IAAI,CAACc,UAA1B,CAFF,CAjBF,CADF,CADA,CADF,EA6BM;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,yBAFd;AAGE,IAAA,IAAI,EAAC,SAHP,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAEU,CAAC,IAAID,QAAQ,CAACC,CAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7BN,EAsCM;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBP,WAAtB,CADF,CAtCN,EAyCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,EAAE,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CAzCN,EA6CM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,+CADA,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,oBAAD;AACC,IAAA,QAAQ,EAAEF,QADX;AAEC,IAAA,UAAU,EAAEM,UAFb;AAGC,IAAA,KAAK,EAAEJ,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CANF,CA7CN,CADA,CADF;AAkED,CAhID;;AAkIAlB,YAAY,CAACkC,SAAb,GAAyB;AACvBnC,EAAAA,UAAU,EAAEH,SAAS,CAACuC,IAAV,CAAeC,UADJ;AAEvBvC,EAAAA,iBAAiB,EAAED,SAAS,CAACuC,IAAV,CAAeC,UAFX;AAGvBtC,EAAAA,WAAW,EAAEF,SAAS,CAACuC,IAAV,CAAeC,UAHL;AAIvBnC,EAAAA,IAAI,EAAEL,SAAS,CAACyC,MAAV,CAAiBD;AAJA,CAAzB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCtC,EAAAA,IAAI,EAAEsC,KAAK,CAACtC;AADoB,CAAL,CAA7B;;AAIA,eAAeb,OAAO,CAACkD,eAAD,EAAkB;AACtCxC,EAAAA,WADsC;AAEtCC,EAAAA,UAFsC;AAGtCF,EAAAA;AAHsC,CAAlB,CAAP,CAIZJ,UAAU,CAACO,YAAD,CAJE,CAAf,C,CAMA","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { updateUserTickets } from '../../actions/auth';\nimport { getFilmById, updateFilm } from '../../actions/film';;\n\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({ \n  film: {film, loading}, \n  match, \n  getFilmById, \n  updateFilm, \n  updateUserTickets,\n  history }) => {\n  // let bookingTotal = 0;\n  //console.log(match)\n  console.log(film)\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState(0);\n\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n  const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n\n  // const onSubmit = (e) => {\n  //   e.preventDefault();\n  //   updateFilm(filmData, history);\n  //   updateUserTickets(ticketData, history);\n  // };\n\n  if (film === null) return null;\n  return (\n    <div className=\"film\">\n    <div>\n      <form>\n      <div className='checkout-page how-it-works'>\n        <div className='checkout-header'>\n          <div className='header-block'>\n\n            <span>Film: {film.title}</span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Date: {film.date} </span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          \n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        </div>\n        </div>\n        </form>\n      \n\n          <div className='header-block'>\n            <input\n              type='number'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              //onInput={e => setBookingCost({ parseInt({film.ticketPrice}) * parseInt(e.target.value)}) }\n              onChange={e => onChange(e)}\n            />\n          </div>\n          <div className='header-block'>\n            <span>Basket total: £{bookingCost}</span>\n          </div>\n          <div>\n          <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n          </Link>\n          </div>\n          <div>\n          <div className='test-warning'>\n          * Please use the following test credit card for payments  \n          <br />\n          4242 4242 4242 4242 - Exp 01/21 - CVV: 123\n          </div>\n            <span \n            //onClick={e => onSubmit(e)}\n            > \n              <StripeCheckoutButton\n               filmData={filmData}\n               ticketData={ticketData}\n               price={bookingCost} \n               />\n            </span>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  updateUserTickets: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  film: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default connect(mapStateToProps, { \n  getFilmById, \n  updateFilm, \n  updateUserTickets \n})(withRouter(CheckoutFilm));\n\n//<button>Press</button>\n              "]},"metadata":{},"sourceType":"module"}