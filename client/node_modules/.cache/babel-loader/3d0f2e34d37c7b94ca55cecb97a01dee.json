{"ast":null,"code":"import _objectSpread from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { UPDATE_FILM } from '../../actions/types'; // import { clearItemFromCart, addItem, removeItem } from '../../reducers/cart/cart.actions';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({\n  film: {\n    film,\n    loading\n  },\n  match,\n  getFilmById,\n  updateFilm,\n  history\n}) => {\n  //console.log(state.film)\n  // const ticketsTotal = useSelector(state => state.film.film.totalsoFar);\n  // const dispatch = useDispatch();\n  //console.log(ticketsTotal)\n  const _useState = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar // _id: '',\n    // user: '',\n    // title: '',\n    // date: '',\n    // cinema: '',\n    // image: '',\n    // ticketPrice: '',\n    // crowdfundTarget: '',\n    // totalsoFar: ''\n\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; //console.log(formData)\n  //console.log(film.totalsoFar)\n  // useEffect(() => { \n  //       getFilmById(match.params.id); \n  // // if(film !== null) {   \n  // if(!loading && film) {   \n  // // if(!loading) {\n  //   //console.log('film')\n  //   setFormData({\n  //       // ...state,\n  //       //   totalsoFar: ''\n  //       _id: film._id,\n  //       user: film.user,\n  //       title: film.title,\n  //       cinema: film.cinema,\n  //       date: film.date,\n  //       image: film.image,\n  //       ticketPrice: film.ticketPrice,\n  //       crowdfundTarget: film.crowdfundTarget,\n  //       totalsoFar: film.totalsoFar\n  //       // //you don't actually need this form for the most part. \n  //       //if(film._id !== '') {_id: film._id }\n  //       // _id: loading || !film._id ? '' : film._id,\n  //       // user: loading || !film.user ? '' : film.user,\n  //       // title: loading || !film.title ? '' : film.title,\n  //       // cinema: loading || !film.cinema ? '' : film.cinema,\n  //       // date: loading || !film.date ? '' : film.date,\n  //       // image: loading || !film.image ? '' : film.image,\n  //       // ticketPrice: loading || !film.ticketPrice ? '' : film.ticketPrice,\n  //       // crowdfundTarget: loading || !film.crowdfundTarget ? '' : film.crowdfundTarget,\n  //       // totalsoFar: loading || !film.totalsoFar ? '' : film.totalsoFar\n  //         });\n  //      }\n  //    }, [loading, getFilmById]);\n  // const { _id, title,date,cinema,image,ticketPrice,crowdfundTarget,totalsoFar } = formData;\n  // //console.log(film)\n  // // const [formData, setFormData] = useState({\n  // //   totalsoFar: ''\n  // // });\n\n\n  let _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookingTotal = _useState4[0],\n      setBookingTotal = _useState4[1];\n\n  let tickets = 0;\n\n  const onChange = e => {\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = ticketsTotal + parseInt(e.target.value);\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setFormData(_objectSpread({}, formData, {\n      totalsoFar: tickets\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //dispatch({ type: UPDATE_FILM, payload: tickets })\n    //console.log(formData)\n\n    updateFilm(formData, history);\n  };\n\n  if (film === null) return null;\n  return React.createElement(\"div\", {\n    className: \"film\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-page how-it-works\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Film: \", film.title)), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Date: \", film.date, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Tickets sold: \", film.totalsoFar))))), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Basket total: \\xA3\", bookingTotal)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Go Back\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(StripeCheckoutButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })))));\n};\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n}); // const mapDispatchToProps = dispatch => ({\n//   })\n\n\nexport default connect(mapStateToProps, {\n  getFilmById,\n  updateFilm\n})(withRouter(CheckoutFilm)); //export default connect(null, mapDispatchToProps)(CheckoutFilm);\n// the clearItem pattern:\n// onclick triggers clearItem\n// clearItem is dispatched to Props through clearItemFromCart with the item\n// sent to actions, actions finds it in types\n// the reducer filters out the item \n// goes through to root reducer, with new cart object \n// <Fragment>  \n//               <div>\n//                 <form>\n//                 <div className='checkout-page how-it-works'>\n//                   <div className='checkout-header'>\n//                     <div className='header-block'>\n//                       <span>Film: {film.title}</span>\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Date: {film.date} </span>\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Price: Â£{film.ticketPrice} </span>\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n//                     </div>\n//                     <div \n//                     className='header-block'>\n//                       <span>Tickets sold: {film.totalsoFar}</span>\n//                     </div>\n//                   </div>\n//                   </div>\n//                   </form>\n//                     <div className='header-block'>\n//                       <input\n//                         type='number'\n//                         placeholder='Enter number of tickets'\n//                         name='tickets'\n//                         onChange={e => onChange(e)}\n//                       />\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Basket total: Â£{bookingTotal}</span>\n//                     </div>\n//                     <div>\n//                     <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n//                     </Link>\n//                     </div>\n//                     <div>\n//                       <span onClick={e => onSubmit(e)}> \n//                         <StripeCheckoutButton />\n//                       </span>\n//                     </div>\n//                   </div>\n//           </Fragment>","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/checkout-film/Checkout-Film.js"],"names":["React","useEffect","useState","Fragment","connect","useParams","useSelector","useDispatch","Link","withRouter","Redirect","StripeCheckoutButton","PropTypes","getFilmById","updateFilm","UPDATE_FILM","CheckoutFilm","film","loading","match","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","bookingTotal","setBookingTotal","tickets","onChange","e","ticketsTotal","parseInt","target","value","onSubmit","preventDefault","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";;;AAAE,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACF,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,kBAA3C;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,oBAAxC;AACA,SAASC,WAAT,QAA4B,qBAA5B,C,CACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAR;AAAyBC,EAAAA,KAAzB;AAAgCN,EAAAA,WAAhC;AAA6CC,EAAAA,UAA7C;AAAyDM,EAAAA;AAAzD,CAAD,KAAwE;AAC7F;AAEE;AACA;AAEA;AAN2F,oBAO3DlB,QAAQ,CAAC;AACvCmB,IAAAA,GAAG,EAAEJ,IAAI,CAACI,GAD6B;AAEvCC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAF4B;AAGvCC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KAH2B;AAIvCC,IAAAA,IAAI,EAAEP,IAAI,CAACO,IAJ4B;AAKvCC,IAAAA,MAAM,EAAER,IAAI,CAACQ,MAL0B;AAMvCC,IAAAA,KAAK,EAAET,IAAI,CAACS,KAN2B;AAOvCC,IAAAA,WAAW,EAAEV,IAAI,CAACU,WAPqB;AAQvCC,IAAAA,eAAe,EAAEX,IAAI,CAACW,eARiB;AASvCC,IAAAA,UAAU,EAAEZ,IAAI,CAACY,UATsB,CAUvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBuC,GAAD,CAPmD;AAAA;AAAA,QAOpFC,QAPoF;AAAA,QAO1EC,WAP0E,kBA4B3F;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;;;AAvE2F,mBAyErD7B,QAAQ,CAAC,CAAD,CAzE6C;AAAA;AAAA,MAyEtF8B,YAzEsF;AAAA,MAyExEC,eAzEwE;;AA0E3F,MAAIC,OAAO,GAAG,CAAd;;AAGA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB;AACAF,IAAAA,OAAO,GAAGG,YAAY,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAjC;AACAP,IAAAA,eAAe,CAACK,QAAQ,CAACrB,IAAI,CAACU,WAAN,CAAR,GAA6BW,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAtC,CAAf;AACAT,IAAAA,WAAW,mBAAMD,QAAN;AAAgBD,MAAAA,UAAU,EAAEK;AAA5B,OAAX;AACD,GALD;;AAOA,QAAMO,QAAQ,GAAIL,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACM,cAAF,GADsB,CAEtB;AACA;;AACA5B,IAAAA,UAAU,CAACgB,QAAD,EAAWV,OAAX,CAAV;AACD,GALD;;AAQA,MAAIH,IAAI,KAAK,IAAb,EAAmB,OAAO,IAAP;AACnB,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaA,IAAI,CAACM,KAAlB,CAFF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaN,IAAI,CAACO,IAAlB,MADF,CANF,EAUE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeP,IAAI,CAACU,WAApB,MADF,CAVF,EAcE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4BV,IAAI,CAACW,eAAjC,MADF,CAdF,EAiBE;AACA,IAAA,SAAS,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBX,IAAI,CAACY,UAA1B,CAFF,CAjBF,CADF,CADA,CADI,EA6BA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,yBAFd;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7BA,EAqCA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBJ,YAAtB,CADF,CArCA,EAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,EAAE,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CAxCA,EA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,EAAEI,CAAC,IAAIK,QAAQ,CAACL,CAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA5CA,CAHhB,CADF;AA0DD,CAvJD;;AAyJApB,YAAY,CAAC2B,SAAb,GAAyB;AACvB7B,EAAAA,UAAU,EAAEF,SAAS,CAACgC,IAAV,CAAeC,UADJ;AAEvB;AACAhC,EAAAA,WAAW,EAAED,SAAS,CAACgC,IAAV,CAAeC,UAHL,CAIvB;AACA;;AALuB,CAAzB;;AAQA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChC;AACA9B,EAAAA,IAAI,EAAE8B,KAAK,CAAC9B;AAFoB,CAAL,CAA7B,C,CAMA;AAEA;;;AAEA,eAAeb,OAAO,CAAC0C,eAAD,EAAkB;AAAEjC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbL,UAAU,CAACO,YAAD,CADG,CAAf,C,CAGA;AAQA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["  import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams} from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport PropTypes from 'prop-types';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport { UPDATE_FILM } from '../../actions/types';\n// import { clearItemFromCart, addItem, removeItem } from '../../reducers/cart/cart.actions';\n//import './checkout-item.styles.scss';\n\nconst CheckoutFilm = ({ film: {film, loading}, match, getFilmById, updateFilm, history }) => {\n//console.log(state.film)\n\n  // const ticketsTotal = useSelector(state => state.film.film.totalsoFar);\n  // const dispatch = useDispatch();\n\n  //console.log(ticketsTotal)\n  const [formData, setFormData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n    // _id: '',\n    // user: '',\n    // title: '',\n    // date: '',\n    // cinema: '',\n    // image: '',\n    // ticketPrice: '',\n    // crowdfundTarget: '',\n    // totalsoFar: ''\n  });\n\n  //console.log(formData)\n  //console.log(film.totalsoFar)\n\n  // useEffect(() => { \n  //       getFilmById(match.params.id); \n\n  // // if(film !== null) {   \n  // if(!loading && film) {   \n  // // if(!loading) {\n  //   //console.log('film')\n  //   setFormData({\n  //       // ...state,\n  //       //   totalsoFar: ''\n  //       _id: film._id,\n  //       user: film.user,\n  //       title: film.title,\n  //       cinema: film.cinema,\n  //       date: film.date,\n  //       image: film.image,\n  //       ticketPrice: film.ticketPrice,\n  //       crowdfundTarget: film.crowdfundTarget,\n  //       totalsoFar: film.totalsoFar\n  //       // //you don't actually need this form for the most part. \n  //       //if(film._id !== '') {_id: film._id }\n  //       // _id: loading || !film._id ? '' : film._id,\n  //       // user: loading || !film.user ? '' : film.user,\n  //       // title: loading || !film.title ? '' : film.title,\n  //       // cinema: loading || !film.cinema ? '' : film.cinema,\n  //       // date: loading || !film.date ? '' : film.date,\n  //       // image: loading || !film.image ? '' : film.image,\n  //       // ticketPrice: loading || !film.ticketPrice ? '' : film.ticketPrice,\n  //       // crowdfundTarget: loading || !film.crowdfundTarget ? '' : film.crowdfundTarget,\n  //       // totalsoFar: loading || !film.totalsoFar ? '' : film.totalsoFar\n  //         });\n  //      }\n  //    }, [loading, getFilmById]);\n\n\n  // const { _id, title,date,cinema,image,ticketPrice,crowdfundTarget,totalsoFar } = formData;\n  // //console.log(film)\n  \n  // // const [formData, setFormData] = useState({\n  // //   totalsoFar: ''\n  // // });\n\n  let [bookingTotal, setBookingTotal] = useState(0);\n  let tickets = 0;\n  \n\n  const onChange = e => {\n    //setFormData({ ...formData, [e.target.name]: e.target.value });\n    tickets = ticketsTotal + parseInt(e.target.value)\n    setBookingTotal(parseInt(film.ticketPrice) * parseInt(e.target.value));\n    setFormData({ ...formData, totalsoFar: tickets });\n  } \n    \n  const onSubmit = (e) => {\n    e.preventDefault();\n    //dispatch({ type: UPDATE_FILM, payload: tickets })\n    //console.log(formData)\n    updateFilm(formData, history);\n  };\n  \n\n  if (film === null) return null;\n  return (\n    <div className=\"film\">\n        \n      \n                    <div>\n                <form>\n                <div className='checkout-page how-it-works'>\n                  <div className='checkout-header'>\n                    <div className='header-block'>\n\n                      <span>Film: {film.title}</span>\n                    </div>\n                    \n                    <div className='header-block'>\n                      <span>Date: {film.date} </span>\n                    </div>\n                    \n                    <div className='header-block'>\n                      <span>Price: Â£{film.ticketPrice} </span>\n                    </div>\n                    \n                    <div className='header-block'>\n                      <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n                    </div>\n                    <div \n                    className='header-block'>\n                      <span>Tickets sold: {film.totalsoFar}</span>\n                    </div>\n                  </div>\n                  </div>\n                  </form>\n                \n\n                    <div className='header-block'>\n                      <input\n                        type='number'\n                        placeholder='Enter number of tickets'\n                        name='tickets'\n                        onChange={e => onChange(e)}\n                      />\n                    </div>\n                    <div className='header-block'>\n                      <span>Basket total: Â£{bookingTotal}</span>\n                    </div>\n                    <div>\n                    <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n                    </Link>\n                    </div>\n                    <div>\n                      <span onClick={e => onSubmit(e)}> \n                        <StripeCheckoutButton />\n                      </span>\n                    </div>\n                  </div>\n\n\n    </div>\n  )\n}\n\nCheckoutFilm.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  //  film: PropTypes.object.isRequired,\n  //profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\n\n// const mapDispatchToProps = dispatch => ({\n\n//   })\n\nexport default connect(mapStateToProps, { getFilmById, updateFilm })(\n  withRouter(CheckoutFilm)\n);\n//export default connect(null, mapDispatchToProps)(CheckoutFilm);\n\n\n\n\n\n\n\n// the clearItem pattern:\n// onclick triggers clearItem\n// clearItem is dispatched to Props through clearItemFromCart with the item\n// sent to actions, actions finds it in types\n// the reducer filters out the item \n// goes through to root reducer, with new cart object \n\n\n\n\n// <Fragment>  \n//               <div>\n//                 <form>\n//                 <div className='checkout-page how-it-works'>\n//                   <div className='checkout-header'>\n//                     <div className='header-block'>\n//                       <span>Film: {film.title}</span>\n//                     </div>\n                    \n//                     <div className='header-block'>\n//                       <span>Date: {film.date} </span>\n//                     </div>\n                    \n//                     <div className='header-block'>\n//                       <span>Price: Â£{film.ticketPrice} </span>\n//                     </div>\n                    \n//                     <div className='header-block'>\n//                       <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n//                     </div>\n//                     <div \n//                     className='header-block'>\n//                       <span>Tickets sold: {film.totalsoFar}</span>\n//                     </div>\n//                   </div>\n//                   </div>\n//                   </form>\n                \n\n//                     <div className='header-block'>\n//                       <input\n//                         type='number'\n//                         placeholder='Enter number of tickets'\n//                         name='tickets'\n//                         onChange={e => onChange(e)}\n//                       />\n//                     </div>\n//                     <div className='header-block'>\n//                       <span>Basket total: Â£{bookingTotal}</span>\n//                     </div>\n//                     <div>\n//                     <Link className='btn btn-light my-1' to='/dashboard'>Go Back\n//                     </Link>\n//                     </div>\n//                     <div>\n//                       <span onClick={e => onSubmit(e)}> \n//                         <StripeCheckoutButton />\n//                       </span>\n//                     </div>\n//                   </div>\n//           </Fragment>\n    \n"]},"metadata":{},"sourceType":"module"}