{"ast":null,"code":"import _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js\";\n// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n// separate the creation and update functions DONE\n//need to separete the films and users, and update separately DONE  \n// create tickets, return to dashboard with tickets on dashboard\n// book through landing page, go to a page that tells user your ticket will be sent when film confirmed\n//how to trigger rerender after booking?\n//how to push through payment without auth? trace where this is happening\n// only after loggin in and out are you permitted to buy a ticket??\n// getfilm and getfilms have same outcome, all films.\n// once they book, take user to their dashboard, with tickets and any films created  \n// can only do this with stripe payouts on server \n// 3 update film immediately with new ticket number\n// 4 with two sections, one for films, one for tickets \nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport CheckoutFilm from '../checkout-film/Checkout-Film'; // import { getCurrentProfile, getFilmById } from '../../actions/profile';\n// import { updateFilm } from '../../actions/profile';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button'; //import queryString from 'query-string';\n\nconst FilmPage = ({\n  updateFilm,\n  getFilmById,\n  film: {\n    film,\n    loading\n  },\n  match,\n  // profile: { profile, loading },\n  history\n}) => {\n  useEffect(() => {\n    getFilmById(match.params._id);\n  }, [loading, getFilmById]); // next - how the hell did match change?\n  // console.log(match)\n  //console.log(film)\n  //console.log(match.params.id);\n  //why does this log 4 times? \n  //and why doesn update not work at route?\n  //go back to the video to work this out. what is req.user.i\n  // console.log(film);\n  //this creates the state\n\n  const _useState = useState({\n    _id: '',\n    user: '',\n    title: '',\n    date: '',\n    cinema: '',\n    image: '',\n    ticketPrice: '',\n    crowdfundTarget: '',\n    totalsoFar: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; // \t//set's the values of the state\n\n\n  useEffect(() => {\n    getFilmById(match.params.id);\n\n    if (!loading && film) {\n      setFormData({\n        _id: film._id,\n        user: film.user,\n        title: film.title,\n        cinema: film.cinema,\n        date: film.date,\n        image: film.image,\n        ticketPrice: film.ticketPrice,\n        crowdfundTarget: film.crowdfundTarget,\n        totalsoFar: film.totalsoFar\n      });\n    }\n  }, [loading, getFilmById]);\n  const _id = formData._id,\n        user = formData.user,\n        title = formData.title,\n        date = formData.date,\n        cinema = formData.cinema,\n        image = formData.image,\n        ticketPrice = formData.ticketPrice,\n        crowdfundTarget = formData.crowdfundTarget,\n        totalsoFar = formData.totalsoFar; //the pattern is this.\n  // 1 initiate consts with above\t\t\n  // 2 onchange calls setformdata with values attached\n  // 3 when is setformdata called, interms of being wrapped in useEffect(fetches current film)?\n  // 4 setFormData sets initial state to values.  \n  // 5 so state values are either '', or the value attached to film. which is there. but not getting them \n  // 6 are we reloading film. is that the problem? \n\n  if (film === null) return null;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(CheckoutFilm, {\n    film: film,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), \"}\");\n};\n\nFilmPage.propTypes = {\n  updateFilm: PropTypes.func.isRequired,\n  // getCurrentProfile: PropTypes.func.isRequired,\n  getFilmById: PropTypes.func.isRequired,\n  film: PropTypes.object.isRequired //profile: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  //profile: state.profile,\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  getFilmById\n})(withRouter(FilmPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/booking-page/BookingPage.js"],"names":["React","useEffect","useState","Fragment","useParams","Link","withRouter","Redirect","PropTypes","Spinner","connect","getFilmById","updateFilm","CheckoutFilm","StripeCheckoutButton","FilmPage","film","loading","match","history","params","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","formData","setFormData","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["// todo \n//at the moent - trying to get the screen to update with new model\n// 1 enter number of tickets, calculate price,  go to booking payment DONE\n// 2 send new object to createFilm - now can't update, creates new film. \n\t// separate the creation and update functions DONE\n\t//need to separete the films and users, and update separately DONE  \n\t// create tickets, return to dashboard with tickets on dashboard\n\n// book through landing page, go to a page that tells user your ticket will be sent when film confirmed\n//how to trigger rerender after booking?\n//how to push through payment without auth? trace where this is happening\n// only after loggin in and out are you permitted to buy a ticket??\n// getfilm and getfilms have same outcome, all films.\n\n// once they book, take user to their dashboard, with tickets and any films created  \n// can only do this with stripe payouts on server \n// 3 update film immediately with new ticket number\n// 4 with two sections, one for films, one for tickets \n\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useParams} from 'react-router';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { connect } from 'react-redux';\nimport { getFilmById, updateFilm } from '../../actions/film';\nimport CheckoutFilm from '../checkout-film/Checkout-Film'\n// import { getCurrentProfile, getFilmById } from '../../actions/profile';\n// import { updateFilm } from '../../actions/profile';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n//import queryString from 'query-string';\n\nconst FilmPage = ({\n\tupdateFilm,\n\tgetFilmById,\n\tfilm: {film, loading},\n\tmatch,\n\t// profile: { profile, loading },\n\thistory\n}) => {\n\tuseEffect(() => {\n\t\tgetFilmById(match.params._id);\n  \t}, [loading, getFilmById]);\n\t// next - how the hell did match change?\n\n\n\n\t// console.log(match)\n\t//console.log(film)\n\t//console.log(match.params.id);\n\t//why does this log 4 times? \n\t//and why doesn update not work at route?\n\t//go back to the video to work this out. what is req.user.i\n\t// console.log(film);\n\t\n//this creates the state\n\tconst [formData, setFormData] = useState({\n\t\t_id: '',\n\t\tuser: '',\n\t\ttitle: '',\n\t\tdate: '',\n\t\tcinema: '',\n\t\timage: '',\n\t\tticketPrice: '',\n\t\tcrowdfundTarget: '',\n\t\ttotalsoFar: ''\n\t});\n\t\n// \t//set's the values of the state\n\tuseEffect(() => {\t\n      \tgetFilmById(match.params.id);\t\n\n\tif(!loading && film) {   \n\t\tsetFormData({\n\t      _id: film._id,\n\t      user: film.user,\n\t      title: film.title,\n\t      cinema: film.cinema,\n\t      date: film.date,\n\t      image: film.image,\n\t      ticketPrice: film.ticketPrice,\n\t      crowdfundTarget: film.crowdfundTarget,\n\t      totalsoFar: film.totalsoFar\n\t    \t\t});\n\t\t\t }\n\t   }, [loading, getFilmById]);\n\n\tconst {\n\t\t_id,\n\t\tuser,\n\t\ttitle,\n\t\tdate,\n\t\tcinema,\n\t\timage,\n\t\tticketPrice,\n\t\tcrowdfundTarget,\n\t\ttotalsoFar\n\t} = formData;\n\n\t//the pattern is this.\n\t// 1 initiate consts with above\t\t\n\t// 2 onchange calls setformdata with values attached\n\t// 3 when is setformdata called, interms of being wrapped in useEffect(fetches current film)?\n\t// 4 setFormData sets initial state to values.  \n\t// 5 so state values are either '', or the value attached to film. which is there. but not getting them \n\t// 6 are we reloading film. is that the problem? \n\t\n\tif (film === null) return null;\n\treturn (\n\t\t<div>\n\t\t\t<CheckoutFilm\n\t\t\tfilm={film}\n\t\t\t />\n\t\t\t}\n\t\t</div>\n\t\t)\n\t};\n\n\nFilmPage.propTypes = {\n\tupdateFilm: PropTypes.func.isRequired,\n\t// getCurrentProfile: PropTypes.func.isRequired,\n\tgetFilmById: PropTypes.func.isRequired,\n\tfilm: PropTypes.object.isRequired,\n\t//profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\t//profile: state.profile,\n\tfilm: state.film\n});\n\nexport default connect(mapStateToProps, { updateFilm, getFilmById })(\n\twithRouter(FilmPage)\n);"]},"metadata":{},"sourceType":"module"}