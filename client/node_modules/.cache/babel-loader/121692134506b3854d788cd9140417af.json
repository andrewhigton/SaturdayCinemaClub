{"ast":null,"code":"import _slicedToArray from \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\nconst Films = ({\n  loadFilms //films: {film, loading} \n\n}) => {\n  // thikn about this, you're trying to get films from state, which is null onlaoding\n  // so how do you get the films to load before landing page loads? \n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        films = _useState2[0],\n        setAllFilms = _useState2[1]; // useEffect(() => {\n  //    axios\n  //      .get(\"http://localhost:5000/api/film\")\n  //      .then(result => setAllFilms(result.data));\n  //  }, []);\n  // useEffect(() => {\n  //     loadFilms(\n  //     \tsetAllFilms(film));\n  //   \t}, [loadFilms])\n  // loadFilms())\n  //console.log(allFilms);\n  //console.log(film);\n  //allFilms = setAllFilms(loadFilms());\n  // useEffect(() => {\t\t\n  // \tconst fetchData = async () => {\n  // \t\tconst data = await loadFilms();\n  // \t\t//setFilm(data)\n  // \t\t}\n  // \t\tfetchData()\n  // \t\t}, []); \n\n\n  useEffect(() => {\n    setAllFilms(loadFilms());\n  }, [loadFilms]); //console.log(film)\t\n  // return (\n  // \t<div>\n  // \t\t<h1>hello</h1>\n  // \t</div>\n  // \t)\n\n  return film === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, film.map(item => React.createElement(Film, {\n    key: item._id,\n    film: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))));\n};\n\nFilms.propTypes = {\n  loadFilms: PropTypes.func.isRequired,\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {\n  loadFilms\n})(Films); //export default connect(mapStateToProps)(Films);\n// <li>\n//     <a onClick={logout} href=\"#!\">\n//     <i className=\"fas fa-sign-out-alt\" />{' '}\n//     <span className=\"hide-sm\">Logout</span>\n//     </a>\n// </li>        \n// <li> \n//     <span className=\"hide-sm\" value={films}>Films</span>\n// </li>\n// console.log()","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/components/films/Films.js"],"names":["React","Fragment","useState","useEffect","axios","Link","PropTypes","Spinner","connect","loadFilms","Film","Films","films","setAllFilms","film","map","item","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AACdF,EAAAA,SADc,CAEd;;AAFc,CAAD,KAGP;AAEN;AACA;AAHM,oBAKuBP,QAAQ,EAL/B;AAAA;AAAA,QAKCU,KALD;AAAA,QAKQC,WALR,kBAON;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEC;AACC;AACA;AACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACbU,IAAAA,WAAW,CAACJ,SAAS,EAAV,CAAX;AACA,GAFM,EAEJ,CAACA,SAAD,CAFI,CAAT,CAjCM,CAoCN;AAEA;AACA;AACA;AACA;AAEA;;AAEA,SAAOK,IAAI,KAAK,IAAT,GAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,GAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,IAAI,CAACC,GAAL,CAASC,IAAI,IAClB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAqB,IAAA,IAAI,EAAED,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CADD,CADN,CADE,CAFP;AAYE,CA5DH;;AA8DAL,KAAK,CAACO,SAAN,GAAkB;AACjBT,EAAAA,SAAS,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADT;AAEjBR,EAAAA,KAAK,EAAEN,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCX,EAAAA,KAAK,EAAEW,KAAK,CAACT;AADoB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAwCE,KAAxC,CAAf,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/spinner';\nimport { connect } from 'react-redux';\nimport { loadFilms } from '../../actions/film';\nimport Film from './Film';\n\n\nconst Films = ({ \n\tloadFilms,\n\t//films: {film, loading} \n\t}) => {\n\t\n\t// thikn about this, you're trying to get films from state, which is null onlaoding\n\t// so how do you get the films to load before landing page loads? \n\n\tconst [films, setAllFilms] = useState();\n\n\t// useEffect(() => {\n //    axios\n //      .get(\"http://localhost:5000/api/film\")\n //      .then(result => setAllFilms(result.data));\n //  }, []);\n\n\n\n\t// useEffect(() => {\n\t//     loadFilms(\n\t//     \tsetAllFilms(film));\n\t//   \t}, [loadFilms])\n\n\t\t// loadFilms())\n  \t//console.log(allFilms);\n  \t//console.log(film);\n\t//allFilms = setAllFilms(loadFilms());\n  \n\t// useEffect(() => {\t\t\n\t// \tconst fetchData = async () => {\n\t// \t\tconst data = await loadFilms();\n\t// \t\t//setFilm(data)\n\t// \t\t}\n\t// \t\tfetchData()\n\t// \t\t}, []); \n\t\n\tuseEffect(() => {\n    setAllFilms(loadFilms());\n  \t}, [loadFilms]);\n\t//console.log(film)\t\n\n\t// return (\n\t// \t<div>\n\t// \t\t<h1>hello</h1>\n\t// \t</div>\n\n\t// \t)\n\n\treturn film === null ? <Spinner /> :\n     (\n        <Fragment>\n    \t\t<ul>\n\t           <div>\n\t           {film.map(item => (\n    \t\t\t\t<Film key={item._id} film={item} />\n              \t))}\n              </div>\t\n          \t</ul>\n        </Fragment>    \t\n      \t\t)\n \t};\n \nFilms.propTypes = {\n\tloadFilms: PropTypes.func.isRequired,\n\tfilms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilms: state.film\n});\n\nexport default connect(mapStateToProps, { loadFilms })(Films);\n//export default connect(mapStateToProps)(Films);\n\n// <li>\n//     <a onClick={logout} href=\"#!\">\n//     <i className=\"fas fa-sign-out-alt\" />{' '}\n//     <span className=\"hide-sm\">Logout</span>\n//     </a>\n// </li>        \n// <li> \n//     <span className=\"hide-sm\" value={films}>Films</span>\n// </li>\n\n\n\t// console.log()\n          "]},"metadata":{},"sourceType":"module"}