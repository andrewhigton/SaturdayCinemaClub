{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_FILM, UPDATE_FILM, GET_FILMS, FILM_ERROR } from './types'; //import setAuthToken from '../utils/setAuthToken';\n// Get all Films\n\nexport const loadFilms = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/film');\n    dispatch({\n      type: GET_FILMS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FILM_ERROR //payload: { msg: err.response.statusText, status: err.response.status }\n\n    });\n  }\n}; //Get profile by ID\n\nexport const getFilmById = film_id => async dispatch => {\n  try {\n    //this is the next problem. it's not returning anything. why?\n    const res = await axios.get(`/api/film/booking/${film_id}`); // console.log(res)\n\n    dispatch({\n      type: GET_FILM,\n      // payload: { msg: res.data }\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FILM_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const updateFilm = (formData, history, film_id) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // const res = await axios.put('/api/profile/booking', formData, config);\n\n    const res = await axios.put('/api/film/booking', formData, config); //console.log(res);\n\n    dispatch({\n      type: UPDATE_FILM,\n      payload: res.data\n    });\n    dispatch(setAlert('Thanks for your booking', 'success')); //still doesn't work, first time\n    //history.push(getFilmById(`/api/film/booking/${film_id}`));\n\n    history.push('/');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: FILM_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // // Register User\n// export const register = ({ name, email, password }) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n//   const body = JSON.stringify({ name, email, password });\n//   try {\n//     const res = await axios.post('/api/users', body, config);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: REGISTER_FAIL\n//     });\n//   }\n// };\n// //Login User\n// export const login = (email, password) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n//   const body = JSON.stringify({ email, password });\n//   try {\n//     const res = await axios.post('/api/auth', body, config);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: LOGIN_FAIL\n//     });\n//   }\n// };\n// //Logout / Clear Profile\n// export const logout = () => dispatch => {\n//   // dispatch({ type: CLEAR_PROFILE });\n//   dispatch({ type: LOGOUT });\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/mern/SatCinemaClub/client/src/actions/film.js"],"names":["axios","setAlert","GET_FILM","UPDATE_FILM","GET_FILMS","FILM_ERROR","loadFilms","dispatch","res","get","type","payload","data","err","getFilmById","film_id","msg","response","statusText","status","updateFilm","formData","history","config","headers","put","push","errors","forEach","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_FILM,\n  UPDATE_FILM,\n  GET_FILMS,\n  FILM_ERROR\n} from './types';\n//import setAuthToken from '../utils/setAuthToken';\n\n// Get all Films\nexport const loadFilms = () => async dispatch => {\n  \n  try {\n    const res = await axios.get('/api/film');\n\n    dispatch({\n      type: GET_FILMS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FILM_ERROR,\n      //payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n  };\n\n  \n//Get profile by ID\nexport const getFilmById = film_id => async dispatch => {\n  try {\n    //this is the next problem. it's not returning anything. why?\n    const res = await axios.get(`/api/film/booking/${film_id}`);\n    // console.log(res)\n    dispatch({\n      type: GET_FILM,\n      // payload: { msg: res.data }\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FILM_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const updateFilm = (formData, history, film_id) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // const res = await axios.put('/api/profile/booking', formData, config);\n    const res = await axios.put('/api/film/booking', formData, config);\n    //console.log(res);\n    dispatch({\n      type: UPDATE_FILM,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Thanks for your booking', 'success'));\n    //still doesn't work, first time\n    //history.push(getFilmById(`/api/film/booking/${film_id}`));\n    history.push('/');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: FILM_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n\n// // Register User\n// export const register = ({ name, email, password }) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   const body = JSON.stringify({ name, email, password });\n\n//   try {\n//     const res = await axios.post('/api/users', body, config);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n  \n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: REGISTER_FAIL\n//     });\n//   }\n// };\n\n// //Login User\n// export const login = (email, password) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   const body = JSON.stringify({ email, password });\n\n//   try {\n//     const res = await axios.post('/api/auth', body, config);\n\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data\n//     });\n  \n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: LOGIN_FAIL\n//     });\n//   }\n// };\n\n// //Logout / Clear Profile\n// export const logout = () => dispatch => {\n//   // dispatch({ type: CLEAR_PROFILE });\n//   dispatch({ type: LOGOUT });\n// };"]},"metadata":{},"sourceType":"module"}